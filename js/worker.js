// =========================================================================
//
// xmldom.js - an XML DOM parser in JavaScript.
//
//	This is the classic DOM that has shipped with XML for <SCRIPT>
//  since the beginning. For a more standards-compliant DOM, you may
//  wish to use the standards-compliant W3C DOM that is included
//  with XML for <SCRIPT> versions 3.0 and above
//
// version 3.1
//
// =========================================================================
//
// Copyright (C) 2000 - 2002, 2003 Michael Houghton (mike@idle.org), Raymond Irving and David Joham (djoham@yahoo.com)
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.

// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//
// Visit the XML for <SCRIPT> home page at http://xmljs.sourceforge.net
//


// =========================================================================
// =========================================================================
// =========================================================================

// CONSTANTS

// =========================================================================
// =========================================================================
// =========================================================================

//define the characters which constitute whitespace, and quotes
var whitespace = "\n\r\t ";
var quotes = "\"'";


// =========================================================================
// =========================================================================
// =========================================================================

// CONVENIENCE FUNCTIONS

// =========================================================================
// =========================================================================
// =========================================================================


function convertEscapes(str) {
    /*******************************************************************************************************************
    function: convertEscapes

    Author: David Joham <djoham@yahoo.com>

    Description:
        Characters such as less-than signs, greater-than signs and ampersands are
        illegal in XML syntax and must be escaped before being inserted into the DOM.
        This function is a convience function to take those escaped characters and
        return them to their original values for processing outside the parser

        This XML Parser automagically converts the content of the XML elements to
        their non-escaped values when xmlNode.getText() is called for every element
        except CDATA.

        EXAMPLES:

        &amp; == &
        &lt; == <
        &gt; == >

    *********************************************************************************************************************/
    // not all Konqueror installations have regex support for some reason. Here's the original code using regexes
    // that is probably a little more efficient if it matters to you
    /*
    var escAmpRegEx = /&amp;/g;
    var escLtRegEx = /&lt;/g;
    var escGtRegEx = /&gt;/g;

    str = str.replace(escAmpRegEx, "&");
    str = str.replace(escLtRegEx, "<");
    str = str.replace(escGtRegEx, ">");
    */
    var gt;

    //&lt;
    gt = -1;
    while (str.indexOf("&lt;", gt + 1) > -1) {
        var gt = str.indexOf("&lt;", gt + 1);
        var newStr = str.substr(0, gt);
        newStr += "<";
        newStr = newStr + str.substr(gt + 4, str.length);
        str = newStr;
    }

    //&gt;
    gt = -1;
    while (str.indexOf("&gt;", gt + 1) > -1) {
        var gt = str.indexOf("&gt;", gt + 1);
        var newStr = str.substr(0, gt);
        newStr += ">";
        newStr = newStr + str.substr(gt + 4, str.length);
        str = newStr;
    }

    //&amp;
    gt = -1;
    while (str.indexOf("&amp;", gt + 1) > -1) {
        var gt = str.indexOf("&amp;", gt + 1);
        var newStr = str.substr(0, gt);
        newStr += "&";
        newStr = newStr + str.substr(gt + 5, str.length);
        str = newStr;
    }

    return str;
} // end function convertEscapes


function convertToEscapes(str) {
    /*******************************************************************************************************************
    function: convertToEscapes

    Author: David Joham djoham@yahoo.com

    Description:
        Characters such as less-than signs, greater-than signs and ampersands are
        illegal in XML syntax. This function is a convience function to escape those
        characters out to there legal values.

        EXAMPLES:

        < == &lt;
        > == &gt;
        & == &amp;
    *********************************************************************************************************************/
    // not all Konqueror installations have regex support for some reason. Here's the original code using regexes
    // that is probably a little more efficient if it matters to you
    /*
    var escAmpRegEx = /&/g;
    var escLtRegEx = /</g;
    var escGtRegEx = />/g;
    str = str.replace(escAmpRegEx, "&amp;");
    str = str.replace(escLtRegEx, "&lt;");
    str = str.replace(escGtRegEx, "&gt;");
    */

    // start with &
    var gt = -1;
    while (str.indexOf("&", gt + 1) > -1) {
        gt = str.indexOf("&", gt + 1);
        var newStr = str.substr(0, gt);
        newStr += "&amp;";
        newStr = newStr + str.substr(gt + 1, str.length);
        str = newStr;
    }

    // now <
    gt = -1;
    while (str.indexOf("<", gt + 1) > -1) {
        var gt = str.indexOf("<", gt + 1);
        var newStr = str.substr(0, gt);
        newStr += "&lt;";
        newStr = newStr + str.substr(gt + 1, str.length);
        str = newStr;
    }

    //now >
    gt = -1;
    while (str.indexOf(">", gt + 1) > -1) {
        var gt = str.indexOf(">", gt + 1);
        var newStr = str.substr(0, gt);
        newStr += "&gt;";
        newStr = newStr + str.substr(gt + 1, str.length);
        str = newStr;
    }


    return str;
} // end function convertToEscapes


function _displayElement(domElement, strRet) {
    /*******************************************************************************************************************
    function:       _displayElement

    Author: djoham@yahoo.com

    Description:
        returns the XML string associated with the DOM element passed in
        recursively calls itself if child elements are found

    *********************************************************************************************************************/
    if(domElement==null) {
        return;
    }
    if(!(domElement.nodeType=='ELEMENT')) {
        return;
    }

    var tagName = domElement.tagName;
    var tagInfo = "";
    tagInfo = "<" + tagName;

    // attributes
    var attributeList = domElement.getAttributeNames();

    for(var intLoop = 0; intLoop < attributeList.length; intLoop++) {
        var attribute = attributeList[intLoop];
        tagInfo = tagInfo + " " + attribute + "=";
        tagInfo = tagInfo + "\"" + domElement.getAttribute(attribute) + "\"";
    }

    //close the element name
    tagInfo = tagInfo + ">";

    strRet=strRet+tagInfo;

    // children
    if(domElement.children!=null) {
        var domElements = domElement.children;
        for(var intLoop = 0; intLoop < domElements.length; intLoop++) {
            var childNode = domElements[intLoop];
            if(childNode.nodeType=='COMMENT') {
                strRet = strRet + "<!--" + childNode.content + "-->";
            }

            else if(childNode.nodeType=='TEXT') {
                var cont = trim(childNode.content,true,true);
                strRet = strRet + childNode.content;
            }

            else if (childNode.nodeType=='CDATA') {
                var cont = trim(childNode.content,true,true);
                strRet = strRet + "<![CDATA[" + cont + "]]>";
            }

            else {
                strRet = _displayElement(childNode, strRet);
            }
        } // end looping through the DOM elements
    } // end checking for domElements.children = null

    //ending tag
    strRet = strRet + "</" + tagName + ">";
    return strRet;
} // end function displayElement


function firstWhiteChar(str,pos) {
    /*******************************************************************************************************************
    function: firstWhiteChar

    Author: may106@psu.edu ?

    Description:
        return the position of the first whitespace character in str after position pos

    *********************************************************************************************************************/
    if (isEmpty(str)) {
        return -1;
    }

    while(pos < str.length) {
        if (whitespace.indexOf(str.charAt(pos))!=-1) {
            return pos;
        }
        else {
            pos++;
        }
    }
    return str.length;
} // end function firstWhiteChar


function isEmpty(str) {
    /*******************************************************************************************************************
    function: isEmpty

    Author: mike@idle.org

    Description:
        convenience function to identify an empty string

    *********************************************************************************************************************/
    return (str==null) || (str.length==0);

} // end function isEmpty

function trim(trimString, leftTrim, rightTrim) {
    /*******************************************************************************************************************
    function: trim

    Author: may106@psu.edu

    Description:
        helper function to trip a string (trimString) of leading (leftTrim)
        and trailing (rightTrim) whitespace

    *********************************************************************************************************************/
    if (isEmpty(trimString)) {
        return "";
    }

    // the general focus here is on minimal method calls - hence only one
    // substring is done to complete the trim.

    if (leftTrim == null) {
        leftTrim = true;
    }

    if (rightTrim == null) {
        rightTrim = true;
    }

    var left=0;
    var right=0;
    var i=0;
    var k=0;

    // modified to properly handle strings that are all whitespace
    if (leftTrim == true) {
        while ((i<trimString.length) && (whitespace.indexOf(trimString.charAt(i++))!=-1)) {
            left++;
        }
    }
    if (rightTrim == true) {
        k=trimString.length-1;
        while((k>=left) && (whitespace.indexOf(trimString.charAt(k--))!=-1)) {
            right++;
        }
    }
    return trimString.substring(left, trimString.length - right);
} // end function trim









// =========================================================================
// =========================================================================
// =========================================================================
// XML DOC FUNCTIONS
// =========================================================================
// =========================================================================
// =========================================================================

function XMLDoc(source, errFn) {
    /*******************************************************************************************************************
    function:       XMLDoc

    Author: mike@idle.org

    Description:
        a constructor for an XML document
        source: the string containing the document
        errFn: the (optional) function used to log errors
    *********************************************************************************************************************/
    // stack for document construction

    this.topNode=null;

    // set up the properties and methods for this object

    this.errFn = errFn;          // user defined error functions

    this.createXMLNode = _XMLDoc_createXMLNode;
    this.error = _XMLDoc_error;
    this.getUnderlyingXMLText = _XMLDoc_getUnderlyingXMLText;
    this.handleNode = _XMLDoc_handleNode;
    this.hasErrors = false;      // were errors found during the parse?
    this.insertNodeAfter =  _XMLDoc_insertNodeAfter;
    this.insertNodeInto = _XMLDoc_insertNodeInto;
    this.loadXML = _XMLDoc_loadXML;
	this.parse = _XMLDoc_parse;
    this.parseAttribute = _XMLDoc_parseAttribute;
    this.parseDTD = _XMLDoc_parseDTD;
    this.parsePI = _XMLDoc_parsePI;
    this.parseTag = _XMLDoc_parseTag;
    this.removeNodeFromTree = _XMLDoc_removeNodeFromTree;
    this.replaceNodeContents = _XMLDoc_replaceNodeContents;
    this.selectNode = _XMLDoc_selectNode;
	this.selectNodeText = _XMLDoc_selectNodeText;
	this.source = source;        // the string source of the document

    // parse the document

    if (this.parse()) {
        // we've run out of markup - check the stack is now empty
        if (this.topNode!=null) {
            return this.error("expected close " + this.topNode.tagName);
        }
        else {
            return true;
        }
    }
} // end function XMLDoc


function _XMLDoc_createXMLNode(strXML) {
    /*******************************************************************************************************************
    function:   _XMLDoc_createXMLNode

    Author: djoham@yahoo.com

    Description:
        convienience function to create a new node that inherits
        the properties of the document object
    *********************************************************************************************************************/
    return new XMLDoc(strXML, this.errFn).docNode;

} // end function _XMLDoc_createXMLNode


function _XMLDoc_error(str) {
    /*******************************************************************************************************************
    function:       _XMLDoc_error

    Author: mike@idle.org

    Description:
        used to log an error in parsing or validating
    *********************************************************************************************************************/
    
	this.hasErrors=true;
    if(this.errFn){
        this.errFn("ERROR: " + str);
    }else if(this.onerror){
        this.onerror("ERROR: " + str); 
	}
    return 0;
	
} // end function _XMLDoc_error


function _XMLDoc_getTagNameParams(tag,obj){
    /*******************************************************************************************************************
    function:       _XMLDoc_getTagNameParams

    Author: xwisdom@yahoo.com

    Description:
        convienience function for the nodeSearch routines
    *********************************************************************************************************************/
	var elm=-1,e,s=tag.indexOf('[');
	var attr=[];
	if(s>=0){
		e=tag.indexOf(']');
		if(e>=0)elm=tag.substr(s+1,(e-s)-1);
		else obj.error('expected ] near '+tag);
		tag=tag.substr(0,s);
		if(isNaN(elm) && elm!='*'){
			attr=elm.substr(1,elm.length-1); // remove @
			attr=attr.split('=');
			if(attr[1]) { //remove "
				s=attr[1].indexOf('"');
				attr[1]=attr[1].substr(s+1,attr[1].length-1);
				e=attr[1].indexOf('"');
				if(e>=0) attr[1]=attr[1].substr(0,e);
				else obj.error('expected " near '+tag)
			};elm=-1;
		}else if(elm=='*') elm=-1;
	}
	return [tag,elm,attr[0],attr[1]]
} // end function _XMLDoc_getTagNameParams


function _XMLDoc_getUnderlyingXMLText() {
    /*******************************************************************************************************************
    function:       _XMLDoc_getUnderlyingXMLText

    Author: djoham@yahoo.com

    Description:
        kicks off the process that returns the XML text representation of the XML
        document inclusive of any changes made by the manipulation of the DOM
    *********************************************************************************************************************/
    var strRet = "";
    //for now, hardcode the xml version 1 information. When we handle Processing Instructions later, this
    //should be looked at again
    strRet = strRet + "<?xml version=\"1.0\"?>";
    if (this.docNode==null) {
        return;
    }

    strRet = _displayElement(this.docNode, strRet);
    return strRet;

} // end function _XMLDoc_getCurrentXMLText



function _XMLDoc_handleNode(current) {
    /*******************************************************************************************************************
    function:   _XMLDoc_handleNode

    Author: mike@idle.org

    Description:
        adds a markup element to the document
    *********************************************************************************************************************/

    if ((current.nodeType=='COMMENT') && (this.topNode!=null)) {
        return this.topNode.addElement(current);
    }
    else if ((current.nodeType=='TEXT') ||  (current.nodeType=='CDATA')) {

        // if the current node is a text node:


        // if the stack is empty, and this text node isn't just whitespace, we have
        // a problem (we're not in a document element)

        if(this.topNode==null) {
            if (trim(current.content,true,false)=="") {
                return true;
            }
            else {
                return this.error("expected document node, found: " + current);
            }
        }
        else {
            // otherwise, append this as child to the element at the top of the stack
            return this.topNode.addElement(current);
        }


    }
    else if ((current.nodeType=='OPEN') || (current.nodeType=='SINGLE')) {
        // if we find an element tag (open or empty)
        var success = false;

        // if the stack is empty, this node becomes the document node

        if(this.topNode==null) {
            this.docNode = current;
            current.parent = null;
            success = true;
        }
        else {
            // otherwise, append this as child to the element at the top of the stack
            success = this.topNode.addElement(current);
        }


        if (success && (current.nodeType!='SINGLE')) {
            this.topNode = current;
        }

        // rename it as an element node

        current.nodeType = "ELEMENT";

        return success;
    }

    // if it's a close tag, check the nesting

    else if (current.nodeType=='CLOSE') {

        // if the stack is empty, it's certainly an error

        if (this.topNode==null) {
            return this.error("close tag without open: " +  current.toString());
        }
        else {

            // otherwise, check that this node matches the one on the top of the stack

            if (current.tagName!=this.topNode.tagName) {
                return this.error("expected closing " + this.topNode.tagName + ", found closing " + current.tagName);
            }
            else {
                // if it does, pop the element off the top of the stack
                this.topNode = this.topNode.getParent();
            }
        }
    }
    return true;
} // end function _XMLDoc_handleNode



function _XMLDoc_insertNodeAfter (referenceNode, newNode) {
    /*******************************************************************************************************************
    function:   _XMLDoc_insertNodeAfter

    Author: djoham@yahoo.com

    Description:
        inserts a new XML node after the reference node;

        for example, if we insert the node <tag2>hello</tag2>
        after tag1 in the xml <rootnode><tag1></tag1></rootnode>
        we will end up with <rootnode><tag1></tag1><tag2>hello</tag2></rootnode>

        NOTE: the return value of this function is a new XMLDoc object!!!!

    *********************************************************************************************************************/

    var parentXMLText = this.getUnderlyingXMLText();
    var selectedNodeXMLText = referenceNode.getUnderlyingXMLText();
    var originalNodePos = parentXMLText.indexOf(selectedNodeXMLText) + selectedNodeXMLText.length;
    var newXML = parentXMLText.substr(0,originalNodePos);
    newXML += newNode.getUnderlyingXMLText();
    newXML += parentXMLText.substr(originalNodePos);
    var newDoc = new XMLDoc(newXML, this.errFn);
    return newDoc;

} // end function _XMLDoc_insertNodeAfter



function _XMLDoc_insertNodeInto (referenceNode, insertNode) {
    /*******************************************************************************************************************
    function:   _XMLDoc_insertNodeInto

    Author: mike@idle.org

    Description:
        inserts a new XML node into the reference node;

        for example, if we insert the node <tag2>hello</tag2>
        into tag1 in the xml <rootnode><tag1><tag3>foo</tag3></tag1></rootnode>
        we will end up with <rootnode><tag1><tag2>hello</tag2><tag3>foo</tag3></tag1></rootnode>

        NOTE: the return value of this function is a new XMLDoc object!!!!
    *********************************************************************************************************************/

    var parentXMLText = this.getUnderlyingXMLText();
    var selectedNodeXMLText = referenceNode.getUnderlyingXMLText();
    var endFirstTag = selectedNodeXMLText.indexOf(">") + 1;
    var originalNodePos = parentXMLText.indexOf(selectedNodeXMLText) + endFirstTag;
    var newXML = parentXMLText.substr(0,originalNodePos);
    newXML += insertNode.getUnderlyingXMLText();
    newXML += parentXMLText.substr(originalNodePos);
    var newDoc = new XMLDoc(newXML, this.errFn);
    return newDoc;


} // end function _XMLDoc_insertNodeInto

function _XMLDoc_loadXML(source){
    /*******************************************************************************************************************
    function:   _XMLDoc_insertNodeInto

    Author: xwisdom@yahoo.com

    Description:
    	allows an already existing XMLDoc object to load XML
	*********************************************************************************************************************/
	this.topNode=null;
	this.hasErrors = false;
	this.source=source;
    // parse the document
	return this.parse();

} // end function _XMLDoc_loadXML

function _XMLDoc_parse() {
    /*******************************************************************************************************************
    function:   _XMLDoc_parse

    Author: mike@idle.org

    Description:
        scans through the source for opening and closing tags
        checks that the tags open and close in a sensible order
    *********************************************************************************************************************/

    var pos = 0;

    // set up the arrays used to store positions of < and > characters

    err = false;

    while(!err) {
        var closing_tag_prefix = '';
        var chpos = this.source.indexOf('<',pos);
        var open_length = 1;

        var open;
        var close;

        if (chpos ==-1) {
            break;
        }

        open = chpos;

        // create a text node

        var str = this.source.substring(pos, open);

        if (str.length!=0) {
            err = !this.handleNode(new XMLNode('TEXT',this, str));
        }

        // handle Programming Instructions - they can't reliably be handled as tags

        if (chpos == this.source.indexOf("<?",pos)) {
            pos = this.parsePI(this.source, pos + 2);
            if (pos==0) {
                err=true;
            }
            continue;
        }

        // nobble the document type definition

        if (chpos == this.source.indexOf("<!DOCTYPE",pos)) {
            pos = this.parseDTD(this.source, chpos+ 9);
            if (pos==0) {
                err=true;
            }
            continue;
        }

        // if we found an open comment, we need to ignore angle brackets
        // until we find a close comment

        if(chpos == this.source.indexOf('<!--',pos)) {
            open_length = 4;
            closing_tag_prefix = '--';
        }

        // similarly, if we find an open CDATA, we need to ignore all angle
        // brackets until a close CDATA sequence is found

        if (chpos == this.source.indexOf('<![CDATA[',pos)) {
            open_length = 9;
            closing_tag_prefix = ']]';
        }

        // look for the closing sequence

        chpos = this.source.indexOf(closing_tag_prefix + '>',chpos);
        if (chpos ==-1) {
            return this.error("expected closing tag sequence: " + closing_tag_prefix + '>');
        }

        close = chpos + closing_tag_prefix.length;

        // create a tag node

        str = this.source.substring(open+1, close);

        var n = this.parseTag(str);
        if (n) {
            err = !this.handleNode(n);
        }

        pos = close +1;

    // and loop

    }
    return !err;

} // end function _XMLDoc_parse



function _XMLDoc_parseAttribute(src,pos,node) {
    /*******************************************************************************************************************
    function:   _XMLDoc_parseAttribute

    Author: mike@idle.org

    Description:
        parse an attribute out of a tag string

    *********************************************************************************************************************/

    // chew up the whitespace, if any

    while ((pos<src.length) && (whitespace.indexOf(src.charAt(pos))!=-1)) {
        pos++;
    }

    // if there's nothing else, we have no (more) attributes - just break out

    if (pos >= src.length) {
        return pos;
    }

    var p1 = pos;

    while ((pos < src.length) && (src.charAt(pos)!='=')) {
        pos++;
    }

    var msg = "attributes must have values";

    // parameters without values aren't allowed.

    if(pos >= src.length) {
        return this.error(msg);
    }

    // extract the parameter name

    var paramname = trim(src.substring(p1,pos++),false,true);

    // chew up whitespace

    while ((pos < src.length) && (whitespace.indexOf(src.charAt(pos))!=-1)) {
        pos++;
    }

    // throw an error if we've run out of string

    if (pos >= src.length) {
        return this.error(msg);
    }

    msg = "attribute values must be in quotes";

    // check for a quote mark to identify the beginning of the attribute value

    var quote = src.charAt(pos++);

    // throw an error if we didn't find one

    if (quotes.indexOf(quote)==-1) {
        return this.error(msg);
    }

    p1 = pos;

    while ((pos < src.length) && (src.charAt(pos)!=quote)) {
        pos++;
    }

    // throw an error if we found no closing quote

    if (pos >= src.length) {
        return this.error(msg);
    }

    // store the parameter

    if (!node.addAttribute(paramname,trim(src.substring(p1,pos++),false,true))) {
        return 0;
    }

    return pos;

}  //end function _XMLDoc_parseAttribute



function _XMLDoc_parseDTD(str,pos) {
    /*******************************************************************************************************************
    function:   _XMLDoc_parseDTD

    Author: mike@idle.org

    Description:
        parse a document type declaration

        NOTE: we're just going to discard the DTD

    *********************************************************************************************************************/
    // we're just going to discard the DTD

    var firstClose = str.indexOf('>',pos);

    if (firstClose==-1) {
        return this.error("error in DTD: expected '>'");
    }

    var closing_tag_prefix = '';

    var firstOpenSquare = str.indexOf('[',pos);

    if ((firstOpenSquare!=-1) && (firstOpenSquare < firstClose)) {
        closing_tag_prefix = ']';
    }

    while(true) {
        var closepos = str.indexOf(closing_tag_prefix + '>',pos);

        if (closepos ==-1) {
            return this.error("expected closing tag sequence: " + closing_tag_prefix + '>');
        }

        pos = closepos + closing_tag_prefix.length +1;

        if (str.substring(closepos-1,closepos+2) != ']]>') {
            break;
        }
    }
    return pos;

} // end function _XMLDoc_ParseDTD


function _XMLDoc_parsePI(str,pos) {
    /*******************************************************************************************************************
    function:   _XMLDoc_parsePI

    Author: mike@idle.org

    Description:
        parse a processing instruction

        NOTE: we just swallow them up at the moment

    *********************************************************************************************************************/
    // we just swallow them up

    var closepos = str.indexOf('?>',pos);
    return closepos + 2;

} // end function _XMLDoc_parsePI



function _XMLDoc_parseTag(src) {
    /*******************************************************************************************************************
    function:   _XMLDoc_parseTag

    Author: mike@idle.org

    Description:
        parse out a non-text element (incl. CDATA, comments)
        handles the parsing of attributes
    *********************************************************************************************************************/

    // if it's a comment, strip off the packaging, mark it a comment node
    // and return it

    if (src.indexOf('!--')==0) {
        return new XMLNode('COMMENT', this, src.substring(3,src.length-2));
    }

    // if it's CDATA, do similar

    if (src.indexOf('![CDATA[')==0) {
        return new XMLNode('CDATA', this, src.substring(8,src.length-2));
    }

    var n = new XMLNode();
    n.doc = this;


    if (src.charAt(0)=='/') {
        n.nodeType = 'CLOSE';
        src = src.substring(1);
    }
    else {
        // otherwise it's an open tag (possibly an empty element)
        n.nodeType = 'OPEN';
    }

    // if the last character is a /, check it's not a CLOSE tag

    if (src.charAt(src.length-1)=='/') {
        if (n.nodeType=='CLOSE') {
            return this.error("singleton close tag");
        }
        else {
            n.nodeType = 'SINGLE';
        }

        // strip off the last character

        src = src.substring(0,src.length-1);
    }

    // set up the properties as appropriate

    if (n.nodeType!='CLOSE') {
        n.attributes = new Array();
    }

    if (n.nodeType=='OPEN') {
        n.children = new Array();
    }

    // trim the whitespace off the remaining content

    src = trim(src,true,true);

    // chuck out an error if there's nothing left

    if (src.length==0) {
        return this.error("empty tag");
    }

    // scan forward until a space...

    var endOfName = firstWhiteChar(src,0);

    // if there is no space, this is just a name (e.g. (<tag>, <tag/> or </tag>

    if (endOfName==-1) {
        n.tagName = src;
        return n;
    }

    // otherwise, we should expect attributes - but store the tag name first

    n.tagName = src.substring(0,endOfName);

    // start from after the tag name

    var pos = endOfName;

    // now we loop:

    while(pos< src.length) {
        pos = this.parseAttribute(src, pos, n);
        if (this.pos==0) {
            return null;
        }

        // and loop

    }
    return n;

} // end function _XMLDoc_parseTag



function _XMLDoc_removeNodeFromTree(node) {
    /*******************************************************************************************************************
    function:   _XMLDoc_removeNodeFromTree

    Author: djoham@yahoo.com

    Description:
        removes the specified node from the tree

        NOTE: the return value of this function is a new XMLDoc object

    *********************************************************************************************************************/

    var parentXMLText = this.getUnderlyingXMLText();
    var selectedNodeXMLText = node.getUnderlyingXMLText();
    var originalNodePos = parentXMLText.indexOf(selectedNodeXMLText);
    var newXML = parentXMLText.substr(0,originalNodePos);
    newXML += parentXMLText.substr(originalNodePos + selectedNodeXMLText.length);
    var newDoc = new XMLDoc(newXML, this.errFn);
    return newDoc;
} // end function _XMLDoc_removeNodeFromTree



function _XMLDoc_replaceNodeContents(referenceNode, newContents) {
    /*******************************************************************************************************************
    function:   _XMLDoc_replaceNodeContents

    Author: djoham@yahoo.com

    Description:

        make a node object out of the newContents text
        coming in ----

        The "X" node will be thrown away and only the children
        used to replace the contents of the reference node

        NOTE: the return value of this function is a new XMLDoc object

    *********************************************************************************************************************/

    var newNode = this.createXMLNode("<X>" + newContents + "</X>");
    referenceNode.children = newNode.children;
    return this;
} // end function _XMLDoc_replaceNodeContents


function _XMLDoc_selectNode(tagpath){
    /*******************************************************************************************************************
    function:	_XMLDoc_selectNode

    Author:		xwisdom@yahoo.com

    Description:
    	selects a single node using the nodes tag path.
    	examples: /node1/node2  or  /taga/tag1[0]/tag2
    *********************************************************************************************************************/

	tagpath = trim(tagpath, true, true);
	
	var srcnode,node,tag,params,elm,rg;
	var tags,attrName,attrValue,ok;
	srcnode=node=((this.source)?this.docNode:this);
	if (!tagpath) return node;
	if(tagpath.indexOf('/')==0)tagpath=tagpath.substr(1);
	tagpath=tagpath.replace(tag,'');
	tags=tagpath.split('/');
	tag=tags[0];
	if(tag){
		if(tagpath.indexOf('/')==0)tagpath=tagpath.substr(1);
		tagpath=tagpath.replace(tag,'');
		params=_XMLDoc_getTagNameParams(tag,this);
		tag=params[0];elm=params[1];
		attrName=params[2];attrValue=params[3];
		node=(tag=='*')? node.getElements():node.getElements(tag);
		if (node.length) {
			if(elm<0){
				srcnode=node;var i=0;
				while(i<srcnode.length){
					if(attrName){
						if (srcnode[i].getAttribute(attrName)!=attrValue) ok=false;
						else ok=true;
					}else ok=true;
					if(ok){
						node=srcnode[i].selectNode(tagpath);
						if(node) return node;
					}
					i++;
				}
			}else if (elm<node.length){
				node=node[elm].selectNode(tagpath);
				if(node) return node;
			}
		}
	}
} // end function _XMLDoc_selectNode

function _XMLDoc_selectNodeText(tagpath){
    /*******************************************************************************************************************
    function:	_XMLDoc_selectNodeText

    Author:		xwisdom@yahoo.com

    Description:
    	selects a single node using the nodes tag path and then returns the node text.
    *********************************************************************************************************************/

    var node=this.selectNode(tagpath);
    if (node != null) {
		return node.getText();
	}
    else {
		return null;
	}
} // end function _XMLDoc_selectNodeText








// =========================================================================
// =========================================================================
// =========================================================================
// XML NODE FUNCTIONS
// =========================================================================
// =========================================================================
// =========================================================================


function XMLNode(nodeType,doc, str) {
    /*******************************************************************************************************************
    function: xmlNode

    Author: mike@idle.org

    Description:

        XMLNode() is a constructor for a node of XML (text, comment, cdata, tag, etc)

        nodeType = indicates the node type of the node
        doc == contains a reference to the XMLDoc object describing the document
        str == contains the text for the tag or text entity

    *********************************************************************************************************************/


    // the content of text (also CDATA and COMMENT) nodes
    if (nodeType=='TEXT' || nodeType=='CDATA' || nodeType=='COMMENT' ) {
        this.content = str;
    }
    else {
        this.content = null;
    }

    this.attributes = null; // an array of attributes (used as a hash table)
    this.children = null;   // an array (list) of the children of this node
    this.doc = doc;         // a reference to the document
    this.nodeType = nodeType;          // the type of the node
    this.parent = "";
    this.tagName = "";           // the name of the tag (if a tag node)

    // configure the methods
    this.addAttribute = _XMLNode_addAttribute;
    this.addElement = _XMLNode_addElement;
    this.getAttribute = _XMLNode_getAttribute;
    this.getAttributeNames = _XMLNode_getAttributeNames;
    this.getElementById = _XMLNode_getElementById;
    this.getElements = _XMLNode_getElements;
    this.getText = _XMLNode_getText;
    this.getParent = _XMLNode_getParent;
    this.getUnderlyingXMLText = _XMLNode_getUnderlyingXMLText;
    this.removeAttribute = _XMLNode_removeAttribute;
    this.selectNode = _XMLDoc_selectNode;
	this.selectNodeText = _XMLDoc_selectNodeText;
    this.toString = _XMLNode_toString;

}  // end function XMLNode


function _XMLNode_addAttribute(attributeName,attributeValue) {
    /*******************************************************************************************************************
    function: _XMLNode_addAttribute

    Author: mike@idle.org

    Description:
        add an attribute to a node
    *********************************************************************************************************************/

    //if the name is found, the old value is overwritten by the new value
    this.attributes['_' + attributeName] = attributeValue;
    return true;

} // end function _XMLNode_addAttribute



function _XMLNode_addElement(node) {
    /*******************************************************************************************************************
    function: _XMLNode_addElement

    Author: mike@idle.org

    Description:
        add an element child to a node
    *********************************************************************************************************************/
    node.parent = this;
    this.children[this.children.length] = node;
    return true;

} // end function _XMLNode_addElement


function _XMLNode_getAttribute(name) {
    /*******************************************************************************************************************
    function: _XMLNode_getAttribute

    Author: mike@idle.org

    Description:
        get the value of a named attribute from an element node

        NOTE: we prefix with "_" because of the weird 'length' meta-property

    *********************************************************************************************************************/
    if (this.attributes == null) {
        return null;
    }
    return this.attributes['_' + name];
} // end function _XMLNode_getAttribute



function _XMLNode_getAttributeNames() {
    /*******************************************************************************************************************
    function: _XMLNode_getAttributeNames

    Author: mike@idle.org

    Description:
        get a list of attribute names for the node

        NOTE: we prefix with "_" because of the weird 'length' meta-property

        NOTE: Version 1.0 of getAttributeNames breaks backwards compatibility. Previous to 1.0
        getAttributeNames would return null if there were no attributes. 1.0 now returns an
        array of length 0.


    *********************************************************************************************************************/
    if (this.attributes == null) {
        var ret = new Array();
        return ret;
    }

    var attlist = new Array();

    for (var a in this.attributes) {
        attlist[attlist.length] = a.substring(1);
    }
    return attlist;
} // end function _XMLNode_getAttributeNames

function _XMLNode_getElementById(id) {

    /***********************************************************************************
    Function: getElementById

    Author: djoham@yahoo.com

    Description:
        Brute force searches through the XML DOM tree
        to find the node with the unique ID passed in

    ************************************************************************************/
    var node = this;
    var ret;

    //alert("tag name=" + node.tagName);
    //alert("id=" + node.getAttribute("id"));
    if (node.getAttribute("id") == id) {
        return node;
    }
    else{
        var elements = node.getElements();
        //alert("length=" + rugrats.length);
        var intLoop = 0;
        //do NOT use a for loop here. For some reason
        //it kills some browsers!!!
        while (intLoop < elements.length) {
            //alert("intLoop=" + intLoop);
            var element = elements[intLoop];
            //alert("recursion");
            ret = element.getElementById(id);
            if (ret != null) {
                //alert("breaking");
                break;
            }
            intLoop++;
        }
    }
    return ret;
} // end function _XMLNode_getElementById


function _XMLNode_getElements(byName) {
    /*******************************************************************************************************************
    function:   _XMLNode_getElements

    Author: mike@idle.org

    Description:
        get an array of element children of a node
        with an optional filter by name

        NOTE: Version 1.0 of getElements breaks backwards compatibility. Previous to 1.0
        getElements would return null if there were no attributes. 1.0 now returns an
        array of length 0.


    *********************************************************************************************************************/
    if (this.children==null) {
        var ret = new Array();
        return ret;
    }

    var elements = new Array();
    for (var i=0; i<this.children.length; i++) {
        if ((this.children[i].nodeType=='ELEMENT') && ((byName==null) || (this.children[i].tagName == byName))) {
            elements[elements.length] = this.children[i];
        }
    }
    return elements;
} // end function _XMLNode_getElements



function _XMLNode_getText() {
    /*******************************************************************************************************************
    function:       _XMLNode_getText

    Author: mike@idle.org

    Description:
        a method to get the text of a given node (recursively, if it's an element)
    *********************************************************************************************************************/

    if (this.nodeType=='ELEMENT') {
        if (this.children==null) {
            return null;
        }
        var str = "";
        for (var i=0; i < this.children.length; i++) {
            var t = this.children[i].getText();
            str +=  (t == null ? "" : t);
        }
        return str;
    }
    else if (this.nodeType=='TEXT') {
        return convertEscapes(this.content);
    }
    else {
        return this.content;
    }
} // end function _XMLNode_getText



function _XMLNode_getParent() {
    /*******************************************************************************************************************
    function:       _XMLNode_getParent

    Author: mike@idle.org

    Description:
        get the parent of this node
    *********************************************************************************************************************/
    return this.parent;

} // end function _XMLNode_getParent


function _XMLNode_getUnderlyingXMLText() {
    /*******************************************************************************************************************
    function:       David Joham

    Author: djoham@yahoo.com

    Description:
        returns the underlying XML text for the node
        by calling the _displayElement function
    *********************************************************************************************************************/

    var strRet = "";
    strRet = _displayElement(this, strRet);
    return strRet;

} // end function _XMLNode_getUnderlyingXMLText



function _XMLNode_removeAttribute(attributeName) {
    /*******************************************************************************************************************
    function:       _XMLNode_removeAttribute

    Author: djoham@yahoo.com

    Description:
        remove an attribute from a node
    *********************************************************************************************************************/
    if(attributeName == null) {
        return this.doc.error("You must pass an attribute name into the removeAttribute function");
    }

    //now remove the attribute from the list.
    // I want to keep the logic for adding attribtues in one place. I'm
    // going to get a temp array of attributes and values here and then
    // use the addAttribute function to re-add the attributes
    var attributes = this.getAttributeNames();
    var intCount = attributes.length;
    var tmpAttributeValues = new Array();
    for ( intLoop = 0; intLoop < intCount; intLoop++) {
        tmpAttributeValues[intLoop] = this.getAttribute(attributes[intLoop]);
    }

    // now blow away the old attribute list
    this.attributes = new Array();

    //now add the attributes back to the array - leaving out the one we're removing
    for (intLoop = 0; intLoop < intCount; intLoop++) {
        if ( attributes[intLoop] != attributeName) {
            this.addAttribute(attributes[intLoop], tmpAttributeValues[intLoop]);
        }
    }

return true;

} // end function _XMLNode_removeAttribute



function _XMLNode_toString() {
    /*******************************************************************************************************************
    function:       _XMLNode_toString

    Author: mike@idle.org

    Description:
        produces a diagnostic string description of a node
    *********************************************************************************************************************/
    return "" + this.nodeType + ":" + (this.nodeType=='TEXT' || this.nodeType=='CDATA' || this.nodeType=='COMMENT' ? this.content : this.tagName);

} // end function _XMLNode_toString


























if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2371";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__5128__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__5128 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5128__delegate.call(this, args);
    };
    G__5128.cljs$lang$maxFixedArity = 0;
    G__5128.cljs$lang$applyTo = function(arglist__5129) {
      var args = cljs.core.seq(arglist__5129);
      return G__5128__delegate(args);
    };
    G__5128.cljs$core$IFn$_invoke$arity$variadic = G__5128__delegate;
    return G__5128;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3628__auto__ = ty;
    if (cljs.core.truth_(and__3628__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3628__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4510__auto___5130 = len;
  var i_5131 = 0;
  while (true) {
    if (i_5131 < n__4510__auto___5130) {
      new_arr[i_5131] = arr[i_5131];
      var G__5132 = i_5131 + 1;
      i_5131 = G__5132;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__5133__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__5133 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5133__delegate.call(this, array, i, idxs);
    };
    G__5133.cljs$lang$maxFixedArity = 2;
    G__5133.cljs$lang$applyTo = function(arglist__5134) {
      var array = cljs.core.first(arglist__5134);
      arglist__5134 = cljs.core.next(arglist__5134);
      var i = cljs.core.first(arglist__5134);
      var idxs = cljs.core.rest(arglist__5134);
      return G__5133__delegate(array, i, idxs);
    };
    G__5133.cljs$core$IFn$_invoke$arity$variadic = G__5133__delegate;
    return G__5133;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__5135__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__5135 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5135__delegate.call(this, array, idx, idx2, idxv);
    };
    G__5135.cljs$lang$maxFixedArity = 3;
    G__5135.cljs$lang$applyTo = function(arglist__5136) {
      var array = cljs.core.first(arglist__5136);
      arglist__5136 = cljs.core.next(arglist__5136);
      var idx = cljs.core.first(arglist__5136);
      arglist__5136 = cljs.core.next(arglist__5136);
      var idx2 = cljs.core.first(arglist__5136);
      var idxv = cljs.core.rest(arglist__5136);
      return G__5135__delegate(array, idx, idx2, idxv);
    };
    G__5135.cljs$core$IFn$_invoke$arity$variadic = G__5135__delegate;
    return G__5135;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj5138 = {};
  return obj5138;
}();
cljs.core.IFn = function() {
  var obj5140 = {};
  return obj5140;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3628__auto__ = this$;
      if (and__3628__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4277__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3640__auto__ = cljs.core._invoke[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._invoke["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj5142 = {};
  return obj5142;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3628__auto__ = value;
    if (and__3628__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4277__auto__ = value == null ? null : value;
    return function() {
      var or__3640__auto__ = cljs.core._clone[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._clone["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5144 = {};
  return obj5144;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._count[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._count["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5146 = {};
  return obj5146;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._empty[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._empty["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5148 = {};
  return obj5148;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._conj[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._conj["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5150 = {};
  return obj5150;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3628__auto__ = coll;
      if (and__3628__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4277__auto__ = coll == null ? null : coll;
      return function() {
        var or__3640__auto__ = cljs.core._nth[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._nth["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3628__auto__ = coll;
      if (and__3628__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4277__auto__ = coll == null ? null : coll;
      return function() {
        var or__3640__auto__ = cljs.core._nth[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._nth["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj5152 = {};
  return obj5152;
}();
cljs.core.ISeq = function() {
  var obj5154 = {};
  return obj5154;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._first[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._first["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._rest[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._rest["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5156 = {};
  return obj5156;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._next[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._next["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5158 = {};
  return obj5158;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3628__auto__ = o;
      if (and__3628__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4277__auto__ = o == null ? null : o;
      return function() {
        var or__3640__auto__ = cljs.core._lookup[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._lookup["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3628__auto__ = o;
      if (and__3628__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4277__auto__ = o == null ? null : o;
      return function() {
        var or__3640__auto__ = cljs.core._lookup[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._lookup["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj5160 = {};
  return obj5160;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._assoc[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._assoc["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5162 = {};
  return obj5162;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._dissoc[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._dissoc["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5164 = {};
  return obj5164;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._key[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._key["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._val[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._val["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5166 = {};
  return obj5166;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._disjoin[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._disjoin["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5168 = {};
  return obj5168;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._peek[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._peek["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._pop[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._pop["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5170 = {};
  return obj5170;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._assoc_n[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5172 = {};
  return obj5172;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3628__auto__ = o;
    if (and__3628__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4277__auto__ = o == null ? null : o;
    return function() {
      var or__3640__auto__ = cljs.core._deref[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._deref["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5174 = {};
  return obj5174;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3628__auto__ = o;
    if (and__3628__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4277__auto__ = o == null ? null : o;
    return function() {
      var or__3640__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5176 = {};
  return obj5176;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3628__auto__ = o;
    if (and__3628__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4277__auto__ = o == null ? null : o;
    return function() {
      var or__3640__auto__ = cljs.core._meta[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._meta["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5178 = {};
  return obj5178;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3628__auto__ = o;
    if (and__3628__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4277__auto__ = o == null ? null : o;
    return function() {
      var or__3640__auto__ = cljs.core._with_meta[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._with_meta["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5180 = {};
  return obj5180;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3628__auto__ = coll;
      if (and__3628__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4277__auto__ = coll == null ? null : coll;
      return function() {
        var or__3640__auto__ = cljs.core._reduce[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._reduce["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3628__auto__ = coll;
      if (and__3628__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4277__auto__ = coll == null ? null : coll;
      return function() {
        var or__3640__auto__ = cljs.core._reduce[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._reduce["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5182 = {};
  return obj5182;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5184 = {};
  return obj5184;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3628__auto__ = o;
    if (and__3628__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4277__auto__ = o == null ? null : o;
    return function() {
      var or__3640__auto__ = cljs.core._equiv[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._equiv["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5186 = {};
  return obj5186;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3628__auto__ = o;
    if (and__3628__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4277__auto__ = o == null ? null : o;
    return function() {
      var or__3640__auto__ = cljs.core._hash[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._hash["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5188 = {};
  return obj5188;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3628__auto__ = o;
    if (and__3628__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4277__auto__ = o == null ? null : o;
    return function() {
      var or__3640__auto__ = cljs.core._seq[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._seq["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5190 = {};
  return obj5190;
}();
cljs.core.IList = function() {
  var obj5192 = {};
  return obj5192;
}();
cljs.core.IRecord = function() {
  var obj5194 = {};
  return obj5194;
}();
cljs.core.IReversible = function() {
  var obj5196 = {};
  return obj5196;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._rseq[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._rseq["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5198 = {};
  return obj5198;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._entry_key[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._entry_key["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._comparator[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._comparator["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5200 = {};
  return obj5200;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3628__auto__ = writer;
    if (and__3628__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4277__auto__ = writer == null ? null : writer;
    return function() {
      var or__3640__auto__ = cljs.core._write[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._write["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3628__auto__ = writer;
    if (and__3628__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4277__auto__ = writer == null ? null : writer;
    return function() {
      var or__3640__auto__ = cljs.core._flush[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._flush["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5202 = {};
  return obj5202;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3628__auto__ = o;
    if (and__3628__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4277__auto__ = o == null ? null : o;
    return function() {
      var or__3640__auto__ = cljs.core._pr_writer[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5204 = {};
  return obj5204;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3628__auto__ = d;
    if (and__3628__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4277__auto__ = d == null ? null : d;
    return function() {
      var or__3640__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5206 = {};
  return obj5206;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3628__auto__ = this$;
    if (and__3628__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4277__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3640__auto__ = cljs.core._notify_watches[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3628__auto__ = this$;
    if (and__3628__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4277__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3640__auto__ = cljs.core._add_watch[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._add_watch["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3628__auto__ = this$;
    if (and__3628__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4277__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3640__auto__ = cljs.core._remove_watch[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5208 = {};
  return obj5208;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._as_transient[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._as_transient["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5210 = {};
  return obj5210;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3628__auto__ = tcoll;
    if (and__3628__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4277__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3640__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3628__auto__ = tcoll;
    if (and__3628__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4277__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3640__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5212 = {};
  return obj5212;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3628__auto__ = tcoll;
    if (and__3628__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4277__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3640__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5214 = {};
  return obj5214;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3628__auto__ = tcoll;
    if (and__3628__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4277__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3640__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5216 = {};
  return obj5216;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3628__auto__ = tcoll;
    if (and__3628__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4277__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3640__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3628__auto__ = tcoll;
    if (and__3628__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4277__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3640__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5218 = {};
  return obj5218;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3628__auto__ = tcoll;
    if (and__3628__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4277__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3640__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5220 = {};
  return obj5220;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3628__auto__ = x;
    if (and__3628__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4277__auto__ = x == null ? null : x;
    return function() {
      var or__3640__auto__ = cljs.core._compare[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._compare["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5222 = {};
  return obj5222;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._drop_first[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._drop_first["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5224 = {};
  return obj5224;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._chunked_first[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5226 = {};
  return obj5226;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._chunked_next[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5228 = {};
  return obj5228;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3628__auto__ = x;
    if (and__3628__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4277__auto__ = x == null ? null : x;
    return function() {
      var or__3640__auto__ = cljs.core._name[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._name["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3628__auto__ = x;
    if (and__3628__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4277__auto__ = x == null ? null : x;
    return function() {
      var or__3640__auto__ = cljs.core._namespace[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._namespace["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj5230 = {};
  return obj5230;
}();
cljs.core.IReset = function() {
  var obj5232 = {};
  return obj5232;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3628__auto__ = o;
    if (and__3628__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4277__auto__ = o == null ? null : o;
    return function() {
      var or__3640__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj5234 = {};
  return obj5234;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3628__auto__ = o;
      if (and__3628__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4277__auto__ = o == null ? null : o;
      return function() {
        var or__3640__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3628__auto__ = o;
      if (and__3628__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4277__auto__ = o == null ? null : o;
      return function() {
        var or__3640__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3628__auto__ = o;
      if (and__3628__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4277__auto__ = o == null ? null : o;
      return function() {
        var or__3640__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3628__auto__ = o;
      if (and__3628__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3628__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4277__auto__ = o == null ? null : o;
      return function() {
        var or__3640__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4277__auto__)];
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3640__auto____$1) {
            return or__3640__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IIterable = function() {
  var obj5236 = {};
  return obj5236;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3628__auto__ = coll;
    if (and__3628__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4277__auto__ = coll == null ? null : coll;
    return function() {
      var or__3640__auto__ = cljs.core._iterator[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._iterator["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__5237 = i + 2;
        var G__5238 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__5237;
        h1 = G__5238;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj5240 = {};
  return obj5240;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__5241 = i + 1;
          var G__5242 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__5241;
          hash = G__5242;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj5246 = {};
      return obj5246;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__5248 = o;
    if (G__5248) {
      var bit__4297__auto__ = G__5248.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4297__auto__ || G__5248.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3628__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3628__auto__) {
        return b.ns;
      } else {
        return and__3628__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4051__auto__ = self__._hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__5250 = null;
  var G__5250__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__5250__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__5250 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5250__2.call(this, self__, coll);
      case 3:
        return G__5250__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5250.cljs$core$IFn$_invoke$arity$2 = G__5250__2;
  G__5250.cljs$core$IFn$_invoke$arity$3 = G__5250__3;
  return G__5250;
}();
cljs.core.Symbol.prototype.apply = function(self__, args5249) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5249)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__5252 = x;
  if (G__5252) {
    var bit__4304__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3640__auto__ = bit__4304__auto__;
      if (cljs.core.truth_(or__3640__auto__)) {
        return or__3640__auto__;
      } else {
        return G__5252.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__5252.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__5252);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__5252);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__5254 = value;
  if (G__5254) {
    var bit__4304__auto__ = G__5254.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4304__auto__ || G__5254.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__5254.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__5254);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__5254);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5256 = coll;
      if (G__5256) {
        var bit__4297__auto__ = G__5256.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4297__auto__ || G__5256.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5258 = coll;
      if (G__5258) {
        var bit__4297__auto__ = G__5258.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4297__auto__ || G__5258.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5260 = coll;
      if (G__5260) {
        var bit__4297__auto__ = G__5260.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4297__auto__ || G__5260.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5262 = coll;
      if (G__5262) {
        var bit__4297__auto__ = G__5262.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4297__auto__ || G__5262.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__5263__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__5264 = y;
            var G__5265 = cljs.core.first.call(null, more);
            var G__5266 = cljs.core.next.call(null, more);
            x = G__5264;
            y = G__5265;
            more = G__5266;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5263 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5263__delegate.call(this, x, y, more);
    };
    G__5263.cljs$lang$maxFixedArity = 2;
    G__5263.cljs$lang$applyTo = function(arglist__5267) {
      var x = cljs.core.first(arglist__5267);
      arglist__5267 = cljs.core.next(arglist__5267);
      var y = cljs.core.first(arglist__5267);
      var more = cljs.core.rest(arglist__5267);
      return G__5263__delegate(x, y, more);
    };
    G__5263.cljs$core$IFn$_invoke$arity$variadic = G__5263__delegate;
    return G__5263;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5268 = n + 1;
      var G__5269 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__5270 = cljs.core.next.call(null, coll__$1);
      n = G__5268;
      hash_code = G__5269;
      coll__$1 = G__5270;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5271 = n + 1;
      var G__5272 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__5273 = cljs.core.next.call(null, coll__$1);
      n = G__5271;
      hash_code = G__5272;
      coll__$1 = G__5273;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__5274 = nval;
            var G__5275 = n + 1;
            val = G__5274;
            n = G__5275;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5276 = nval;
          var G__5277 = n + 1;
          val__$1 = G__5276;
          n = G__5277;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5278 = nval;
          var G__5279 = n + 1;
          val__$1 = G__5278;
          n = G__5279;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__5280 = nval;
            var G__5281 = n + 1;
            val = G__5280;
            n = G__5281;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5282 = nval;
          var G__5283 = n + 1;
          val__$1 = G__5282;
          n = G__5283;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5284 = nval;
          var G__5285 = n + 1;
          val__$1 = G__5284;
          n = G__5285;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__5287 = x;
  if (G__5287) {
    var bit__4304__auto__ = G__5287.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4304__auto__ || G__5287.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__5287.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__5287);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__5287);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__5289 = x;
  if (G__5289) {
    var bit__4304__auto__ = G__5289.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4304__auto__ || G__5289.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__5289.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__5289);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__5289);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__5290 = sn;
      s = G__5290;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__5291__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__5292 = conj.call(null, coll, x);
          var G__5293 = cljs.core.first.call(null, xs);
          var G__5294 = cljs.core.next.call(null, xs);
          coll = G__5292;
          x = G__5293;
          xs = G__5294;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__5291 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5291__delegate.call(this, coll, x, xs);
    };
    G__5291.cljs$lang$maxFixedArity = 2;
    G__5291.cljs$lang$applyTo = function(arglist__5295) {
      var coll = cljs.core.first(arglist__5295);
      arglist__5295 = cljs.core.next(arglist__5295);
      var x = cljs.core.first(arglist__5295);
      var xs = cljs.core.rest(arglist__5295);
      return G__5291__delegate(coll, x, xs);
    };
    G__5291.cljs$core$IFn$_invoke$arity$variadic = G__5291__delegate;
    return G__5291;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__5296 = cljs.core.next.call(null, s);
      var G__5297 = acc + 1;
      s = G__5296;
      acc = G__5297;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5299 = coll;
      if (G__5299) {
        var bit__4297__auto__ = G__5299.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4297__auto__ || G__5299.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__5300 = cljs.core.next.call(null, coll);
              var G__5301 = n - 1;
              coll = G__5300;
              n = G__5301;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__5302 = cljs.core.next.call(null, coll);
              var G__5303 = n - 1;
              var G__5304 = not_found;
              coll = G__5302;
              n = G__5303;
              not_found = G__5304;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__5309 = coll;
          if (G__5309) {
            var bit__4297__auto__ = G__5309.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4297__auto__ || G__5309.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__5310 = coll;
                  if (G__5310) {
                    var bit__4304__auto__ = G__5310.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4304__auto__ || G__5310.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5310.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5310);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5310);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__5311 = coll;
          if (G__5311) {
            var bit__4297__auto__ = G__5311.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4297__auto__ || G__5311.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__5312 = coll;
                  if (G__5312) {
                    var bit__4304__auto__ = G__5312.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4304__auto__ || G__5312.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5312.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5312);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5312);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__5315 = o;
        if (G__5315) {
          var bit__4297__auto__ = G__5315.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4297__auto__ || G__5315.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__5316 = o;
        if (G__5316) {
          var bit__4297__auto__ = G__5316.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4297__auto__ || G__5316.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__5317__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__5318 = ret;
          var G__5319 = cljs.core.first.call(null, kvs);
          var G__5320 = cljs.core.second.call(null, kvs);
          var G__5321 = cljs.core.nnext.call(null, kvs);
          coll = G__5318;
          k = G__5319;
          v = G__5320;
          kvs = G__5321;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__5317 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5317__delegate.call(this, coll, k, v, kvs);
    };
    G__5317.cljs$lang$maxFixedArity = 3;
    G__5317.cljs$lang$applyTo = function(arglist__5322) {
      var coll = cljs.core.first(arglist__5322);
      arglist__5322 = cljs.core.next(arglist__5322);
      var k = cljs.core.first(arglist__5322);
      arglist__5322 = cljs.core.next(arglist__5322);
      var v = cljs.core.first(arglist__5322);
      var kvs = cljs.core.rest(arglist__5322);
      return G__5317__delegate(coll, k, v, kvs);
    };
    G__5317.cljs$core$IFn$_invoke$arity$variadic = G__5317__delegate;
    return G__5317;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__5323__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__5324 = ret;
            var G__5325 = cljs.core.first.call(null, ks);
            var G__5326 = cljs.core.next.call(null, ks);
            coll = G__5324;
            k = G__5325;
            ks = G__5326;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__5323 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5323__delegate.call(this, coll, k, ks);
    };
    G__5323.cljs$lang$maxFixedArity = 2;
    G__5323.cljs$lang$applyTo = function(arglist__5327) {
      var coll = cljs.core.first(arglist__5327);
      arglist__5327 = cljs.core.next(arglist__5327);
      var k = cljs.core.first(arglist__5327);
      var ks = cljs.core.rest(arglist__5327);
      return G__5323__delegate(coll, k, ks);
    };
    G__5323.cljs$core$IFn$_invoke$arity$variadic = G__5323__delegate;
    return G__5323;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3640__auto__ = goog.isFunction(f);
  if (or__3640__auto__) {
    return or__3640__auto__;
  } else {
    var G__5331 = f;
    if (G__5331) {
      var bit__4304__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3640__auto____$1 = bit__4304__auto__;
        if (cljs.core.truth_(or__3640__auto____$1)) {
          return or__3640__auto____$1;
        } else {
          return G__5331.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__5331.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__5331);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__5331);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__5333 = null;
  var G__5333__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__5333__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__5333__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__5333__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__5333__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__5333__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__5333__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__5333__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__5333__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__5333__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__5333__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__5333__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__5333__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__5333__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__5333__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__5333__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__5333__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__5333__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__5333__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__5333__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__5333__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__5333__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__5333 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__5333__1.call(this, self__);
      case 2:
        return G__5333__2.call(this, self__, a);
      case 3:
        return G__5333__3.call(this, self__, a, b);
      case 4:
        return G__5333__4.call(this, self__, a, b, c);
      case 5:
        return G__5333__5.call(this, self__, a, b, c, d);
      case 6:
        return G__5333__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__5333__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__5333__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__5333__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__5333__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__5333__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__5333__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__5333__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__5333__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__5333__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__5333__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__5333__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__5333__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__5333__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__5333__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__5333__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__5333__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5333.cljs$core$IFn$_invoke$arity$1 = G__5333__1;
  G__5333.cljs$core$IFn$_invoke$arity$2 = G__5333__2;
  G__5333.cljs$core$IFn$_invoke$arity$3 = G__5333__3;
  G__5333.cljs$core$IFn$_invoke$arity$4 = G__5333__4;
  G__5333.cljs$core$IFn$_invoke$arity$5 = G__5333__5;
  G__5333.cljs$core$IFn$_invoke$arity$6 = G__5333__6;
  G__5333.cljs$core$IFn$_invoke$arity$7 = G__5333__7;
  G__5333.cljs$core$IFn$_invoke$arity$8 = G__5333__8;
  G__5333.cljs$core$IFn$_invoke$arity$9 = G__5333__9;
  G__5333.cljs$core$IFn$_invoke$arity$10 = G__5333__10;
  G__5333.cljs$core$IFn$_invoke$arity$11 = G__5333__11;
  G__5333.cljs$core$IFn$_invoke$arity$12 = G__5333__12;
  G__5333.cljs$core$IFn$_invoke$arity$13 = G__5333__13;
  G__5333.cljs$core$IFn$_invoke$arity$14 = G__5333__14;
  G__5333.cljs$core$IFn$_invoke$arity$15 = G__5333__15;
  G__5333.cljs$core$IFn$_invoke$arity$16 = G__5333__16;
  G__5333.cljs$core$IFn$_invoke$arity$17 = G__5333__17;
  G__5333.cljs$core$IFn$_invoke$arity$18 = G__5333__18;
  G__5333.cljs$core$IFn$_invoke$arity$19 = G__5333__19;
  G__5333.cljs$core$IFn$_invoke$arity$20 = G__5333__20;
  G__5333.cljs$core$IFn$_invoke$arity$21 = G__5333__21;
  G__5333.cljs$core$IFn$_invoke$arity$22 = G__5333__22;
  return G__5333;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args5332) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5332)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__5337 = o;
    if (G__5337) {
      var bit__4304__auto__ = G__5337.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4304__auto__ || G__5337.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__5337.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__5337);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__5337);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3628__auto__ = !(o == null);
    if (and__3628__auto__) {
      var G__5341 = o;
      if (G__5341) {
        var bit__4304__auto__ = G__5341.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4304__auto__ || G__5341.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__5341.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__5341);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__5341);
      }
    } else {
      return and__3628__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__5342__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__5343 = ret;
            var G__5344 = cljs.core.first.call(null, ks);
            var G__5345 = cljs.core.next.call(null, ks);
            coll = G__5343;
            k = G__5344;
            ks = G__5345;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__5342 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5342__delegate.call(this, coll, k, ks);
    };
    G__5342.cljs$lang$maxFixedArity = 2;
    G__5342.cljs$lang$applyTo = function(arglist__5346) {
      var coll = cljs.core.first(arglist__5346);
      arglist__5346 = cljs.core.next(arglist__5346);
      var k = cljs.core.first(arglist__5346);
      var ks = cljs.core.rest(arglist__5346);
      return G__5342__delegate(coll, k, ks);
    };
    G__5342.cljs$core$IFn$_invoke$arity$variadic = G__5342__delegate;
    return G__5342;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__5348 = x;
    if (G__5348) {
      var bit__4304__auto__ = G__5348.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4304__auto__ || G__5348.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__5348.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__5348);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__5348);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__5350 = x;
    if (G__5350) {
      var bit__4304__auto__ = G__5350.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4304__auto__ || G__5350.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__5350.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__5350);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__5350);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__5352 = x;
  if (G__5352) {
    var bit__4304__auto__ = G__5352.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4304__auto__ || G__5352.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__5352.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__5352);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__5352);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__5354 = x;
  if (G__5354) {
    var bit__4304__auto__ = G__5354.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4304__auto__ || G__5354.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__5354.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__5354);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__5354);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__5356 = x;
  if (G__5356) {
    var bit__4304__auto__ = G__5356.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4304__auto__ || G__5356.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__5356.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__5356);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__5356);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__5358 = x;
  if (G__5358) {
    var bit__4304__auto__ = G__5358.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4304__auto__ || G__5358.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__5358.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__5358);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__5358);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__5360 = x;
    if (G__5360) {
      var bit__4304__auto__ = G__5360.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4304__auto__ || G__5360.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__5360.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__5360);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__5360);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__5362 = x;
  if (G__5362) {
    var bit__4304__auto__ = G__5362.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4304__auto__ || G__5362.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__5362.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__5362);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__5362);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__5364 = x;
  if (G__5364) {
    var bit__4297__auto__ = G__5364.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4297__auto__ || G__5364.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj5368 = {};
    return obj5368;
  };
  var js_obj__1 = function() {
    var G__5369__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__5369 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5369__delegate.call(this, keyvals);
    };
    G__5369.cljs$lang$maxFixedArity = 0;
    G__5369.cljs$lang$applyTo = function(arglist__5370) {
      var keyvals = cljs.core.seq(arglist__5370);
      return G__5369__delegate(keyvals);
    };
    G__5369.cljs$core$IFn$_invoke$arity$variadic = G__5369__delegate;
    return G__5369;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__5371 = i__$1 + 1;
      var G__5372 = j__$1 + 1;
      var G__5373 = len__$1 - 1;
      i__$1 = G__5371;
      j__$1 = G__5372;
      len__$1 = G__5373;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__5374 = i__$1 - 1;
      var G__5375 = j__$1 - 1;
      var G__5376 = len__$1 - 1;
      i__$1 = G__5374;
      j__$1 = G__5375;
      len__$1 = G__5376;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj5378 = {};
  return obj5378;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__5380 = s;
    if (G__5380) {
      var bit__4304__auto__ = G__5380.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4304__auto__ || G__5380.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__5380.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5380);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__5380);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__5382 = s;
  if (G__5382) {
    var bit__4304__auto__ = G__5382.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4304__auto__ || G__5382.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__5382.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5382);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__5382);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3640__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3640__auto__) {
    return or__3640__auto__;
  } else {
    var G__5386 = f;
    if (G__5386) {
      var bit__4304__auto__ = G__5386.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4304__auto__ || G__5386.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__5386.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__5386);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__5386);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__5387__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__5388 = cljs.core.conj.call(null, s, x__$1);
              var G__5389 = etc;
              s = G__5388;
              xs = G__5389;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__5387 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5387__delegate.call(this, x, y, more);
    };
    G__5387.cljs$lang$maxFixedArity = 2;
    G__5387.cljs$lang$applyTo = function(arglist__5390) {
      var x = cljs.core.first(arglist__5390);
      arglist__5390 = cljs.core.next(arglist__5390);
      var y = cljs.core.first(arglist__5390);
      var more = cljs.core.rest(arglist__5390);
      return G__5387__delegate(x, y, more);
    };
    G__5387.cljs$core$IFn$_invoke$arity$variadic = G__5387__delegate;
    return G__5387;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3640__auto__ = cljs.core.seq.call(null, coll);
    if (or__3640__auto__) {
      return or__3640__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__5392 = x;
            if (G__5392) {
              var bit__4297__auto__ = G__5392.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4297__auto__ || G__5392.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__5393 = xs;
        var G__5394 = ys;
        var G__5395 = len;
        var G__5396 = n + 1;
        xs = G__5393;
        ys = G__5394;
        len = G__5395;
        n = G__5396;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__5397 = nval;
          var G__5398 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__5397;
          coll__$1 = G__5398;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__5401 = coll;
      if (G__5401) {
        var bit__4297__auto__ = G__5401.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4297__auto__ || G__5401.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__5402 = coll;
      if (G__5402) {
        var bit__4297__auto__ = G__5402.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4297__auto__ || G__5402.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.call(null, f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__5403 = null;
      var G__5403__0 = function() {
        return f.call(null);
      };
      var G__5403__1 = function(x) {
        return cf.call(null, x);
      };
      var G__5403__2 = function(x, y) {
        return f.call(null, x, y);
      };
      G__5403 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__5403__0.call(this);
          case 1:
            return G__5403__1.call(this, x);
          case 2:
            return G__5403__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5403.cljs$core$IFn$_invoke$arity$0 = G__5403__0;
      G__5403.cljs$core$IFn$_invoke$arity$1 = G__5403__1;
      G__5403.cljs$core$IFn$_invoke$arity$2 = G__5403__2;
      return G__5403;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, f);
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    return f__$1.call(null, ret);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__5404__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__5404 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5404__delegate.call(this, x, y, more);
    };
    G__5404.cljs$lang$maxFixedArity = 2;
    G__5404.cljs$lang$applyTo = function(arglist__5405) {
      var x = cljs.core.first(arglist__5405);
      arglist__5405 = cljs.core.next(arglist__5405);
      var y = cljs.core.first(arglist__5405);
      var more = cljs.core.rest(arglist__5405);
      return G__5404__delegate(x, y, more);
    };
    G__5404.cljs$core$IFn$_invoke$arity$variadic = G__5404__delegate;
    return G__5404;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__5406__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__5406 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5406__delegate.call(this, x, y, more);
    };
    G__5406.cljs$lang$maxFixedArity = 2;
    G__5406.cljs$lang$applyTo = function(arglist__5407) {
      var x = cljs.core.first(arglist__5407);
      arglist__5407 = cljs.core.next(arglist__5407);
      var y = cljs.core.first(arglist__5407);
      var more = cljs.core.rest(arglist__5407);
      return G__5406__delegate(x, y, more);
    };
    G__5406.cljs$core$IFn$_invoke$arity$variadic = G__5406__delegate;
    return G__5406;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__5408__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__5408 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5408__delegate.call(this, x, y, more);
    };
    G__5408.cljs$lang$maxFixedArity = 2;
    G__5408.cljs$lang$applyTo = function(arglist__5409) {
      var x = cljs.core.first(arglist__5409);
      arglist__5409 = cljs.core.next(arglist__5409);
      var y = cljs.core.first(arglist__5409);
      var more = cljs.core.rest(arglist__5409);
      return G__5408__delegate(x, y, more);
    };
    G__5408.cljs$core$IFn$_invoke$arity$variadic = G__5408__delegate;
    return G__5408;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__5410__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__5410 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5410__delegate.call(this, x, y, more);
    };
    G__5410.cljs$lang$maxFixedArity = 2;
    G__5410.cljs$lang$applyTo = function(arglist__5411) {
      var x = cljs.core.first(arglist__5411);
      arglist__5411 = cljs.core.next(arglist__5411);
      var y = cljs.core.first(arglist__5411);
      var more = cljs.core.rest(arglist__5411);
      return G__5410__delegate(x, y, more);
    };
    G__5410.cljs$core$IFn$_invoke$arity$variadic = G__5410__delegate;
    return G__5410;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__5412__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__5413 = y;
            var G__5414 = cljs.core.first.call(null, more);
            var G__5415 = cljs.core.next.call(null, more);
            x = G__5413;
            y = G__5414;
            more = G__5415;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5412 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5412__delegate.call(this, x, y, more);
    };
    G__5412.cljs$lang$maxFixedArity = 2;
    G__5412.cljs$lang$applyTo = function(arglist__5416) {
      var x = cljs.core.first(arglist__5416);
      arglist__5416 = cljs.core.next(arglist__5416);
      var y = cljs.core.first(arglist__5416);
      var more = cljs.core.rest(arglist__5416);
      return G__5412__delegate(x, y, more);
    };
    G__5412.cljs$core$IFn$_invoke$arity$variadic = G__5412__delegate;
    return G__5412;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__5417__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__5418 = y;
            var G__5419 = cljs.core.first.call(null, more);
            var G__5420 = cljs.core.next.call(null, more);
            x = G__5418;
            y = G__5419;
            more = G__5420;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5417 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5417__delegate.call(this, x, y, more);
    };
    G__5417.cljs$lang$maxFixedArity = 2;
    G__5417.cljs$lang$applyTo = function(arglist__5421) {
      var x = cljs.core.first(arglist__5421);
      arglist__5421 = cljs.core.next(arglist__5421);
      var y = cljs.core.first(arglist__5421);
      var more = cljs.core.rest(arglist__5421);
      return G__5417__delegate(x, y, more);
    };
    G__5417.cljs$core$IFn$_invoke$arity$variadic = G__5417__delegate;
    return G__5417;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__5422__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__5423 = y;
            var G__5424 = cljs.core.first.call(null, more);
            var G__5425 = cljs.core.next.call(null, more);
            x = G__5423;
            y = G__5424;
            more = G__5425;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5422 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5422__delegate.call(this, x, y, more);
    };
    G__5422.cljs$lang$maxFixedArity = 2;
    G__5422.cljs$lang$applyTo = function(arglist__5426) {
      var x = cljs.core.first(arglist__5426);
      arglist__5426 = cljs.core.next(arglist__5426);
      var y = cljs.core.first(arglist__5426);
      var more = cljs.core.rest(arglist__5426);
      return G__5422__delegate(x, y, more);
    };
    G__5422.cljs$core$IFn$_invoke$arity$variadic = G__5422__delegate;
    return G__5422;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__5427__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__5428 = y;
            var G__5429 = cljs.core.first.call(null, more);
            var G__5430 = cljs.core.next.call(null, more);
            x = G__5428;
            y = G__5429;
            more = G__5430;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5427 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5427__delegate.call(this, x, y, more);
    };
    G__5427.cljs$lang$maxFixedArity = 2;
    G__5427.cljs$lang$applyTo = function(arglist__5431) {
      var x = cljs.core.first(arglist__5431);
      arglist__5431 = cljs.core.next(arglist__5431);
      var y = cljs.core.first(arglist__5431);
      var more = cljs.core.rest(arglist__5431);
      return G__5427__delegate(x, y, more);
    };
    G__5427.cljs$core$IFn$_invoke$arity$variadic = G__5427__delegate;
    return G__5427;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3947__auto__ = x;
    var y__3948__auto__ = y;
    return x__3947__auto__ > y__3948__auto__ ? x__3947__auto__ : y__3948__auto__;
  };
  var max__3 = function() {
    var G__5432__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3947__auto__ = x;
        var y__3948__auto__ = y;
        return x__3947__auto__ > y__3948__auto__ ? x__3947__auto__ : y__3948__auto__;
      }(), more);
    };
    var G__5432 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5432__delegate.call(this, x, y, more);
    };
    G__5432.cljs$lang$maxFixedArity = 2;
    G__5432.cljs$lang$applyTo = function(arglist__5433) {
      var x = cljs.core.first(arglist__5433);
      arglist__5433 = cljs.core.next(arglist__5433);
      var y = cljs.core.first(arglist__5433);
      var more = cljs.core.rest(arglist__5433);
      return G__5432__delegate(x, y, more);
    };
    G__5432.cljs$core$IFn$_invoke$arity$variadic = G__5432__delegate;
    return G__5432;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3954__auto__ = x;
    var y__3955__auto__ = y;
    return x__3954__auto__ < y__3955__auto__ ? x__3954__auto__ : y__3955__auto__;
  };
  var min__3 = function() {
    var G__5434__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3954__auto__ = x;
        var y__3955__auto__ = y;
        return x__3954__auto__ < y__3955__auto__ ? x__3954__auto__ : y__3955__auto__;
      }(), more);
    };
    var G__5434 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5434__delegate.call(this, x, y, more);
    };
    G__5434.cljs$lang$maxFixedArity = 2;
    G__5434.cljs$lang$applyTo = function(arglist__5435) {
      var x = cljs.core.first(arglist__5435);
      arglist__5435 = cljs.core.next(arglist__5435);
      var y = cljs.core.first(arglist__5435);
      var more = cljs.core.rest(arglist__5435);
      return G__5434__delegate(x, y, more);
    };
    G__5434.cljs$core$IFn$_invoke$arity$variadic = G__5434__delegate;
    return G__5434;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__5436__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__5436 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5436__delegate.call(this, x, y, more);
    };
    G__5436.cljs$lang$maxFixedArity = 2;
    G__5436.cljs$lang$applyTo = function(arglist__5437) {
      var x = cljs.core.first(arglist__5437);
      arglist__5437 = cljs.core.next(arglist__5437);
      var y = cljs.core.first(arglist__5437);
      var more = cljs.core.rest(arglist__5437);
      return G__5436__delegate(x, y, more);
    };
    G__5436.cljs$core$IFn$_invoke$arity$variadic = G__5436__delegate;
    return G__5436;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__5438__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__5438 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5438__delegate.call(this, x, y, more);
    };
    G__5438.cljs$lang$maxFixedArity = 2;
    G__5438.cljs$lang$applyTo = function(arglist__5439) {
      var x = cljs.core.first(arglist__5439);
      arglist__5439 = cljs.core.next(arglist__5439);
      var y = cljs.core.first(arglist__5439);
      var more = cljs.core.rest(arglist__5439);
      return G__5438__delegate(x, y, more);
    };
    G__5438.cljs$core$IFn$_invoke$arity$variadic = G__5438__delegate;
    return G__5438;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__5440__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__5440 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5440__delegate.call(this, x, y, more);
    };
    G__5440.cljs$lang$maxFixedArity = 2;
    G__5440.cljs$lang$applyTo = function(arglist__5441) {
      var x = cljs.core.first(arglist__5441);
      arglist__5441 = cljs.core.next(arglist__5441);
      var y = cljs.core.first(arglist__5441);
      var more = cljs.core.rest(arglist__5441);
      return G__5440__delegate(x, y, more);
    };
    G__5440.cljs$core$IFn$_invoke$arity$variadic = G__5440__delegate;
    return G__5440;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__5442__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__5442 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5442__delegate.call(this, x, y, more);
    };
    G__5442.cljs$lang$maxFixedArity = 2;
    G__5442.cljs$lang$applyTo = function(arglist__5443) {
      var x = cljs.core.first(arglist__5443);
      arglist__5443 = cljs.core.next(arglist__5443);
      var y = cljs.core.first(arglist__5443);
      var more = cljs.core.rest(arglist__5443);
      return G__5442__delegate(x, y, more);
    };
    G__5442.cljs$core$IFn$_invoke$arity$variadic = G__5442__delegate;
    return G__5442;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__5444__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__5444 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5444__delegate.call(this, x, y, more);
    };
    G__5444.cljs$lang$maxFixedArity = 2;
    G__5444.cljs$lang$applyTo = function(arglist__5445) {
      var x = cljs.core.first(arglist__5445);
      arglist__5445 = cljs.core.next(arglist__5445);
      var y = cljs.core.first(arglist__5445);
      var more = cljs.core.rest(arglist__5445);
      return G__5444__delegate(x, y, more);
    };
    G__5444.cljs$core$IFn$_invoke$arity$variadic = G__5444__delegate;
    return G__5444;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__5446__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__5446 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5446__delegate.call(this, x, y, more);
    };
    G__5446.cljs$lang$maxFixedArity = 2;
    G__5446.cljs$lang$applyTo = function(arglist__5447) {
      var x = cljs.core.first(arglist__5447);
      arglist__5447 = cljs.core.next(arglist__5447);
      var y = cljs.core.first(arglist__5447);
      var more = cljs.core.rest(arglist__5447);
      return G__5446__delegate(x, y, more);
    };
    G__5446.cljs$core$IFn$_invoke$arity$variadic = G__5446__delegate;
    return G__5446;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__5448__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__5448 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5448__delegate.call(this, x, y, more);
    };
    G__5448.cljs$lang$maxFixedArity = 2;
    G__5448.cljs$lang$applyTo = function(arglist__5449) {
      var x = cljs.core.first(arglist__5449);
      arglist__5449 = cljs.core.next(arglist__5449);
      var y = cljs.core.first(arglist__5449);
      var more = cljs.core.rest(arglist__5449);
      return G__5448__delegate(x, y, more);
    };
    G__5448.cljs$core$IFn$_invoke$arity$variadic = G__5448__delegate;
    return G__5448;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__5450__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__5451 = y;
            var G__5452 = cljs.core.first.call(null, more);
            var G__5453 = cljs.core.next.call(null, more);
            x = G__5451;
            y = G__5452;
            more = G__5453;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5450 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5450__delegate.call(this, x, y, more);
    };
    G__5450.cljs$lang$maxFixedArity = 2;
    G__5450.cljs$lang$applyTo = function(arglist__5454) {
      var x = cljs.core.first(arglist__5454);
      arglist__5454 = cljs.core.next(arglist__5454);
      var y = cljs.core.first(arglist__5454);
      var more = cljs.core.rest(arglist__5454);
      return G__5450__delegate(x, y, more);
    };
    G__5450.cljs$core$IFn$_invoke$arity$variadic = G__5450__delegate;
    return G__5450;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__5455 = n__$1 - 1;
      var G__5456 = cljs.core.next.call(null, xs);
      n__$1 = G__5455;
      xs = G__5456;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return "" + x;
    }
  };
  var str__2 = function() {
    var G__5457__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__5458 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__5459 = cljs.core.next.call(null, more);
          sb = G__5458;
          more = G__5459;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__5457 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__5457__delegate.call(this, x, ys);
    };
    G__5457.cljs$lang$maxFixedArity = 1;
    G__5457.cljs$lang$applyTo = function(arglist__5460) {
      var x = cljs.core.first(arglist__5460);
      var ys = cljs.core.rest(arglist__5460);
      return G__5457__delegate(x, ys);
    };
    G__5457.cljs$core$IFn$_invoke$arity$variadic = G__5457__delegate;
    return G__5457;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__5461 = cljs.core.next.call(null, xs);
            var G__5462 = cljs.core.next.call(null, ys);
            xs = G__5461;
            ys = G__5462;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__5463 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__5464 = cljs.core.next.call(null, s);
        res = G__5463;
        s = G__5464;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__5465 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__5466 = cljs.core.next.call(null, s);
      h = G__5465;
      s = G__5466;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__5467 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__5468 = cljs.core.next.call(null, s__$1);
      h = G__5467;
      s__$1 = G__5468;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__5475_5481 = cljs.core.seq.call(null, fn_map);
  var chunk__5476_5482 = null;
  var count__5477_5483 = 0;
  var i__5478_5484 = 0;
  while (true) {
    if (i__5478_5484 < count__5477_5483) {
      var vec__5479_5485 = cljs.core._nth.call(null, chunk__5476_5482, i__5478_5484);
      var key_name_5486 = cljs.core.nth.call(null, vec__5479_5485, 0, null);
      var f_5487 = cljs.core.nth.call(null, vec__5479_5485, 1, null);
      var str_name_5488 = cljs.core.name.call(null, key_name_5486);
      obj[str_name_5488] = f_5487;
      var G__5489 = seq__5475_5481;
      var G__5490 = chunk__5476_5482;
      var G__5491 = count__5477_5483;
      var G__5492 = i__5478_5484 + 1;
      seq__5475_5481 = G__5489;
      chunk__5476_5482 = G__5490;
      count__5477_5483 = G__5491;
      i__5478_5484 = G__5492;
      continue;
    } else {
      var temp__4126__auto___5493 = cljs.core.seq.call(null, seq__5475_5481);
      if (temp__4126__auto___5493) {
        var seq__5475_5494__$1 = temp__4126__auto___5493;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5475_5494__$1)) {
          var c__4410__auto___5495 = cljs.core.chunk_first.call(null, seq__5475_5494__$1);
          var G__5496 = cljs.core.chunk_rest.call(null, seq__5475_5494__$1);
          var G__5497 = c__4410__auto___5495;
          var G__5498 = cljs.core.count.call(null, c__4410__auto___5495);
          var G__5499 = 0;
          seq__5475_5481 = G__5496;
          chunk__5476_5482 = G__5497;
          count__5477_5483 = G__5498;
          i__5478_5484 = G__5499;
          continue;
        } else {
          var vec__5480_5500 = cljs.core.first.call(null, seq__5475_5494__$1);
          var key_name_5501 = cljs.core.nth.call(null, vec__5480_5500, 0, null);
          var f_5502 = cljs.core.nth.call(null, vec__5480_5500, 1, null);
          var str_name_5503 = cljs.core.name.call(null, key_name_5501);
          obj[str_name_5503] = f_5502;
          var G__5504 = cljs.core.next.call(null, seq__5475_5494__$1);
          var G__5505 = null;
          var G__5506 = 0;
          var G__5507 = 0;
          seq__5475_5481 = G__5504;
          chunk__5476_5482 = G__5505;
          count__5477_5483 = G__5506;
          i__5478_5484 = G__5507;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__5509 = coll;
  if (G__5509) {
    var bit__4304__auto__ = G__5509.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4304__auto__ || G__5509.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__5509.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__5509);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__5509);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__5510 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__5510;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__5511 = i - 1;
        var G__5512 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__5511;
        r = G__5512;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__5513) {
    var xs = cljs.core.seq(arglist__5513);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3640__auto__ = coll == null;
    if (or__3640__auto__) {
      return or__3640__auto__;
    } else {
      var G__5517 = coll;
      if (G__5517) {
        var bit__4297__auto__ = G__5517.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4297__auto__ || G__5517.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__5519 = x;
  if (G__5519) {
    var bit__4304__auto__ = G__5519.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4304__auto__ || G__5519.cljs$core$IList$) {
      return true;
    } else {
      if (!G__5519.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__5519);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__5519);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4051__auto__ = self__._hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__5521 = null;
  var G__5521__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__5521__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__5521 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5521__2.call(this, self__, coll);
      case 3:
        return G__5521__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5521.cljs$core$IFn$_invoke$arity$2 = G__5521__2;
  G__5521.cljs$core$IFn$_invoke$arity$3 = G__5521__3;
  return G__5521;
}();
cljs.core.Keyword.prototype.apply = function(self__, args5520) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5520)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__5523 = x;
    if (G__5523) {
      var bit__4297__auto__ = G__5523.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4297__auto__ || G__5523.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__5524 = ls.sval();
        ls = G__5524;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__5526 = s;
    if (G__5526) {
      var bit__4297__auto__ = G__5526.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4297__auto__ || G__5526.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__5527 = cljs.core.next.call(null, s__$1);
      s__$1 = G__5527;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_5528 = 0;
  var xs_5529 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_5529) {
      ret[i_5528] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_5529));
      var G__5530 = i_5528 + 1;
      var G__5531 = cljs.core.next.call(null, xs_5529);
      i_5528 = G__5530;
      xs_5529 = G__5531;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5532 = i + 1;
          var G__5533 = cljs.core.next.call(null, s__$1);
          i = G__5532;
          s__$1 = G__5533;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4510__auto___5534 = size;
      var i_5535 = 0;
      while (true) {
        if (i_5535 < n__4510__auto___5534) {
          a[i_5535] = init_val_or_seq;
          var G__5536 = i_5535 + 1;
          i_5535 = G__5536;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5537 = i + 1;
          var G__5538 = cljs.core.next.call(null, s__$1);
          i = G__5537;
          s__$1 = G__5538;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4510__auto___5539 = size;
      var i_5540 = 0;
      while (true) {
        if (i_5540 < n__4510__auto___5539) {
          a[i_5540] = init_val_or_seq;
          var G__5541 = i_5540 + 1;
          i_5540 = G__5541;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5542 = i + 1;
          var G__5543 = cljs.core.next.call(null, s__$1);
          i = G__5542;
          s__$1 = G__5543;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4510__auto___5544 = size;
      var i_5545 = 0;
      while (true) {
        if (i_5545 < n__4510__auto___5544) {
          a[i_5545] = init_val_or_seq;
          var G__5546 = i_5545 + 1;
          i_5545 = G__5546;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__5547 = i + 1;
          var G__5548 = cljs.core.next.call(null, s__$1);
          i = G__5547;
          s__$1 = G__5548;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4510__auto___5549 = size;
      var i_5550 = 0;
      while (true) {
        if (i_5550 < n__4510__auto___5549) {
          a[i_5550] = init_val_or_seq;
          var G__5551 = i_5550 + 1;
          i_5550 = G__5551;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__5552 = cljs.core.next.call(null, s__$1);
        var G__5553 = i - 1;
        var G__5554 = sum + 1;
        s__$1 = G__5552;
        i = G__5553;
        sum = G__5554;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__5555__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__5555 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5555__delegate.call(this, x, y, zs);
    };
    G__5555.cljs$lang$maxFixedArity = 2;
    G__5555.cljs$lang$applyTo = function(arglist__5556) {
      var x = cljs.core.first(arglist__5556);
      arglist__5556 = cljs.core.next(arglist__5556);
      var y = cljs.core.first(arglist__5556);
      var zs = cljs.core.rest(arglist__5556);
      return G__5555__delegate(x, y, zs);
    };
    G__5555.cljs$core$IFn$_invoke$arity$variadic = G__5555__delegate;
    return G__5555;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__5557__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__5557 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5557__delegate.call(this, a, b, c, d, more);
    };
    G__5557.cljs$lang$maxFixedArity = 4;
    G__5557.cljs$lang$applyTo = function(arglist__5558) {
      var a = cljs.core.first(arglist__5558);
      arglist__5558 = cljs.core.next(arglist__5558);
      var b = cljs.core.first(arglist__5558);
      arglist__5558 = cljs.core.next(arglist__5558);
      var c = cljs.core.first(arglist__5558);
      arglist__5558 = cljs.core.next(arglist__5558);
      var d = cljs.core.first(arglist__5558);
      var more = cljs.core.rest(arglist__5558);
      return G__5557__delegate(a, b, c, d, more);
    };
    G__5557.cljs$core$IFn$_invoke$arity$variadic = G__5557__delegate;
    return G__5557;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__5559__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__5560 = ntcoll;
          var G__5561 = cljs.core.first.call(null, vals);
          var G__5562 = cljs.core.next.call(null, vals);
          tcoll = G__5560;
          val = G__5561;
          vals = G__5562;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5559 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5559__delegate.call(this, tcoll, val, vals);
    };
    G__5559.cljs$lang$maxFixedArity = 2;
    G__5559.cljs$lang$applyTo = function(arglist__5563) {
      var tcoll = cljs.core.first(arglist__5563);
      arglist__5563 = cljs.core.next(arglist__5563);
      var val = cljs.core.first(arglist__5563);
      var vals = cljs.core.rest(arglist__5563);
      return G__5559__delegate(tcoll, val, vals);
    };
    G__5559.cljs$core$IFn$_invoke$arity$variadic = G__5559__delegate;
    return G__5559;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__5564__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__5565 = ntcoll;
          var G__5566 = cljs.core.first.call(null, kvs);
          var G__5567 = cljs.core.second.call(null, kvs);
          var G__5568 = cljs.core.nnext.call(null, kvs);
          tcoll = G__5565;
          key = G__5566;
          val = G__5567;
          kvs = G__5568;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5564 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5564__delegate.call(this, tcoll, key, val, kvs);
    };
    G__5564.cljs$lang$maxFixedArity = 3;
    G__5564.cljs$lang$applyTo = function(arglist__5569) {
      var tcoll = cljs.core.first(arglist__5569);
      arglist__5569 = cljs.core.next(arglist__5569);
      var key = cljs.core.first(arglist__5569);
      arglist__5569 = cljs.core.next(arglist__5569);
      var val = cljs.core.first(arglist__5569);
      var kvs = cljs.core.rest(arglist__5569);
      return G__5564__delegate(tcoll, key, val, kvs);
    };
    G__5564.cljs$core$IFn$_invoke$arity$variadic = G__5564__delegate;
    return G__5564;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__5570__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__5571 = ntcoll;
          var G__5572 = cljs.core.first.call(null, ks);
          var G__5573 = cljs.core.next.call(null, ks);
          tcoll = G__5571;
          key = G__5572;
          ks = G__5573;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5570 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5570__delegate.call(this, tcoll, key, ks);
    };
    G__5570.cljs$lang$maxFixedArity = 2;
    G__5570.cljs$lang$applyTo = function(arglist__5574) {
      var tcoll = cljs.core.first(arglist__5574);
      arglist__5574 = cljs.core.next(arglist__5574);
      var key = cljs.core.first(arglist__5574);
      var ks = cljs.core.rest(arglist__5574);
      return G__5570__delegate(tcoll, key, ks);
    };
    G__5570.cljs$core$IFn$_invoke$arity$variadic = G__5570__delegate;
    return G__5570;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__5575__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__5576 = ntcoll;
          var G__5577 = cljs.core.first.call(null, vals);
          var G__5578 = cljs.core.next.call(null, vals);
          tcoll = G__5576;
          val = G__5577;
          vals = G__5578;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__5575 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5575__delegate.call(this, tcoll, val, vals);
    };
    G__5575.cljs$lang$maxFixedArity = 2;
    G__5575.cljs$lang$applyTo = function(arglist__5579) {
      var tcoll = cljs.core.first(arglist__5579);
      arglist__5579 = cljs.core.next(arglist__5579);
      var val = cljs.core.first(arglist__5579);
      var vals = cljs.core.rest(arglist__5579);
      return G__5575__delegate(tcoll, val, vals);
    };
    G__5575.cljs$core$IFn$_invoke$arity$variadic = G__5575__delegate;
    return G__5575;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4554 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4554);
      } else {
        return f.call(null, a4554);
      }
    } else {
      var b4555 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4554, b4555);
        } else {
          return f.call(null, a4554, b4555);
        }
      } else {
        var c4556 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4554, b4555, c4556);
          } else {
            return f.call(null, a4554, b4555, c4556);
          }
        } else {
          var d4557 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4554, b4555, c4556, d4557);
            } else {
              return f.call(null, a4554, b4555, c4556, d4557);
            }
          } else {
            var e4558 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4554, b4555, c4556, d4557, e4558);
              } else {
                return f.call(null, a4554, b4555, c4556, d4557, e4558);
              }
            } else {
              var f4559 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4554, b4555, c4556, d4557, e4558, f4559);
                } else {
                  return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559);
                }
              } else {
                var g4560 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4554, b4555, c4556, d4557, e4558, f4559, g4560);
                  } else {
                    return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560);
                  }
                } else {
                  var h4561 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561);
                    } else {
                      return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561);
                    }
                  } else {
                    var i4562 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562);
                      } else {
                        return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562);
                      }
                    } else {
                      var j4563 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563);
                        } else {
                          return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563);
                        }
                      } else {
                        var k4564 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564);
                          } else {
                            return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564);
                          }
                        } else {
                          var l4565 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565);
                            } else {
                              return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565);
                            }
                          } else {
                            var m4566 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566);
                              } else {
                                return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566);
                              }
                            } else {
                              var n4567 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567);
                                } else {
                                  return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567);
                                }
                              } else {
                                var o4568 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568);
                                  } else {
                                    return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568);
                                  }
                                } else {
                                  var p4569 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569);
                                    } else {
                                      return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569);
                                    }
                                  } else {
                                    var q4570 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569, q4570);
                                      } else {
                                        return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569, q4570);
                                      }
                                    } else {
                                      var r4571 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569, q4570, r4571);
                                        } else {
                                          return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569, q4570, r4571);
                                        }
                                      } else {
                                        var s4572 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569, q4570, r4571, s4572);
                                          } else {
                                            return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569, q4570, r4571, s4572);
                                          }
                                        } else {
                                          var t4573 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569, q4570, r4571, s4572, t4573);
                                            } else {
                                              return f.call(null, a4554, b4555, c4556, d4557, e4558, f4559, g4560, h4561, i4562, j4563, k4564, l4565, m4566, n4567, o4568, p4569, q4570, r4571, s4572, t4573);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__5580__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__5580 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__5580__delegate.call(this, f, a, b, c, d, args);
    };
    G__5580.cljs$lang$maxFixedArity = 5;
    G__5580.cljs$lang$applyTo = function(arglist__5581) {
      var f = cljs.core.first(arglist__5581);
      arglist__5581 = cljs.core.next(arglist__5581);
      var a = cljs.core.first(arglist__5581);
      arglist__5581 = cljs.core.next(arglist__5581);
      var b = cljs.core.first(arglist__5581);
      arglist__5581 = cljs.core.next(arglist__5581);
      var c = cljs.core.first(arglist__5581);
      arglist__5581 = cljs.core.next(arglist__5581);
      var d = cljs.core.first(arglist__5581);
      var args = cljs.core.rest(arglist__5581);
      return G__5580__delegate(f, a, b, c, d, args);
    };
    G__5580.cljs$core$IFn$_invoke$arity$variadic = G__5580__delegate;
    return G__5580;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__5582__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__5582 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__5582__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__5582.cljs$lang$maxFixedArity = 6;
    G__5582.cljs$lang$applyTo = function(arglist__5583) {
      var obj = cljs.core.first(arglist__5583);
      arglist__5583 = cljs.core.next(arglist__5583);
      var f = cljs.core.first(arglist__5583);
      arglist__5583 = cljs.core.next(arglist__5583);
      var a = cljs.core.first(arglist__5583);
      arglist__5583 = cljs.core.next(arglist__5583);
      var b = cljs.core.first(arglist__5583);
      arglist__5583 = cljs.core.next(arglist__5583);
      var c = cljs.core.first(arglist__5583);
      arglist__5583 = cljs.core.next(arglist__5583);
      var d = cljs.core.first(arglist__5583);
      var args = cljs.core.rest(arglist__5583);
      return G__5582__delegate(obj, f, a, b, c, d, args);
    };
    G__5582.cljs$core$IFn$_invoke$arity$variadic = G__5582__delegate;
    return G__5582;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__5584__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__5584 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5584__delegate.call(this, x, y, more);
    };
    G__5584.cljs$lang$maxFixedArity = 2;
    G__5584.cljs$lang$applyTo = function(arglist__5585) {
      var x = cljs.core.first(arglist__5585);
      arglist__5585 = cljs.core.next(arglist__5585);
      var y = cljs.core.first(arglist__5585);
      var more = cljs.core.rest(arglist__5585);
      return G__5584__delegate(x, y, more);
    };
    G__5584.cljs$core$IFn$_invoke$arity$variadic = G__5584__delegate;
    return G__5584;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t5589 !== "undefined") {
  } else {
    cljs.core.t5589 = function(nil_iter, meta5590) {
      this.nil_iter = nil_iter;
      this.meta5590 = meta5590;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t5589.cljs$lang$type = true;
    cljs.core.t5589.cljs$lang$ctorStr = "cljs.core/t5589";
    cljs.core.t5589.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
      return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/t5589");
    };
    cljs.core.t5589.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t5589.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t5589.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t5589.prototype.cljs$core$IMeta$_meta$arity$1 = function(_5591) {
      var self__ = this;
      var _5591__$1 = this;
      return self__.meta5590;
    };
    cljs.core.t5589.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_5591, meta5590__$1) {
      var self__ = this;
      var _5591__$1 = this;
      return new cljs.core.t5589(self__.nil_iter, meta5590__$1);
    };
    cljs.core.__GT_t5589 = function __GT_t5589(nil_iter__$1, meta5590) {
      return new cljs.core.t5589(nil_iter__$1, meta5590);
    };
  }
  return new cljs.core.t5589(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        if (cljs.core.iterable_QMARK_.call(null, coll)) {
          return cljs.core._iterator.call(null, coll);
        } else {
          if (cljs.core.seqable_QMARK_.call(null, coll)) {
            return cljs.core.seq_iter.call(null, coll);
          } else {
            throw new Error("Cannot create iterator from " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3628__auto__ = !(lt.stepper == null);
      if (and__3628__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3628__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__5592 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__5592;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4510__auto___5593 = self__.iters.length;
  var i_5594 = 0;
  while (true) {
    if (i_5594 < n__4510__auto___5593) {
      self__.nexts[i_5594] = self__.iters[i_5594].next();
      var G__5595 = i_5594 + 1;
      i_5594 = G__5595;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3628__auto__ = !(lt.stepper == null);
      if (and__3628__auto__) {
        return this$.hasNext();
      } else {
        return and__3628__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__5596_5600 = cljs.core.seq.call(null, colls);
  var chunk__5597_5601 = null;
  var count__5598_5602 = 0;
  var i__5599_5603 = 0;
  while (true) {
    if (i__5599_5603 < count__5598_5602) {
      var coll_5604 = cljs.core._nth.call(null, chunk__5597_5601, i__5599_5603);
      iters.push(cljs.core.iter.call(null, coll_5604));
      var G__5605 = seq__5596_5600;
      var G__5606 = chunk__5597_5601;
      var G__5607 = count__5598_5602;
      var G__5608 = i__5599_5603 + 1;
      seq__5596_5600 = G__5605;
      chunk__5597_5601 = G__5606;
      count__5598_5602 = G__5607;
      i__5599_5603 = G__5608;
      continue;
    } else {
      var temp__4126__auto___5609 = cljs.core.seq.call(null, seq__5596_5600);
      if (temp__4126__auto___5609) {
        var seq__5596_5610__$1 = temp__4126__auto___5609;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5596_5610__$1)) {
          var c__4410__auto___5611 = cljs.core.chunk_first.call(null, seq__5596_5610__$1);
          var G__5612 = cljs.core.chunk_rest.call(null, seq__5596_5610__$1);
          var G__5613 = c__4410__auto___5611;
          var G__5614 = cljs.core.count.call(null, c__4410__auto___5611);
          var G__5615 = 0;
          seq__5596_5600 = G__5612;
          chunk__5597_5601 = G__5613;
          count__5598_5602 = G__5614;
          i__5599_5603 = G__5615;
          continue;
        } else {
          var coll_5616 = cljs.core.first.call(null, seq__5596_5610__$1);
          iters.push(cljs.core.iter.call(null, coll_5616));
          var G__5617 = cljs.core.next.call(null, seq__5596_5610__$1);
          var G__5618 = null;
          var G__5619 = 0;
          var G__5620 = 0;
          seq__5596_5600 = G__5617;
          chunk__5597_5601 = G__5618;
          count__5598_5602 = G__5619;
          i__5599_5603 = G__5620;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3640__auto__ = cljs.core.seq.call(null, coll);
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__5621__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__5621 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5621__delegate.call(this, xform, coll, colls);
    };
    G__5621.cljs$lang$maxFixedArity = 2;
    G__5621.cljs$lang$applyTo = function(arglist__5622) {
      var xform = cljs.core.first(arglist__5622);
      arglist__5622 = cljs.core.next(arglist__5622);
      var coll = cljs.core.first(arglist__5622);
      var colls = cljs.core.rest(arglist__5622);
      return G__5621__delegate(xform, coll, colls);
    };
    G__5621.cljs$core$IFn$_invoke$arity$variadic = G__5621__delegate;
    return G__5621;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__5623 = pred;
        var G__5624 = cljs.core.next.call(null, coll);
        pred = G__5623;
        coll = G__5624;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3640__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3640__auto__)) {
        return or__3640__auto__;
      } else {
        var G__5625 = pred;
        var G__5626 = cljs.core.next.call(null, coll);
        pred = G__5625;
        coll = G__5626;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__5627 = null;
    var G__5627__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__5627__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__5627__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__5627__3 = function() {
      var G__5628__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__5628 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__5628__delegate.call(this, x, y, zs);
      };
      G__5628.cljs$lang$maxFixedArity = 2;
      G__5628.cljs$lang$applyTo = function(arglist__5629) {
        var x = cljs.core.first(arglist__5629);
        arglist__5629 = cljs.core.next(arglist__5629);
        var y = cljs.core.first(arglist__5629);
        var zs = cljs.core.rest(arglist__5629);
        return G__5628__delegate(x, y, zs);
      };
      G__5628.cljs$core$IFn$_invoke$arity$variadic = G__5628__delegate;
      return G__5628;
    }();
    G__5627 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__5627__0.call(this);
        case 1:
          return G__5627__1.call(this, x);
        case 2:
          return G__5627__2.call(this, x, y);
        default:
          return G__5627__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__5627.cljs$lang$maxFixedArity = 2;
    G__5627.cljs$lang$applyTo = G__5627__3.cljs$lang$applyTo;
    G__5627.cljs$core$IFn$_invoke$arity$0 = G__5627__0;
    G__5627.cljs$core$IFn$_invoke$arity$1 = G__5627__1;
    G__5627.cljs$core$IFn$_invoke$arity$2 = G__5627__2;
    G__5627.cljs$core$IFn$_invoke$arity$variadic = G__5627__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__5627;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__5630__delegate = function(args) {
      return x;
    };
    var G__5630 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__5630__delegate.call(this, args);
    };
    G__5630.cljs$lang$maxFixedArity = 0;
    G__5630.cljs$lang$applyTo = function(arglist__5631) {
      var args = cljs.core.seq(arglist__5631);
      return G__5630__delegate(args);
    };
    G__5630.cljs$core$IFn$_invoke$arity$variadic = G__5630__delegate;
    return G__5630;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__5632 = null;
      var G__5632__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__5632__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__5632__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__5632__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__5632__4 = function() {
        var G__5633__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__5633 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5633__delegate.call(this, x, y, z, args);
        };
        G__5633.cljs$lang$maxFixedArity = 3;
        G__5633.cljs$lang$applyTo = function(arglist__5634) {
          var x = cljs.core.first(arglist__5634);
          arglist__5634 = cljs.core.next(arglist__5634);
          var y = cljs.core.first(arglist__5634);
          arglist__5634 = cljs.core.next(arglist__5634);
          var z = cljs.core.first(arglist__5634);
          var args = cljs.core.rest(arglist__5634);
          return G__5633__delegate(x, y, z, args);
        };
        G__5633.cljs$core$IFn$_invoke$arity$variadic = G__5633__delegate;
        return G__5633;
      }();
      G__5632 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5632__0.call(this);
          case 1:
            return G__5632__1.call(this, x);
          case 2:
            return G__5632__2.call(this, x, y);
          case 3:
            return G__5632__3.call(this, x, y, z);
          default:
            return G__5632__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5632.cljs$lang$maxFixedArity = 3;
      G__5632.cljs$lang$applyTo = G__5632__4.cljs$lang$applyTo;
      G__5632.cljs$core$IFn$_invoke$arity$0 = G__5632__0;
      G__5632.cljs$core$IFn$_invoke$arity$1 = G__5632__1;
      G__5632.cljs$core$IFn$_invoke$arity$2 = G__5632__2;
      G__5632.cljs$core$IFn$_invoke$arity$3 = G__5632__3;
      G__5632.cljs$core$IFn$_invoke$arity$variadic = G__5632__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5632;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__5635 = null;
      var G__5635__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__5635__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__5635__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__5635__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__5635__4 = function() {
        var G__5636__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__5636 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5636__delegate.call(this, x, y, z, args);
        };
        G__5636.cljs$lang$maxFixedArity = 3;
        G__5636.cljs$lang$applyTo = function(arglist__5637) {
          var x = cljs.core.first(arglist__5637);
          arglist__5637 = cljs.core.next(arglist__5637);
          var y = cljs.core.first(arglist__5637);
          arglist__5637 = cljs.core.next(arglist__5637);
          var z = cljs.core.first(arglist__5637);
          var args = cljs.core.rest(arglist__5637);
          return G__5636__delegate(x, y, z, args);
        };
        G__5636.cljs$core$IFn$_invoke$arity$variadic = G__5636__delegate;
        return G__5636;
      }();
      G__5635 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5635__0.call(this);
          case 1:
            return G__5635__1.call(this, x);
          case 2:
            return G__5635__2.call(this, x, y);
          case 3:
            return G__5635__3.call(this, x, y, z);
          default:
            return G__5635__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5635.cljs$lang$maxFixedArity = 3;
      G__5635.cljs$lang$applyTo = G__5635__4.cljs$lang$applyTo;
      G__5635.cljs$core$IFn$_invoke$arity$0 = G__5635__0;
      G__5635.cljs$core$IFn$_invoke$arity$1 = G__5635__1;
      G__5635.cljs$core$IFn$_invoke$arity$2 = G__5635__2;
      G__5635.cljs$core$IFn$_invoke$arity$3 = G__5635__3;
      G__5635.cljs$core$IFn$_invoke$arity$variadic = G__5635__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5635;
    }();
  };
  var comp__4 = function() {
    var G__5638__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__5639__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__5640 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__5641 = cljs.core.next.call(null, fs__$2);
                ret = G__5640;
                fs__$2 = G__5641;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__5639 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__5639__delegate.call(this, args);
          };
          G__5639.cljs$lang$maxFixedArity = 0;
          G__5639.cljs$lang$applyTo = function(arglist__5642) {
            var args = cljs.core.seq(arglist__5642);
            return G__5639__delegate(args);
          };
          G__5639.cljs$core$IFn$_invoke$arity$variadic = G__5639__delegate;
          return G__5639;
        }();
      }(fs__$1);
    };
    var G__5638 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5638__delegate.call(this, f1, f2, f3, fs);
    };
    G__5638.cljs$lang$maxFixedArity = 3;
    G__5638.cljs$lang$applyTo = function(arglist__5643) {
      var f1 = cljs.core.first(arglist__5643);
      arglist__5643 = cljs.core.next(arglist__5643);
      var f2 = cljs.core.first(arglist__5643);
      arglist__5643 = cljs.core.next(arglist__5643);
      var f3 = cljs.core.first(arglist__5643);
      var fs = cljs.core.rest(arglist__5643);
      return G__5638__delegate(f1, f2, f3, fs);
    };
    G__5638.cljs$core$IFn$_invoke$arity$variadic = G__5638__delegate;
    return G__5638;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__5644__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__5644 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__5644__delegate.call(this, args);
      };
      G__5644.cljs$lang$maxFixedArity = 0;
      G__5644.cljs$lang$applyTo = function(arglist__5645) {
        var args = cljs.core.seq(arglist__5645);
        return G__5644__delegate(args);
      };
      G__5644.cljs$core$IFn$_invoke$arity$variadic = G__5644__delegate;
      return G__5644;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__5646__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__5646 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__5646__delegate.call(this, args);
      };
      G__5646.cljs$lang$maxFixedArity = 0;
      G__5646.cljs$lang$applyTo = function(arglist__5647) {
        var args = cljs.core.seq(arglist__5647);
        return G__5646__delegate(args);
      };
      G__5646.cljs$core$IFn$_invoke$arity$variadic = G__5646__delegate;
      return G__5646;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__5648__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__5648 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__5648__delegate.call(this, args);
      };
      G__5648.cljs$lang$maxFixedArity = 0;
      G__5648.cljs$lang$applyTo = function(arglist__5649) {
        var args = cljs.core.seq(arglist__5649);
        return G__5648__delegate(args);
      };
      G__5648.cljs$core$IFn$_invoke$arity$variadic = G__5648__delegate;
      return G__5648;
    }();
  };
  var partial__5 = function() {
    var G__5650__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__5651__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__5651 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__5651__delegate.call(this, args);
        };
        G__5651.cljs$lang$maxFixedArity = 0;
        G__5651.cljs$lang$applyTo = function(arglist__5652) {
          var args = cljs.core.seq(arglist__5652);
          return G__5651__delegate(args);
        };
        G__5651.cljs$core$IFn$_invoke$arity$variadic = G__5651__delegate;
        return G__5651;
      }();
    };
    var G__5650 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5650__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__5650.cljs$lang$maxFixedArity = 4;
    G__5650.cljs$lang$applyTo = function(arglist__5653) {
      var f = cljs.core.first(arglist__5653);
      arglist__5653 = cljs.core.next(arglist__5653);
      var arg1 = cljs.core.first(arglist__5653);
      arglist__5653 = cljs.core.next(arglist__5653);
      var arg2 = cljs.core.first(arglist__5653);
      arglist__5653 = cljs.core.next(arglist__5653);
      var arg3 = cljs.core.first(arglist__5653);
      var more = cljs.core.rest(arglist__5653);
      return G__5650__delegate(f, arg1, arg2, arg3, more);
    };
    G__5650.cljs$core$IFn$_invoke$arity$variadic = G__5650__delegate;
    return G__5650;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__5654 = null;
      var G__5654__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__5654__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__5654__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__5654__4 = function() {
        var G__5655__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__5655 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5655__delegate.call(this, a, b, c, ds);
        };
        G__5655.cljs$lang$maxFixedArity = 3;
        G__5655.cljs$lang$applyTo = function(arglist__5656) {
          var a = cljs.core.first(arglist__5656);
          arglist__5656 = cljs.core.next(arglist__5656);
          var b = cljs.core.first(arglist__5656);
          arglist__5656 = cljs.core.next(arglist__5656);
          var c = cljs.core.first(arglist__5656);
          var ds = cljs.core.rest(arglist__5656);
          return G__5655__delegate(a, b, c, ds);
        };
        G__5655.cljs$core$IFn$_invoke$arity$variadic = G__5655__delegate;
        return G__5655;
      }();
      G__5654 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__5654__1.call(this, a);
          case 2:
            return G__5654__2.call(this, a, b);
          case 3:
            return G__5654__3.call(this, a, b, c);
          default:
            return G__5654__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5654.cljs$lang$maxFixedArity = 3;
      G__5654.cljs$lang$applyTo = G__5654__4.cljs$lang$applyTo;
      G__5654.cljs$core$IFn$_invoke$arity$1 = G__5654__1;
      G__5654.cljs$core$IFn$_invoke$arity$2 = G__5654__2;
      G__5654.cljs$core$IFn$_invoke$arity$3 = G__5654__3;
      G__5654.cljs$core$IFn$_invoke$arity$variadic = G__5654__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5654;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__5657 = null;
      var G__5657__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__5657__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__5657__4 = function() {
        var G__5658__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__5658 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5658__delegate.call(this, a, b, c, ds);
        };
        G__5658.cljs$lang$maxFixedArity = 3;
        G__5658.cljs$lang$applyTo = function(arglist__5659) {
          var a = cljs.core.first(arglist__5659);
          arglist__5659 = cljs.core.next(arglist__5659);
          var b = cljs.core.first(arglist__5659);
          arglist__5659 = cljs.core.next(arglist__5659);
          var c = cljs.core.first(arglist__5659);
          var ds = cljs.core.rest(arglist__5659);
          return G__5658__delegate(a, b, c, ds);
        };
        G__5658.cljs$core$IFn$_invoke$arity$variadic = G__5658__delegate;
        return G__5658;
      }();
      G__5657 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5657__2.call(this, a, b);
          case 3:
            return G__5657__3.call(this, a, b, c);
          default:
            return G__5657__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5657.cljs$lang$maxFixedArity = 3;
      G__5657.cljs$lang$applyTo = G__5657__4.cljs$lang$applyTo;
      G__5657.cljs$core$IFn$_invoke$arity$2 = G__5657__2;
      G__5657.cljs$core$IFn$_invoke$arity$3 = G__5657__3;
      G__5657.cljs$core$IFn$_invoke$arity$variadic = G__5657__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5657;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__5660 = null;
      var G__5660__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__5660__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__5660__4 = function() {
        var G__5661__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__5661 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5661__delegate.call(this, a, b, c, ds);
        };
        G__5661.cljs$lang$maxFixedArity = 3;
        G__5661.cljs$lang$applyTo = function(arglist__5662) {
          var a = cljs.core.first(arglist__5662);
          arglist__5662 = cljs.core.next(arglist__5662);
          var b = cljs.core.first(arglist__5662);
          arglist__5662 = cljs.core.next(arglist__5662);
          var c = cljs.core.first(arglist__5662);
          var ds = cljs.core.rest(arglist__5662);
          return G__5661__delegate(a, b, c, ds);
        };
        G__5661.cljs$core$IFn$_invoke$arity$variadic = G__5661__delegate;
        return G__5661;
      }();
      G__5660 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5660__2.call(this, a, b);
          case 3:
            return G__5660__3.call(this, a, b, c);
          default:
            return G__5660__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__5660.cljs$lang$maxFixedArity = 3;
      G__5660.cljs$lang$applyTo = G__5660__4.cljs$lang$applyTo;
      G__5660.cljs$core$IFn$_invoke$arity$2 = G__5660__2;
      G__5660.cljs$core$IFn$_invoke$arity$3 = G__5660__3;
      G__5660.cljs$core$IFn$_invoke$arity$variadic = G__5660__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__5660;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4510__auto___5663 = size;
          var i_5664 = 0;
          while (true) {
            if (i_5664 < n__4510__auto___5663) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_5664, cljs.core._nth.call(null, c, i_5664)));
              var G__5665 = i_5664 + 1;
              i_5664 = G__5665;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__5666 = null;
        var G__5666__0 = function() {
          return rf.call(null);
        };
        var G__5666__1 = function(result) {
          return rf.call(null, result);
        };
        var G__5666__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return rf.call(null, result, v);
          }
        };
        G__5666 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__5666__0.call(this);
            case 1:
              return G__5666__1.call(this, result);
            case 2:
              return G__5666__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__5666.cljs$core$IFn$_invoke$arity$0 = G__5666__0;
        G__5666.cljs$core$IFn$_invoke$arity$1 = G__5666__1;
        G__5666.cljs$core$IFn$_invoke$arity$2 = G__5666__2;
        return G__5666;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4510__auto___5667 = size;
          var i_5668 = 0;
          while (true) {
            if (i_5668 < n__4510__auto___5667) {
              var x_5669 = f.call(null, cljs.core._nth.call(null, c, i_5668));
              if (x_5669 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_5669);
              }
              var G__5670 = i_5668 + 1;
              i_5668 = G__5670;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__5671 = cljs.core.seq.call(null, self__.watches);
  var chunk__5672 = null;
  var count__5673 = 0;
  var i__5674 = 0;
  while (true) {
    if (i__5674 < count__5673) {
      var vec__5675 = cljs.core._nth.call(null, chunk__5672, i__5674);
      var key = cljs.core.nth.call(null, vec__5675, 0, null);
      var f = cljs.core.nth.call(null, vec__5675, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__5677 = seq__5671;
      var G__5678 = chunk__5672;
      var G__5679 = count__5673;
      var G__5680 = i__5674 + 1;
      seq__5671 = G__5677;
      chunk__5672 = G__5678;
      count__5673 = G__5679;
      i__5674 = G__5680;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__5671);
      if (temp__4126__auto__) {
        var seq__5671__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5671__$1)) {
          var c__4410__auto__ = cljs.core.chunk_first.call(null, seq__5671__$1);
          var G__5681 = cljs.core.chunk_rest.call(null, seq__5671__$1);
          var G__5682 = c__4410__auto__;
          var G__5683 = cljs.core.count.call(null, c__4410__auto__);
          var G__5684 = 0;
          seq__5671 = G__5681;
          chunk__5672 = G__5682;
          count__5673 = G__5683;
          i__5674 = G__5684;
          continue;
        } else {
          var vec__5676 = cljs.core.first.call(null, seq__5671__$1);
          var key = cljs.core.nth.call(null, vec__5676, 0, null);
          var f = cljs.core.nth.call(null, vec__5676, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__5685 = cljs.core.next.call(null, seq__5671__$1);
          var G__5686 = null;
          var G__5687 = 0;
          var G__5688 = 0;
          seq__5671 = G__5685;
          chunk__5672 = G__5686;
          count__5673 = G__5687;
          i__5674 = G__5688;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__5692__delegate = function(x, p__5689) {
      var map__5691 = p__5689;
      var map__5691__$1 = cljs.core.seq_QMARK_.call(null, map__5691) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5691) : map__5691;
      var validator = cljs.core.get.call(null, map__5691__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__5691__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__5692 = function(x, var_args) {
      var p__5689 = null;
      if (arguments.length > 1) {
        p__5689 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__5692__delegate.call(this, x, p__5689);
    };
    G__5692.cljs$lang$maxFixedArity = 1;
    G__5692.cljs$lang$applyTo = function(arglist__5693) {
      var x = cljs.core.first(arglist__5693);
      var p__5689 = cljs.core.rest(arglist__5693);
      return G__5692__delegate(x, p__5689);
    };
    G__5692.cljs$core$IFn$_invoke$arity$variadic = G__5692__delegate;
    return G__5692;
  }();
  atom = function(x, var_args) {
    var p__5689 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__5694__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__5694 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5694__delegate.call(this, a, f, x, y, more);
    };
    G__5694.cljs$lang$maxFixedArity = 4;
    G__5694.cljs$lang$applyTo = function(arglist__5695) {
      var a = cljs.core.first(arglist__5695);
      arglist__5695 = cljs.core.next(arglist__5695);
      var f = cljs.core.first(arglist__5695);
      arglist__5695 = cljs.core.next(arglist__5695);
      var x = cljs.core.first(arglist__5695);
      arglist__5695 = cljs.core.next(arglist__5695);
      var y = cljs.core.first(arglist__5695);
      var more = cljs.core.rest(arglist__5695);
      return G__5694__delegate(a, f, x, y, more);
    };
    G__5694.cljs$core$IFn$_invoke$arity$variadic = G__5694__delegate;
    return G__5694;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__5696 = null;
          var G__5696__0 = function() {
            return rf.call(null);
          };
          var G__5696__1 = function(result) {
            return rf.call(null, result);
          };
          var G__5696__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return rf.call(null, result, v);
            }
          };
          G__5696 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__5696__0.call(this);
              case 1:
                return G__5696__1.call(this, result);
              case 2:
                return G__5696__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__5696.cljs$core$IFn$_invoke$arity$0 = G__5696__0;
          G__5696.cljs$core$IFn$_invoke$arity$1 = G__5696__1;
          G__5696.cljs$core$IFn$_invoke$arity$2 = G__5696__2;
          return G__5696;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4510__auto___5697 = size;
            var i_5698 = 0;
            while (true) {
              if (i_5698 < n__4510__auto___5697) {
                var x_5699 = f.call(null, idx + i_5698, cljs.core._nth.call(null, c, i_5698));
                if (x_5699 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_5699);
                }
                var G__5700 = i_5698 + 1;
                i_5698 = G__5700;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3628__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3628__auto__)) {
            return p.call(null, y);
          } else {
            return and__3628__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3628__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3628__auto__)) {
            var and__3628__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3628__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3628__auto____$1;
            }
          } else {
            return and__3628__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__5707__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__5707 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5707__delegate.call(this, x, y, z, args);
        };
        G__5707.cljs$lang$maxFixedArity = 3;
        G__5707.cljs$lang$applyTo = function(arglist__5708) {
          var x = cljs.core.first(arglist__5708);
          arglist__5708 = cljs.core.next(arglist__5708);
          var y = cljs.core.first(arglist__5708);
          arglist__5708 = cljs.core.next(arglist__5708);
          var z = cljs.core.first(arglist__5708);
          var args = cljs.core.rest(arglist__5708);
          return G__5707__delegate(x, y, z, args);
        };
        G__5707.cljs$core$IFn$_invoke$arity$variadic = G__5707__delegate;
        return G__5707;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3628__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3628__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3628__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3628__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3628__auto__)) {
            var and__3628__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3628__auto____$1)) {
              var and__3628__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3628__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3628__auto____$2;
              }
            } else {
              return and__3628__auto____$1;
            }
          } else {
            return and__3628__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3628__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3628__auto__)) {
            var and__3628__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3628__auto____$1)) {
              var and__3628__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3628__auto____$2)) {
                var and__3628__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3628__auto____$3)) {
                  var and__3628__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3628__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3628__auto____$4;
                  }
                } else {
                  return and__3628__auto____$3;
                }
              } else {
                return and__3628__auto____$2;
              }
            } else {
              return and__3628__auto____$1;
            }
          } else {
            return and__3628__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__5709__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__5701_SHARP_) {
            var and__3628__auto__ = p1.call(null, p1__5701_SHARP_);
            if (cljs.core.truth_(and__3628__auto__)) {
              return p2.call(null, p1__5701_SHARP_);
            } else {
              return and__3628__auto__;
            }
          }, args));
        };
        var G__5709 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5709__delegate.call(this, x, y, z, args);
        };
        G__5709.cljs$lang$maxFixedArity = 3;
        G__5709.cljs$lang$applyTo = function(arglist__5710) {
          var x = cljs.core.first(arglist__5710);
          arglist__5710 = cljs.core.next(arglist__5710);
          var y = cljs.core.first(arglist__5710);
          arglist__5710 = cljs.core.next(arglist__5710);
          var z = cljs.core.first(arglist__5710);
          var args = cljs.core.rest(arglist__5710);
          return G__5709__delegate(x, y, z, args);
        };
        G__5709.cljs$core$IFn$_invoke$arity$variadic = G__5709__delegate;
        return G__5709;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3628__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3628__auto__)) {
            var and__3628__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3628__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3628__auto____$1;
            }
          } else {
            return and__3628__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3628__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3628__auto__)) {
            var and__3628__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3628__auto____$1)) {
              var and__3628__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3628__auto____$2)) {
                var and__3628__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3628__auto____$3)) {
                  var and__3628__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3628__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3628__auto____$4;
                  }
                } else {
                  return and__3628__auto____$3;
                }
              } else {
                return and__3628__auto____$2;
              }
            } else {
              return and__3628__auto____$1;
            }
          } else {
            return and__3628__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3628__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3628__auto__)) {
            var and__3628__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3628__auto____$1)) {
              var and__3628__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3628__auto____$2)) {
                var and__3628__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3628__auto____$3)) {
                  var and__3628__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3628__auto____$4)) {
                    var and__3628__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3628__auto____$5)) {
                      var and__3628__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3628__auto____$6)) {
                        var and__3628__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3628__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3628__auto____$7;
                        }
                      } else {
                        return and__3628__auto____$6;
                      }
                    } else {
                      return and__3628__auto____$5;
                    }
                  } else {
                    return and__3628__auto____$4;
                  }
                } else {
                  return and__3628__auto____$3;
                }
              } else {
                return and__3628__auto____$2;
              }
            } else {
              return and__3628__auto____$1;
            }
          } else {
            return and__3628__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__5711__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__5702_SHARP_) {
            var and__3628__auto__ = p1.call(null, p1__5702_SHARP_);
            if (cljs.core.truth_(and__3628__auto__)) {
              var and__3628__auto____$1 = p2.call(null, p1__5702_SHARP_);
              if (cljs.core.truth_(and__3628__auto____$1)) {
                return p3.call(null, p1__5702_SHARP_);
              } else {
                return and__3628__auto____$1;
              }
            } else {
              return and__3628__auto__;
            }
          }, args));
        };
        var G__5711 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5711__delegate.call(this, x, y, z, args);
        };
        G__5711.cljs$lang$maxFixedArity = 3;
        G__5711.cljs$lang$applyTo = function(arglist__5712) {
          var x = cljs.core.first(arglist__5712);
          arglist__5712 = cljs.core.next(arglist__5712);
          var y = cljs.core.first(arglist__5712);
          arglist__5712 = cljs.core.next(arglist__5712);
          var z = cljs.core.first(arglist__5712);
          var args = cljs.core.rest(arglist__5712);
          return G__5711__delegate(x, y, z, args);
        };
        G__5711.cljs$core$IFn$_invoke$arity$variadic = G__5711__delegate;
        return G__5711;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__5713__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__5703_SHARP_) {
                return p1__5703_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__5704_SHARP_) {
                var and__3628__auto__ = p1__5704_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3628__auto__)) {
                  return p1__5704_SHARP_.call(null, y);
                } else {
                  return and__3628__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__5705_SHARP_) {
                var and__3628__auto__ = p1__5705_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3628__auto__)) {
                  var and__3628__auto____$1 = p1__5705_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3628__auto____$1)) {
                    return p1__5705_SHARP_.call(null, z);
                  } else {
                    return and__3628__auto____$1;
                  }
                } else {
                  return and__3628__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__5714__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__5706_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__5706_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__5714 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__5714__delegate.call(this, x, y, z, args);
            };
            G__5714.cljs$lang$maxFixedArity = 3;
            G__5714.cljs$lang$applyTo = function(arglist__5715) {
              var x = cljs.core.first(arglist__5715);
              arglist__5715 = cljs.core.next(arglist__5715);
              var y = cljs.core.first(arglist__5715);
              arglist__5715 = cljs.core.next(arglist__5715);
              var z = cljs.core.first(arglist__5715);
              var args = cljs.core.rest(arglist__5715);
              return G__5714__delegate(x, y, z, args);
            };
            G__5714.cljs$core$IFn$_invoke$arity$variadic = G__5714__delegate;
            return G__5714;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__5713 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5713__delegate.call(this, p1, p2, p3, ps);
    };
    G__5713.cljs$lang$maxFixedArity = 3;
    G__5713.cljs$lang$applyTo = function(arglist__5716) {
      var p1 = cljs.core.first(arglist__5716);
      arglist__5716 = cljs.core.next(arglist__5716);
      var p2 = cljs.core.first(arglist__5716);
      arglist__5716 = cljs.core.next(arglist__5716);
      var p3 = cljs.core.first(arglist__5716);
      var ps = cljs.core.rest(arglist__5716);
      return G__5713__delegate(p1, p2, p3, ps);
    };
    G__5713.cljs$core$IFn$_invoke$arity$variadic = G__5713__delegate;
    return G__5713;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3640__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3640__auto__)) {
          return or__3640__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3640__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3640__auto__)) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3640__auto____$1)) {
            return or__3640__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__5723__delegate = function(x, y, z, args) {
          var or__3640__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3640__auto__)) {
            return or__3640__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__5723 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5723__delegate.call(this, x, y, z, args);
        };
        G__5723.cljs$lang$maxFixedArity = 3;
        G__5723.cljs$lang$applyTo = function(arglist__5724) {
          var x = cljs.core.first(arglist__5724);
          arglist__5724 = cljs.core.next(arglist__5724);
          var y = cljs.core.first(arglist__5724);
          arglist__5724 = cljs.core.next(arglist__5724);
          var z = cljs.core.first(arglist__5724);
          var args = cljs.core.rest(arglist__5724);
          return G__5723__delegate(x, y, z, args);
        };
        G__5723.cljs$core$IFn$_invoke$arity$variadic = G__5723__delegate;
        return G__5723;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3640__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3640__auto__)) {
          return or__3640__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3640__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3640__auto__)) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3640__auto____$1)) {
            return or__3640__auto____$1;
          } else {
            var or__3640__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3640__auto____$2)) {
              return or__3640__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3640__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3640__auto__)) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3640__auto____$1)) {
            return or__3640__auto____$1;
          } else {
            var or__3640__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3640__auto____$2)) {
              return or__3640__auto____$2;
            } else {
              var or__3640__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3640__auto____$3)) {
                return or__3640__auto____$3;
              } else {
                var or__3640__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3640__auto____$4)) {
                  return or__3640__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__5725__delegate = function(x, y, z, args) {
          var or__3640__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3640__auto__)) {
            return or__3640__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3640__auto__) {
              return function(p1__5717_SHARP_) {
                var or__3640__auto____$1 = p1.call(null, p1__5717_SHARP_);
                if (cljs.core.truth_(or__3640__auto____$1)) {
                  return or__3640__auto____$1;
                } else {
                  return p2.call(null, p1__5717_SHARP_);
                }
              };
            }(or__3640__auto__), args);
          }
        };
        var G__5725 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5725__delegate.call(this, x, y, z, args);
        };
        G__5725.cljs$lang$maxFixedArity = 3;
        G__5725.cljs$lang$applyTo = function(arglist__5726) {
          var x = cljs.core.first(arglist__5726);
          arglist__5726 = cljs.core.next(arglist__5726);
          var y = cljs.core.first(arglist__5726);
          arglist__5726 = cljs.core.next(arglist__5726);
          var z = cljs.core.first(arglist__5726);
          var args = cljs.core.rest(arglist__5726);
          return G__5725__delegate(x, y, z, args);
        };
        G__5725.cljs$core$IFn$_invoke$arity$variadic = G__5725__delegate;
        return G__5725;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3640__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3640__auto__)) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3640__auto____$1)) {
            return or__3640__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3640__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3640__auto__)) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3640__auto____$1)) {
            return or__3640__auto____$1;
          } else {
            var or__3640__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3640__auto____$2)) {
              return or__3640__auto____$2;
            } else {
              var or__3640__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3640__auto____$3)) {
                return or__3640__auto____$3;
              } else {
                var or__3640__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3640__auto____$4)) {
                  return or__3640__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3640__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3640__auto__)) {
          return or__3640__auto__;
        } else {
          var or__3640__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3640__auto____$1)) {
            return or__3640__auto____$1;
          } else {
            var or__3640__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3640__auto____$2)) {
              return or__3640__auto____$2;
            } else {
              var or__3640__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3640__auto____$3)) {
                return or__3640__auto____$3;
              } else {
                var or__3640__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3640__auto____$4)) {
                  return or__3640__auto____$4;
                } else {
                  var or__3640__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3640__auto____$5)) {
                    return or__3640__auto____$5;
                  } else {
                    var or__3640__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3640__auto____$6)) {
                      return or__3640__auto____$6;
                    } else {
                      var or__3640__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3640__auto____$7)) {
                        return or__3640__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__5727__delegate = function(x, y, z, args) {
          var or__3640__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3640__auto__)) {
            return or__3640__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3640__auto__) {
              return function(p1__5718_SHARP_) {
                var or__3640__auto____$1 = p1.call(null, p1__5718_SHARP_);
                if (cljs.core.truth_(or__3640__auto____$1)) {
                  return or__3640__auto____$1;
                } else {
                  var or__3640__auto____$2 = p2.call(null, p1__5718_SHARP_);
                  if (cljs.core.truth_(or__3640__auto____$2)) {
                    return or__3640__auto____$2;
                  } else {
                    return p3.call(null, p1__5718_SHARP_);
                  }
                }
              };
            }(or__3640__auto__), args);
          }
        };
        var G__5727 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__5727__delegate.call(this, x, y, z, args);
        };
        G__5727.cljs$lang$maxFixedArity = 3;
        G__5727.cljs$lang$applyTo = function(arglist__5728) {
          var x = cljs.core.first(arglist__5728);
          arglist__5728 = cljs.core.next(arglist__5728);
          var y = cljs.core.first(arglist__5728);
          arglist__5728 = cljs.core.next(arglist__5728);
          var z = cljs.core.first(arglist__5728);
          var args = cljs.core.rest(arglist__5728);
          return G__5727__delegate(x, y, z, args);
        };
        G__5727.cljs$core$IFn$_invoke$arity$variadic = G__5727__delegate;
        return G__5727;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__5729__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__5719_SHARP_) {
                return p1__5719_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__5720_SHARP_) {
                var or__3640__auto__ = p1__5720_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3640__auto__)) {
                  return or__3640__auto__;
                } else {
                  return p1__5720_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__5721_SHARP_) {
                var or__3640__auto__ = p1__5721_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3640__auto__)) {
                  return or__3640__auto__;
                } else {
                  var or__3640__auto____$1 = p1__5721_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3640__auto____$1)) {
                    return or__3640__auto____$1;
                  } else {
                    return p1__5721_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__5730__delegate = function(x, y, z, args) {
              var or__3640__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3640__auto__)) {
                return or__3640__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3640__auto__, ps__$1) {
                  return function(p1__5722_SHARP_) {
                    return cljs.core.some.call(null, p1__5722_SHARP_, args);
                  };
                }(or__3640__auto__, ps__$1), ps__$1);
              }
            };
            var G__5730 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__5730__delegate.call(this, x, y, z, args);
            };
            G__5730.cljs$lang$maxFixedArity = 3;
            G__5730.cljs$lang$applyTo = function(arglist__5731) {
              var x = cljs.core.first(arglist__5731);
              arglist__5731 = cljs.core.next(arglist__5731);
              var y = cljs.core.first(arglist__5731);
              arglist__5731 = cljs.core.next(arglist__5731);
              var z = cljs.core.first(arglist__5731);
              var args = cljs.core.rest(arglist__5731);
              return G__5730__delegate(x, y, z, args);
            };
            G__5730.cljs$core$IFn$_invoke$arity$variadic = G__5730__delegate;
            return G__5730;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__5729 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__5729__delegate.call(this, p1, p2, p3, ps);
    };
    G__5729.cljs$lang$maxFixedArity = 3;
    G__5729.cljs$lang$applyTo = function(arglist__5732) {
      var p1 = cljs.core.first(arglist__5732);
      arglist__5732 = cljs.core.next(arglist__5732);
      var p2 = cljs.core.first(arglist__5732);
      arglist__5732 = cljs.core.next(arglist__5732);
      var p3 = cljs.core.first(arglist__5732);
      var ps = cljs.core.rest(arglist__5732);
      return G__5729__delegate(p1, p2, p3, ps);
    };
    G__5729.cljs$core$IFn$_invoke$arity$variadic = G__5729__delegate;
    return G__5729;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__5734 = null;
        var G__5734__0 = function() {
          return rf.call(null);
        };
        var G__5734__1 = function(result) {
          return rf.call(null, result);
        };
        var G__5734__2 = function(result, input) {
          return rf.call(null, result, f.call(null, input));
        };
        var G__5734__3 = function() {
          var G__5735__delegate = function(result, input, inputs) {
            return rf.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__5735 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__5735__delegate.call(this, result, input, inputs);
          };
          G__5735.cljs$lang$maxFixedArity = 2;
          G__5735.cljs$lang$applyTo = function(arglist__5736) {
            var result = cljs.core.first(arglist__5736);
            arglist__5736 = cljs.core.next(arglist__5736);
            var input = cljs.core.first(arglist__5736);
            var inputs = cljs.core.rest(arglist__5736);
            return G__5735__delegate(result, input, inputs);
          };
          G__5735.cljs$core$IFn$_invoke$arity$variadic = G__5735__delegate;
          return G__5735;
        }();
        G__5734 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__5734__0.call(this);
            case 1:
              return G__5734__1.call(this, result);
            case 2:
              return G__5734__2.call(this, result, input);
            default:
              return G__5734__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__5734.cljs$lang$maxFixedArity = 2;
        G__5734.cljs$lang$applyTo = G__5734__3.cljs$lang$applyTo;
        G__5734.cljs$core$IFn$_invoke$arity$0 = G__5734__0;
        G__5734.cljs$core$IFn$_invoke$arity$1 = G__5734__1;
        G__5734.cljs$core$IFn$_invoke$arity$2 = G__5734__2;
        G__5734.cljs$core$IFn$_invoke$arity$variadic = G__5734__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__5734;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4510__auto___5737 = size;
          var i_5738 = 0;
          while (true) {
            if (i_5738 < n__4510__auto___5737) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_5738)));
              var G__5739 = i_5738 + 1;
              i_5738 = G__5739;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__5740__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__5733_SHARP_) {
          return cljs.core.apply.call(null, f, p1__5733_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__5740 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5740__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__5740.cljs$lang$maxFixedArity = 4;
    G__5740.cljs$lang$applyTo = function(arglist__5741) {
      var f = cljs.core.first(arglist__5741);
      arglist__5741 = cljs.core.next(arglist__5741);
      var c1 = cljs.core.first(arglist__5741);
      arglist__5741 = cljs.core.next(arglist__5741);
      var c2 = cljs.core.first(arglist__5741);
      arglist__5741 = cljs.core.next(arglist__5741);
      var c3 = cljs.core.first(arglist__5741);
      var colls = cljs.core.rest(arglist__5741);
      return G__5740__delegate(f, c1, c2, c3, colls);
    };
    G__5740.cljs$core$IFn$_invoke$arity$variadic = G__5740__delegate;
    return G__5740;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__5742 = null;
          var G__5742__0 = function() {
            return rf.call(null);
          };
          var G__5742__1 = function(result) {
            return rf.call(null, result);
          };
          var G__5742__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? rf.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__5742 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__5742__0.call(this);
              case 1:
                return G__5742__1.call(this, result);
              case 2:
                return G__5742__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__5742.cljs$core$IFn$_invoke$arity$0 = G__5742__0;
          G__5742.cljs$core$IFn$_invoke$arity$1 = G__5742__1;
          G__5742.cljs$core$IFn$_invoke$arity$2 = G__5742__2;
          return G__5742;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__5743 = null;
          var G__5743__0 = function() {
            return rf.call(null);
          };
          var G__5743__1 = function(result) {
            return rf.call(null, result);
          };
          var G__5743__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__5743 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__5743__0.call(this);
              case 1:
                return G__5743__1.call(this, result);
              case 2:
                return G__5743__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__5743.cljs$core$IFn$_invoke$arity$0 = G__5743__0;
          G__5743.cljs$core$IFn$_invoke$arity$1 = G__5743__1;
          G__5743.cljs$core$IFn$_invoke$arity$2 = G__5743__2;
          return G__5743;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__5744 = n__$1 - 1;
          var G__5745 = cljs.core.rest.call(null, s);
          n__$1 = G__5744;
          coll__$1 = G__5745;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__5746 = cljs.core.next.call(null, s);
      var G__5747 = cljs.core.next.call(null, lead);
      s = G__5746;
      lead = G__5747;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__5748 = null;
          var G__5748__0 = function() {
            return rf.call(null);
          };
          var G__5748__1 = function(result) {
            return rf.call(null, result);
          };
          var G__5748__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3628__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3628__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3628__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return rf.call(null, result, input);
            }
          };
          G__5748 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__5748__0.call(this);
              case 1:
                return G__5748__1.call(this, result);
              case 2:
                return G__5748__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__5748.cljs$core$IFn$_invoke$arity$0 = G__5748__0;
          G__5748.cljs$core$IFn$_invoke$arity$1 = G__5748__1;
          G__5748.cljs$core$IFn$_invoke$arity$2 = G__5748__2;
          return G__5748;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3628__auto__ = s;
          if (and__3628__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3628__auto__;
          }
        }())) {
          var G__5749 = pred__$1;
          var G__5750 = cljs.core.rest.call(null, s);
          pred__$1 = G__5749;
          coll__$1 = G__5750;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__5751__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__5751 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__5751__delegate.call(this, c1, c2, colls);
    };
    G__5751.cljs$lang$maxFixedArity = 2;
    G__5751.cljs$lang$applyTo = function(arglist__5752) {
      var c1 = cljs.core.first(arglist__5752);
      arglist__5752 = cljs.core.next(arglist__5752);
      var c2 = cljs.core.first(arglist__5752);
      var colls = cljs.core.rest(arglist__5752);
      return G__5751__delegate(c1, c2, colls);
    };
    G__5751.cljs$core$IFn$_invoke$arity$variadic = G__5751__delegate;
    return G__5751;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__5753__delegate = function(f, colls) {
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.apply.call(null, cljs.core.map, f, colls));
    };
    var G__5753 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__5753__delegate.call(this, f, colls);
    };
    G__5753.cljs$lang$maxFixedArity = 1;
    G__5753.cljs$lang$applyTo = function(arglist__5754) {
      var f = cljs.core.first(arglist__5754);
      var colls = cljs.core.rest(arglist__5754);
      return G__5753__delegate(f, colls);
    };
    G__5753.cljs$core$IFn$_invoke$arity$variadic = G__5753__delegate;
    return G__5753;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__5755 = null;
        var G__5755__0 = function() {
          return rf.call(null);
        };
        var G__5755__1 = function(result) {
          return rf.call(null, result);
        };
        var G__5755__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__5755 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__5755__0.call(this);
            case 1:
              return G__5755__1.call(this, result);
            case 2:
              return G__5755__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__5755.cljs$core$IFn$_invoke$arity$0 = G__5755__0;
        G__5755.cljs$core$IFn$_invoke$arity$1 = G__5755__1;
        G__5755.cljs$core$IFn$_invoke$arity$2 = G__5755__2;
        return G__5755;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4510__auto___5756 = size;
          var i_5757 = 0;
          while (true) {
            if (i_5757 < n__4510__auto___5756) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_5757)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_5757));
              } else {
              }
              var G__5758 = i_5757 + 1;
              i_5757 = G__5758;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__5759_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__5759_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__5762 = to;
        if (G__5762) {
          var bit__4297__auto__ = G__5762.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4297__auto__ || G__5762.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__5763 = to;
      if (G__5763) {
        var bit__4297__auto__ = G__5763.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4297__auto__ || G__5763.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__5764__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__5764 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__5764__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__5764.cljs$lang$maxFixedArity = 4;
    G__5764.cljs$lang$applyTo = function(arglist__5765) {
      var f = cljs.core.first(arglist__5765);
      arglist__5765 = cljs.core.next(arglist__5765);
      var c1 = cljs.core.first(arglist__5765);
      arglist__5765 = cljs.core.next(arglist__5765);
      var c2 = cljs.core.first(arglist__5765);
      arglist__5765 = cljs.core.next(arglist__5765);
      var c3 = cljs.core.first(arglist__5765);
      var colls = cljs.core.rest(arglist__5765);
      return G__5764__delegate(f, c1, c2, c3, colls);
    };
    G__5764.cljs$core$IFn$_invoke$arity$variadic = G__5764__delegate;
    return G__5764;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__5767 = m__$1;
          if (G__5767) {
            var bit__4304__auto__ = G__5767.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4304__auto__ || G__5767.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__5767.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__5767);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__5767);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__5768 = sentinel;
            var G__5769 = m__$2;
            var G__5770 = cljs.core.next.call(null, ks__$1);
            sentinel = G__5768;
            m__$1 = G__5769;
            ks__$1 = G__5770;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__5771, v) {
  var vec__5773 = p__5771;
  var k = cljs.core.nth.call(null, vec__5773, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__5773, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__5774, f) {
    var vec__5784 = p__5774;
    var k = cljs.core.nth.call(null, vec__5784, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5784, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__5775, f, a) {
    var vec__5785 = p__5775;
    var k = cljs.core.nth.call(null, vec__5785, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5785, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__5776, f, a, b) {
    var vec__5786 = p__5776;
    var k = cljs.core.nth.call(null, vec__5786, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5786, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__5777, f, a, b, c) {
    var vec__5787 = p__5777;
    var k = cljs.core.nth.call(null, vec__5787, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__5787, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__5789__delegate = function(m, p__5778, f, a, b, c, args) {
      var vec__5788 = p__5778;
      var k = cljs.core.nth.call(null, vec__5788, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__5788, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__5789 = function(m, p__5778, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__5789__delegate.call(this, m, p__5778, f, a, b, c, args);
    };
    G__5789.cljs$lang$maxFixedArity = 6;
    G__5789.cljs$lang$applyTo = function(arglist__5790) {
      var m = cljs.core.first(arglist__5790);
      arglist__5790 = cljs.core.next(arglist__5790);
      var p__5778 = cljs.core.first(arglist__5790);
      arglist__5790 = cljs.core.next(arglist__5790);
      var f = cljs.core.first(arglist__5790);
      arglist__5790 = cljs.core.next(arglist__5790);
      var a = cljs.core.first(arglist__5790);
      arglist__5790 = cljs.core.next(arglist__5790);
      var b = cljs.core.first(arglist__5790);
      arglist__5790 = cljs.core.next(arglist__5790);
      var c = cljs.core.first(arglist__5790);
      var args = cljs.core.rest(arglist__5790);
      return G__5789__delegate(m, p__5778, f, a, b, c, args);
    };
    G__5789.cljs$core$IFn$_invoke$arity$variadic = G__5789__delegate;
    return G__5789;
  }();
  update_in = function(m, p__5778, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__5778, f);
      case 4:
        return update_in__4.call(this, m, p__5778, f, a);
      case 5:
        return update_in__5.call(this, m, p__5778, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__5778, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__5778, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4220__auto__, writer__4221__auto__, opts__4222__auto__) {
  return cljs.core._write.call(null, writer__4221__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__5791 = ll - 5;
      var G__5792 = r;
      ll = G__5791;
      ret = G__5792;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__5793 = cljs.core.pv_aget.call(null, node, 0);
      var G__5794 = level - 5;
      node = G__5793;
      level = G__5794;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__5795 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__5796 = level - 5;
        node = G__5795;
        level = G__5796;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/RangedIterator");
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for.call(null, self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count.call(null, v) ? cljs.core.unchecked_array_for.call(null, v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__5798 = j + 1;
              var G__5799 = init__$3;
              j = G__5798;
              init__$2 = G__5799;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5800 = i + len;
        var G__5801 = init__$2;
        i = G__5800;
        init__$1 = G__5801;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator.call(null, this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count.call(null, other)) {
      var me_iter = cljs.core._iterator.call(null, coll__$1);
      var you_iter = cljs.core._iterator.call(null, other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.call(null, x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential.call(null, coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__5802 = j + 1;
              var G__5803 = init__$3;
              j = G__5802;
              init__$2 = G__5803;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5804 = i + len;
        var G__5805 = init__$2;
        i = G__5804;
        init__$1 = G__5805;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4510__auto___5806 = len;
    var i_5807 = 0;
    while (true) {
      if (i_5807 < n__4510__auto___5806) {
        new_tail[i_5807] = self__.tail[i_5807];
        var G__5808 = i_5807 + 1;
        i_5807 = G__5808;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__5809 = null;
  var G__5809__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__5809__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__5809 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5809__2.call(this, self__, k);
      case 3:
        return G__5809__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5809.cljs$core$IFn$_invoke$arity$2 = G__5809__2;
  G__5809.cljs$core$IFn$_invoke$arity$3 = G__5809__3;
  return G__5809;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args5797) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5797)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__5810 = i + 1;
        var G__5811 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__5810;
        out = G__5811;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__5812) {
    var args = cljs.core.seq(arglist__5812);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3947__auto__ = self__.end;
    var y__3948__auto__ = v_pos + 1;
    return x__3947__auto__ > y__3948__auto__ ? x__3947__auto__ : y__3948__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__5814 = null;
  var G__5814__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__5814__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__5814 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5814__2.call(this, self__, k);
      case 3:
        return G__5814__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5814.cljs$core$IFn$_invoke$arity$2 = G__5814__2;
  G__5814.cljs$core$IFn$_invoke$arity$3 = G__5814__3;
  return G__5814;
}();
cljs.core.Subvec.prototype.apply = function(self__, args5813) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5813)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__5815 = meta;
      var G__5816 = v.v;
      var G__5817 = v.start + start;
      var G__5818 = v.start + end;
      var G__5819 = __hash;
      meta = G__5815;
      v = G__5816;
      start = G__5817;
      end = G__5818;
      __hash = G__5819;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj5823 = {};
    return obj5823;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__5824 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__5825 = level - 5;
        node = G__5824;
        level = G__5825;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__5827 = null;
  var G__5827__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5827__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5827 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5827__2.call(this, self__, k);
      case 3:
        return G__5827__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5827.cljs$core$IFn$_invoke$arity$2 = G__5827__2;
  G__5827.cljs$core$IFn$_invoke$arity$3 = G__5827__3;
  return G__5827;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args5826) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5826)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3640__auto__ = self__.front;
    if (cljs.core.truth_(or__3640__auto__)) {
      return or__3640__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3640__auto__ = self__.rear;
      if (cljs.core.truth_(or__3640__auto__)) {
        return or__3640__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__5828 = i + incr;
        i = G__5828;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__5829 = i + 1;
      var G__5830 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__5829;
      out = G__5830;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj5834 = {};
    return obj5834;
  }();
  var l = ks.length;
  var i_5835 = 0;
  while (true) {
    if (i_5835 < l) {
      var k_5836 = ks[i_5835];
      new_obj[k_5836] = obj[k_5836];
      var G__5837 = i_5835 + 1;
      i_5835 = G__5837;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5840 = cljs.core.rest.call(null, keys__$1);
        var G__5841 = init__$2;
        keys__$1 = G__5840;
        init__$1 = G__5841;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__5838_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__5838_SHARP_, self__.strobj[p1__5838_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__5842 = null;
  var G__5842__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5842__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5842 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5842__2.call(this, self__, k);
      case 3:
        return G__5842__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5842.cljs$core$IFn$_invoke$arity$2 = G__5842__2;
  G__5842.cljs$core$IFn$_invoke$arity$3 = G__5842__3;
  return G__5842;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args5839) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5839)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj5844 = {};
  return obj5844;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ES6Iterator");
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__5845 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__5845, 0, null);
    var v = cljs.core.nth.call(null, vec__5845, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__5846 = i + 2;
        i = G__5846;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__5847 = i + 2;
        i = G__5847;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__5848 = i + 2;
        i = G__5848;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__5849 = i + 2;
        i = G__5849;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__5850 = i + 2;
        i = G__5850;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_5851 = 0;
  while (true) {
    if (i_5851 < l) {
      narr[i_5851] = arr[i_5851];
      var G__5852 = i_5851 + 1;
      i_5851 = G__5852;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__5854 = cljs.core.seq.call(null, coll);
  var chunk__5855 = null;
  var count__5856 = 0;
  var i__5857 = 0;
  while (true) {
    if (i__5857 < count__5856) {
      var vec__5858 = cljs.core._nth.call(null, chunk__5855, i__5857);
      var k = cljs.core.nth.call(null, vec__5858, 0, null);
      var v = cljs.core.nth.call(null, vec__5858, 1, null);
      f.call(null, v, k);
      var G__5864 = seq__5854;
      var G__5865 = chunk__5855;
      var G__5866 = count__5856;
      var G__5867 = i__5857 + 1;
      seq__5854 = G__5864;
      chunk__5855 = G__5865;
      count__5856 = G__5866;
      i__5857 = G__5867;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__5854);
      if (temp__4126__auto__) {
        var seq__5854__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5854__$1)) {
          var c__4410__auto__ = cljs.core.chunk_first.call(null, seq__5854__$1);
          var G__5868 = cljs.core.chunk_rest.call(null, seq__5854__$1);
          var G__5869 = c__4410__auto__;
          var G__5870 = cljs.core.count.call(null, c__4410__auto__);
          var G__5871 = 0;
          seq__5854 = G__5868;
          chunk__5855 = G__5869;
          count__5856 = G__5870;
          i__5857 = G__5871;
          continue;
        } else {
          var vec__5859 = cljs.core.first.call(null, seq__5854__$1);
          var k = cljs.core.nth.call(null, vec__5859, 0, null);
          var v = cljs.core.nth.call(null, vec__5859, 1, null);
          f.call(null, v, k);
          var G__5872 = cljs.core.next.call(null, seq__5854__$1);
          var G__5873 = null;
          var G__5874 = 0;
          var G__5875 = 0;
          seq__5854 = G__5872;
          chunk__5855 = G__5873;
          count__5856 = G__5874;
          i__5857 = G__5875;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5876 = i + 2;
        var G__5877 = init__$2;
        i = G__5876;
        init__$1 = G__5877;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__5860 = other;
    if (G__5860) {
      var bit__4297__auto__ = G__5860.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4297__auto__ || G__5860.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === cljs.core._count.call(null, other__$1)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = cljs.core._lookup.call(null, other__$1, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.call(null, self__.arr[i + 1], v)) {
              var G__5878 = i + 2;
              i = G__5878;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map.call(null, coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj5862 = {};
    return obj5862;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__5879 = s + 2;
            var G__5880 = d;
            s = G__5879;
            d = G__5880;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__5881 = s + 2;
            var G__5882 = d + 2;
            s = G__5881;
            d = G__5882;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__5863 = cljs.core.aclone.call(null, self__.arr);
        G__5863[idx + 1] = v;
        return G__5863;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__5883 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__5884 = cljs.core.next.call(null, es);
          ret = G__5883;
          es = G__5884;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__5885 = null;
  var G__5885__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5885__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5885 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5885__2.call(this, self__, k);
      case 3:
        return G__5885__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5885.cljs$core$IFn$_invoke$arity$2 = G__5885__2;
  G__5885.cljs$core$IFn$_invoke$arity$3 = G__5885__3;
  return G__5885;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args5853) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5853)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__5886 = i + 2;
        var G__5887 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__5886;
        ret = G__5887;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__5888_5890 = self__.arr;
      G__5888_5890.pop();
      G__5888_5890.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__5889 = o;
      if (G__5889) {
        var bit__4304__auto__ = G__5889.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4304__auto__ || G__5889.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__5889.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5889);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5889);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__5891 = cljs.core.next.call(null, es);
          var G__5892 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__5891;
          tcoll__$2 = G__5892;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__5893 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__5894 = i + 2;
      out = G__5893;
      i = G__5894;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4220__auto__, writer__4221__auto__, opts__4222__auto__) {
  return cljs.core._write.call(null, writer__4221__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__5897 = cljs.core.aclone.call(null, arr);
    G__5897[i] = a;
    return G__5897;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__5898 = cljs.core.aclone.call(null, arr);
    G__5898[i] = a;
    G__5898[j] = b;
    return G__5898;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__5899 = i + 2;
        var G__5900 = init__$2;
        i = G__5899;
        init__$1 = G__5900;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_5901 = 0;
        var j_5902 = 0;
        while (true) {
          if (i_5901 < 32) {
            if ((self__.bitmap >>> i_5901 & 1) === 0) {
              var G__5903 = i_5901 + 1;
              var G__5904 = j_5902;
              i_5901 = G__5903;
              j_5902 = G__5904;
              continue;
            } else {
              nodes[i_5901] = !(self__.arr[j_5902] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_5902]), self__.arr[j_5902], self__.arr[j_5902 + 1], added_leaf_QMARK_) : self__.arr[j_5902 + 1];
              var G__5905 = i_5901 + 1;
              var G__5906 = j_5902 + 2;
              i_5901 = G__5905;
              j_5902 = G__5906;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_5907 = 0;
      var j_5908 = 0;
      while (true) {
        if (i_5907 < 32) {
          if ((self__.bitmap >>> i_5907 & 1) === 0) {
            var G__5909 = i_5907 + 1;
            var G__5910 = j_5908;
            i_5907 = G__5909;
            j_5908 = G__5910;
            continue;
          } else {
            nodes[i_5907] = !(self__.arr[j_5908] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_5908]), self__.arr[j_5908], self__.arr[j_5908 + 1], added_leaf_QMARK_) : self__.arr[j_5908 + 1];
            var G__5911 = i_5907 + 1;
            var G__5912 = j_5908 + 2;
            i_5907 = G__5911;
            j_5908 = G__5912;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__5913 = i + 1;
        var G__5914 = j + 2;
        var G__5915 = bitmap | 1 << i;
        i = G__5913;
        j = G__5914;
        bitmap = G__5915;
        continue;
      } else {
        var G__5916 = i + 1;
        var G__5917 = j;
        var G__5918 = bitmap;
        i = G__5916;
        j = G__5917;
        bitmap = G__5918;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__5919 = i + 1;
          var G__5920 = init__$2;
          i = G__5919;
          init__$1 = G__5920;
          continue;
        }
      } else {
        var G__5921 = i + 1;
        var G__5922 = init__$1;
        i = G__5921;
        init__$1 = G__5922;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__5923 = i + 2;
        i = G__5923;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__5924 = j + 2;
                j = G__5924;
                continue;
              }
            } else {
              var G__5925 = j + 2;
              j = G__5925;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__5926 = j + 1;
              j = G__5926;
              continue;
            }
          } else {
            var G__5927 = j + 1;
            j = G__5927;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__5929 = cljs.core.seq.call(null, coll);
  var chunk__5930 = null;
  var count__5931 = 0;
  var i__5932 = 0;
  while (true) {
    if (i__5932 < count__5931) {
      var vec__5933 = cljs.core._nth.call(null, chunk__5930, i__5932);
      var k = cljs.core.nth.call(null, vec__5933, 0, null);
      var v = cljs.core.nth.call(null, vec__5933, 1, null);
      f.call(null, v, k);
      var G__5937 = seq__5929;
      var G__5938 = chunk__5930;
      var G__5939 = count__5931;
      var G__5940 = i__5932 + 1;
      seq__5929 = G__5937;
      chunk__5930 = G__5938;
      count__5931 = G__5939;
      i__5932 = G__5940;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__5929);
      if (temp__4126__auto__) {
        var seq__5929__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5929__$1)) {
          var c__4410__auto__ = cljs.core.chunk_first.call(null, seq__5929__$1);
          var G__5941 = cljs.core.chunk_rest.call(null, seq__5929__$1);
          var G__5942 = c__4410__auto__;
          var G__5943 = cljs.core.count.call(null, c__4410__auto__);
          var G__5944 = 0;
          seq__5929 = G__5941;
          chunk__5930 = G__5942;
          count__5931 = G__5943;
          i__5932 = G__5944;
          continue;
        } else {
          var vec__5934 = cljs.core.first.call(null, seq__5929__$1);
          var k = cljs.core.nth.call(null, vec__5934, 0, null);
          var v = cljs.core.nth.call(null, vec__5934, 1, null);
          f.call(null, v, k);
          var G__5945 = cljs.core.next.call(null, seq__5929__$1);
          var G__5946 = null;
          var G__5947 = 0;
          var G__5948 = 0;
          seq__5929 = G__5945;
          chunk__5930 = G__5946;
          count__5931 = G__5947;
          i__5932 = G__5948;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj5936 = {};
    return obj5936;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__5949 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__5950 = cljs.core.next.call(null, es);
          ret = G__5949;
          es = G__5950;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__5951 = null;
  var G__5951__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5951__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5951 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5951__2.call(this, self__, k);
      case 3:
        return G__5951__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5951.cljs$core$IFn$_invoke$arity$2 = G__5951__2;
  G__5951.cljs$core$IFn$_invoke$arity$3 = G__5951__3;
  return G__5951;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args5928) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5928)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__5952 = i + 1;
      var G__5953 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__5952;
      out = G__5953;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__5954 = o;
      if (G__5954) {
        var bit__4304__auto__ = G__5954.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4304__auto__ || G__5954.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__5954.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5954);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__5954);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__5955 = cljs.core.next.call(null, es);
          var G__5956 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__5955;
          tcoll__$1 = G__5956;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__5957 = ascending_QMARK_ ? t.left : t.right;
      var G__5958 = cljs.core.conj.call(null, stack__$1, t);
      t = G__5957;
      stack__$1 = G__5958;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__5960 = null;
  var G__5960__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5960__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5960 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5960__2.call(this, self__, k);
      case 3:
        return G__5960__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5960.cljs$core$IFn$_invoke$arity$2 = G__5960__2;
  G__5960.cljs$core$IFn$_invoke$arity$3 = G__5960__3;
  return G__5960;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args5959) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5959)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__5962 = null;
  var G__5962__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5962__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5962 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5962__2.call(this, self__, k);
      case 3:
        return G__5962__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5962.cljs$core$IFn$_invoke$arity$2 = G__5962__2;
  G__5962.cljs$core$IFn$_invoke$arity$3 = G__5962__3;
  return G__5962;
}();
cljs.core.RedNode.prototype.apply = function(self__, args5961) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5961)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__5964 = cljs.core.seq.call(null, coll);
  var chunk__5965 = null;
  var count__5966 = 0;
  var i__5967 = 0;
  while (true) {
    if (i__5967 < count__5966) {
      var vec__5968 = cljs.core._nth.call(null, chunk__5965, i__5967);
      var k = cljs.core.nth.call(null, vec__5968, 0, null);
      var v = cljs.core.nth.call(null, vec__5968, 1, null);
      f.call(null, v, k);
      var G__5970 = seq__5964;
      var G__5971 = chunk__5965;
      var G__5972 = count__5966;
      var G__5973 = i__5967 + 1;
      seq__5964 = G__5970;
      chunk__5965 = G__5971;
      count__5966 = G__5972;
      i__5967 = G__5973;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__5964);
      if (temp__4126__auto__) {
        var seq__5964__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__5964__$1)) {
          var c__4410__auto__ = cljs.core.chunk_first.call(null, seq__5964__$1);
          var G__5974 = cljs.core.chunk_rest.call(null, seq__5964__$1);
          var G__5975 = c__4410__auto__;
          var G__5976 = cljs.core.count.call(null, c__4410__auto__);
          var G__5977 = 0;
          seq__5964 = G__5974;
          chunk__5965 = G__5975;
          count__5966 = G__5976;
          i__5967 = G__5977;
          continue;
        } else {
          var vec__5969 = cljs.core.first.call(null, seq__5964__$1);
          var k = cljs.core.nth.call(null, vec__5969, 0, null);
          var v = cljs.core.nth.call(null, vec__5969, 1, null);
          f.call(null, v, k);
          var G__5978 = cljs.core.next.call(null, seq__5964__$1);
          var G__5979 = null;
          var G__5980 = 0;
          var G__5981 = 0;
          seq__5964 = G__5978;
          chunk__5965 = G__5979;
          count__5966 = G__5980;
          i__5967 = G__5981;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__5982 = t.left;
          t = G__5982;
          continue;
        } else {
          var G__5983 = t.right;
          t = G__5983;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__5984 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__5985 = cljs.core.next.call(null, es);
          ret = G__5984;
          es = G__5985;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__5986 = null;
  var G__5986__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__5986__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__5986 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5986__2.call(this, self__, k);
      case 3:
        return G__5986__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5986.cljs$core$IFn$_invoke$arity$2 = G__5986__2;
  G__5986.cljs$core$IFn$_invoke$arity$3 = G__5986__3;
  return G__5986;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args5963) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args5963)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__5987 = cljs.core.conj.call(null, stack, t);
              var G__5988 = t.left;
              stack = G__5987;
              t = G__5988;
              continue;
            } else {
              var G__5989 = stack;
              var G__5990 = t.right;
              stack = G__5989;
              t = G__5990;
              continue;
            }
          } else {
            if (c > 0) {
              var G__5991 = cljs.core.conj.call(null, stack, t);
              var G__5992 = t.right;
              stack = G__5991;
              t = G__5992;
              continue;
            } else {
              var G__5993 = stack;
              var G__5994 = t.left;
              stack = G__5993;
              t = G__5994;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__5995 = cljs.core.nnext.call(null, in$);
        var G__5996 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__5995;
        out = G__5996;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__5997) {
    var keyvals = cljs.core.seq(arglist__5997);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__5998) {
    var keyvals = cljs.core.seq(arglist__5998);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj6002 = {};
      return obj6002;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__6003 = cljs.core.nnext.call(null, kvs);
        kvs = G__6003;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__6004) {
    var keyvals = cljs.core.seq(arglist__6004);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__6005 = cljs.core.nnext.call(null, in$);
        var G__6006 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6005;
        out = G__6006;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__6007) {
    var keyvals = cljs.core.seq(arglist__6007);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__6008 = cljs.core.nnext.call(null, in$);
        var G__6009 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6008;
        out = G__6009;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__6010) {
    var comparator = cljs.core.first(arglist__6010);
    var keyvals = cljs.core.rest(arglist__6010);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6011 = self__.mseq;
    if (G__6011) {
      var bit__4304__auto__ = G__6011.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4304__auto__ || G__6011.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6011.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6011);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6011);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6012 = self__.mseq;
    if (G__6012) {
      var bit__4304__auto__ = G__6012.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4304__auto__ || G__6012.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6012.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6012);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6012);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6013 = self__.mseq;
    if (G__6013) {
      var bit__4304__auto__ = G__6013.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4304__auto__ || G__6013.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6013.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6013);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6013);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__6014 = self__.mseq;
    if (G__6014) {
      var bit__4304__auto__ = G__6014.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4304__auto__ || G__6014.cljs$core$INext$) {
        return true;
      } else {
        if (!G__6014.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6014);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__6014);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__6015_SHARP_, p2__6016_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3640__auto__ = p1__6015_SHARP_;
          if (cljs.core.truth_(or__3640__auto__)) {
            return or__3640__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__6016_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__6017) {
    var maps = cljs.core.seq(arglist__6017);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3640__auto__ = m1;
            if (cljs.core.truth_(or__3640__auto__)) {
              return or__3640__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__6018) {
    var f = cljs.core.first(arglist__6018);
    var maps = cljs.core.rest(arglist__6018);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__6019 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__6020 = cljs.core.next.call(null, keys);
      ret = G__6019;
      keys = G__6020;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6023 = cljs.core.seq.call(null, coll);
  var chunk__6024 = null;
  var count__6025 = 0;
  var i__6026 = 0;
  while (true) {
    if (i__6026 < count__6025) {
      var vec__6027 = cljs.core._nth.call(null, chunk__6024, i__6026);
      var k = cljs.core.nth.call(null, vec__6027, 0, null);
      var v = cljs.core.nth.call(null, vec__6027, 1, null);
      f.call(null, v, k);
      var G__6029 = seq__6023;
      var G__6030 = chunk__6024;
      var G__6031 = count__6025;
      var G__6032 = i__6026 + 1;
      seq__6023 = G__6029;
      chunk__6024 = G__6030;
      count__6025 = G__6031;
      i__6026 = G__6032;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6023);
      if (temp__4126__auto__) {
        var seq__6023__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6023__$1)) {
          var c__4410__auto__ = cljs.core.chunk_first.call(null, seq__6023__$1);
          var G__6033 = cljs.core.chunk_rest.call(null, seq__6023__$1);
          var G__6034 = c__4410__auto__;
          var G__6035 = cljs.core.count.call(null, c__4410__auto__);
          var G__6036 = 0;
          seq__6023 = G__6033;
          chunk__6024 = G__6034;
          count__6025 = G__6035;
          i__6026 = G__6036;
          continue;
        } else {
          var vec__6028 = cljs.core.first.call(null, seq__6023__$1);
          var k = cljs.core.nth.call(null, vec__6028, 0, null);
          var v = cljs.core.nth.call(null, vec__6028, 1, null);
          f.call(null, v, k);
          var G__6037 = cljs.core.next.call(null, seq__6023__$1);
          var G__6038 = null;
          var G__6039 = 0;
          var G__6040 = 0;
          seq__6023 = G__6037;
          chunk__6024 = G__6038;
          count__6025 = G__6039;
          i__6026 = G__6040;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__6021_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6021_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__6041 = null;
  var G__6041__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6041__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6041 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6041__2.call(this, self__, k);
      case 3:
        return G__6041__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6041.cljs$core$IFn$_invoke$arity$2 = G__6041__2;
  G__6041.cljs$core$IFn$_invoke$arity$3 = G__6041__3;
  return G__6041;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args6022) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6022)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__6042 = i + 1;
        var G__6043 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__6042;
        out = G__6043;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__6044 = i + 1;
        var G__6045 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__6044;
        out = G__6045;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__6047 = null;
  var G__6047__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__6047__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__6047 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6047__2.call(this, self__, k);
      case 3:
        return G__6047__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6047.cljs$core$IFn$_invoke$arity$2 = G__6047__2;
  G__6047.cljs$core$IFn$_invoke$arity$3 = G__6047__3;
  return G__6047;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args6046) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6046)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__6050 = cljs.core.seq.call(null, coll);
  var chunk__6051 = null;
  var count__6052 = 0;
  var i__6053 = 0;
  while (true) {
    if (i__6053 < count__6052) {
      var vec__6054 = cljs.core._nth.call(null, chunk__6051, i__6053);
      var k = cljs.core.nth.call(null, vec__6054, 0, null);
      var v = cljs.core.nth.call(null, vec__6054, 1, null);
      f.call(null, v, k);
      var G__6056 = seq__6050;
      var G__6057 = chunk__6051;
      var G__6058 = count__6052;
      var G__6059 = i__6053 + 1;
      seq__6050 = G__6056;
      chunk__6051 = G__6057;
      count__6052 = G__6058;
      i__6053 = G__6059;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6050);
      if (temp__4126__auto__) {
        var seq__6050__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6050__$1)) {
          var c__4410__auto__ = cljs.core.chunk_first.call(null, seq__6050__$1);
          var G__6060 = cljs.core.chunk_rest.call(null, seq__6050__$1);
          var G__6061 = c__4410__auto__;
          var G__6062 = cljs.core.count.call(null, c__4410__auto__);
          var G__6063 = 0;
          seq__6050 = G__6060;
          chunk__6051 = G__6061;
          count__6052 = G__6062;
          i__6053 = G__6063;
          continue;
        } else {
          var vec__6055 = cljs.core.first.call(null, seq__6050__$1);
          var k = cljs.core.nth.call(null, vec__6055, 0, null);
          var v = cljs.core.nth.call(null, vec__6055, 1, null);
          f.call(null, v, k);
          var G__6064 = cljs.core.next.call(null, seq__6050__$1);
          var G__6065 = null;
          var G__6066 = 0;
          var G__6067 = 0;
          seq__6050 = G__6064;
          chunk__6051 = G__6065;
          count__6052 = G__6066;
          i__6053 = G__6067;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__6048_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__6048_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__6068 = null;
  var G__6068__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6068__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6068 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6068__2.call(this, self__, k);
      case 3:
        return G__6068__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6068.cljs$core$IFn$_invoke$arity$2 = G__6068__2;
  G__6068.cljs$core$IFn$_invoke$arity$3 = G__6068__3;
  return G__6068;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args6049) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6049)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4504__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4504__auto__.length) {
        var G__6069 = i + 1;
        var G__6070 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__6069;
        res = G__6070;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__6071 = cljs.core._next.call(null, in$__$1);
          var G__6072 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__6071;
          out = G__6072;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__6073__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__6073 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6073__delegate.call(this, keys);
    };
    G__6073.cljs$lang$maxFixedArity = 0;
    G__6073.cljs$lang$applyTo = function(arglist__6074) {
      var keys = cljs.core.seq(arglist__6074);
      return G__6073__delegate(keys);
    };
    G__6073.cljs$core$IFn$_invoke$arity$variadic = G__6073__delegate;
    return G__6073;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__6075) {
    var keys = cljs.core.seq(arglist__6075);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__6076) {
    var comparator = cljs.core.first(arglist__6076);
    var keys = cljs.core.rest(arglist__6076);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__6077_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__6077_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__6077_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__6078_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__6078_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__6078_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__6085, seen__$1) {
        while (true) {
          var vec__6086 = p__6085;
          var f = cljs.core.nth.call(null, vec__6086, 0, null);
          var xs__$1 = vec__6086;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__6087 = cljs.core.rest.call(null, s);
              var G__6088 = seen__$1;
              p__6085 = G__6087;
              seen__$1 = G__6088;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__6089 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__6090 = cljs.core.next.call(null, s__$1);
      ret = G__6089;
      s__$1 = G__6090;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__6092 = x;
    if (G__6092) {
      var bit__4297__auto__ = G__6092.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4297__auto__ || G__6092.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__6093 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__6094 = cljs.core.next.call(null, ks);
      var G__6095 = cljs.core.next.call(null, vs);
      map = G__6093;
      ks = G__6094;
      vs = G__6095;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__6098__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6096_SHARP_, p2__6097_SHARP_) {
        return max_key.call(null, k, p1__6096_SHARP_, p2__6097_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__6098 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6098__delegate.call(this, k, x, y, more);
    };
    G__6098.cljs$lang$maxFixedArity = 3;
    G__6098.cljs$lang$applyTo = function(arglist__6099) {
      var k = cljs.core.first(arglist__6099);
      arglist__6099 = cljs.core.next(arglist__6099);
      var x = cljs.core.first(arglist__6099);
      arglist__6099 = cljs.core.next(arglist__6099);
      var y = cljs.core.first(arglist__6099);
      var more = cljs.core.rest(arglist__6099);
      return G__6098__delegate(k, x, y, more);
    };
    G__6098.cljs$core$IFn$_invoke$arity$variadic = G__6098__delegate;
    return G__6098;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__6102__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__6100_SHARP_, p2__6101_SHARP_) {
        return min_key.call(null, k, p1__6100_SHARP_, p2__6101_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__6102 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6102__delegate.call(this, k, x, y, more);
    };
    G__6102.cljs$lang$maxFixedArity = 3;
    G__6102.cljs$lang$applyTo = function(arglist__6103) {
      var k = cljs.core.first(arglist__6103);
      arglist__6103 = cljs.core.next(arglist__6103);
      var x = cljs.core.first(arglist__6103);
      arglist__6103 = cljs.core.next(arglist__6103);
      var y = cljs.core.first(arglist__6103);
      var more = cljs.core.rest(arglist__6103);
      return G__6102__delegate(k, x, y, more);
    };
    G__6102.cljs$core$IFn$_invoke$arity$variadic = G__6102__delegate;
    return G__6102;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__6104 = null;
          var G__6104__0 = function() {
            return rf.call(null);
          };
          var G__6104__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return rf.call(null, result, v);
            }();
            return rf.call(null, result__$1);
          };
          var G__6104__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return rf.call(null, result, v);
            } else {
              return result;
            }
          };
          G__6104 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6104__0.call(this);
              case 1:
                return G__6104__1.call(this, result);
              case 2:
                return G__6104__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6104.cljs$core$IFn$_invoke$arity$0 = G__6104__0;
          G__6104.cljs$core$IFn$_invoke$arity$1 = G__6104__1;
          G__6104.cljs$core$IFn$_invoke$arity$2 = G__6104__2;
          return G__6104;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__6105 = null;
        var G__6105__0 = function() {
          return rf.call(null);
        };
        var G__6105__1 = function(result) {
          return rf.call(null, result);
        };
        var G__6105__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return rf.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__6105 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__6105__0.call(this);
            case 1:
              return G__6105__1.call(this, result);
            case 2:
              return G__6105__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__6105.cljs$core$IFn$_invoke$arity$0 = G__6105__0;
        G__6105.cljs$core$IFn$_invoke$arity$1 = G__6105__1;
        G__6105.cljs$core$IFn$_invoke$arity$2 = G__6105__2;
        return G__6105;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__6108 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__6108, 0, null);
        var s = vec__6108;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__6109 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__6109, 0, null);
      var s = vec__6109;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__6112 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__6112, 0, null);
        var s = vec__6112;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__6113 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__6113, 0, null);
      var s = vec__6113;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/RangeIterator");
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4051__auto__ = self__.__hash;
  if (!(h__4051__auto__ == null)) {
    return h__4051__auto__;
  } else {
    var h__4051__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__4051__auto____$1;
    return h__4051__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_.call(null, ret__$1)) {
        return cljs.core.deref.call(null, ret__$1);
      } else {
        var G__6114 = i + self__.step;
        var G__6115 = ret__$1;
        i = G__6114;
        ret = G__6115;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__6116 = null;
          var G__6116__0 = function() {
            return rf.call(null);
          };
          var G__6116__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6116__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return rf.call(null, result, input);
            } else {
              return result;
            }
          };
          G__6116 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6116__0.call(this);
              case 1:
                return G__6116__1.call(this, result);
              case 2:
                return G__6116__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6116.cljs$core$IFn$_invoke$arity$0 = G__6116__0;
          G__6116.cljs$core$IFn$_invoke$arity$1 = G__6116__1;
          G__6116.cljs$core$IFn$_invoke$arity$2 = G__6116__2;
          return G__6116;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__6118 = null;
          var G__6118__0 = function() {
            return rf.call(null);
          };
          var G__6118__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return rf.call(null, result, v);
            }();
            return rf.call(null, result__$1);
          };
          var G__6118__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              var ret = rf.call(null, result, v);
              if (cljs.core.reduced_QMARK_.call(null, ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__6118 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6118__0.call(this);
              case 1:
                return G__6118__1.call(this, result);
              case 2:
                return G__6118__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6118.cljs$core$IFn$_invoke$arity$0 = G__6118__0;
          G__6118.cljs$core$IFn$_invoke$arity$1 = G__6118__1;
          G__6118.cljs$core$IFn$_invoke$arity$2 = G__6118__2;
          return G__6118;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__6117_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__6117_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__6129 = null;
      var G__6129__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__6129__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__6129__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__6129__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__6129__4 = function() {
        var G__6130__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__6130 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6130__delegate.call(this, x, y, z, args);
        };
        G__6130.cljs$lang$maxFixedArity = 3;
        G__6130.cljs$lang$applyTo = function(arglist__6131) {
          var x = cljs.core.first(arglist__6131);
          arglist__6131 = cljs.core.next(arglist__6131);
          var y = cljs.core.first(arglist__6131);
          arglist__6131 = cljs.core.next(arglist__6131);
          var z = cljs.core.first(arglist__6131);
          var args = cljs.core.rest(arglist__6131);
          return G__6130__delegate(x, y, z, args);
        };
        G__6130.cljs$core$IFn$_invoke$arity$variadic = G__6130__delegate;
        return G__6130;
      }();
      G__6129 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6129__0.call(this);
          case 1:
            return G__6129__1.call(this, x);
          case 2:
            return G__6129__2.call(this, x, y);
          case 3:
            return G__6129__3.call(this, x, y, z);
          default:
            return G__6129__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6129.cljs$lang$maxFixedArity = 3;
      G__6129.cljs$lang$applyTo = G__6129__4.cljs$lang$applyTo;
      G__6129.cljs$core$IFn$_invoke$arity$0 = G__6129__0;
      G__6129.cljs$core$IFn$_invoke$arity$1 = G__6129__1;
      G__6129.cljs$core$IFn$_invoke$arity$2 = G__6129__2;
      G__6129.cljs$core$IFn$_invoke$arity$3 = G__6129__3;
      G__6129.cljs$core$IFn$_invoke$arity$variadic = G__6129__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6129;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__6132 = null;
      var G__6132__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__6132__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__6132__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__6132__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__6132__4 = function() {
        var G__6133__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__6133 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6133__delegate.call(this, x, y, z, args);
        };
        G__6133.cljs$lang$maxFixedArity = 3;
        G__6133.cljs$lang$applyTo = function(arglist__6134) {
          var x = cljs.core.first(arglist__6134);
          arglist__6134 = cljs.core.next(arglist__6134);
          var y = cljs.core.first(arglist__6134);
          arglist__6134 = cljs.core.next(arglist__6134);
          var z = cljs.core.first(arglist__6134);
          var args = cljs.core.rest(arglist__6134);
          return G__6133__delegate(x, y, z, args);
        };
        G__6133.cljs$core$IFn$_invoke$arity$variadic = G__6133__delegate;
        return G__6133;
      }();
      G__6132 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6132__0.call(this);
          case 1:
            return G__6132__1.call(this, x);
          case 2:
            return G__6132__2.call(this, x, y);
          case 3:
            return G__6132__3.call(this, x, y, z);
          default:
            return G__6132__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6132.cljs$lang$maxFixedArity = 3;
      G__6132.cljs$lang$applyTo = G__6132__4.cljs$lang$applyTo;
      G__6132.cljs$core$IFn$_invoke$arity$0 = G__6132__0;
      G__6132.cljs$core$IFn$_invoke$arity$1 = G__6132__1;
      G__6132.cljs$core$IFn$_invoke$arity$2 = G__6132__2;
      G__6132.cljs$core$IFn$_invoke$arity$3 = G__6132__3;
      G__6132.cljs$core$IFn$_invoke$arity$variadic = G__6132__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6132;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__6135 = null;
      var G__6135__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__6135__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__6135__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__6135__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__6135__4 = function() {
        var G__6136__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__6136 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6136__delegate.call(this, x, y, z, args);
        };
        G__6136.cljs$lang$maxFixedArity = 3;
        G__6136.cljs$lang$applyTo = function(arglist__6137) {
          var x = cljs.core.first(arglist__6137);
          arglist__6137 = cljs.core.next(arglist__6137);
          var y = cljs.core.first(arglist__6137);
          arglist__6137 = cljs.core.next(arglist__6137);
          var z = cljs.core.first(arglist__6137);
          var args = cljs.core.rest(arglist__6137);
          return G__6136__delegate(x, y, z, args);
        };
        G__6136.cljs$core$IFn$_invoke$arity$variadic = G__6136__delegate;
        return G__6136;
      }();
      G__6135 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6135__0.call(this);
          case 1:
            return G__6135__1.call(this, x);
          case 2:
            return G__6135__2.call(this, x, y);
          case 3:
            return G__6135__3.call(this, x, y, z);
          default:
            return G__6135__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6135.cljs$lang$maxFixedArity = 3;
      G__6135.cljs$lang$applyTo = G__6135__4.cljs$lang$applyTo;
      G__6135.cljs$core$IFn$_invoke$arity$0 = G__6135__0;
      G__6135.cljs$core$IFn$_invoke$arity$1 = G__6135__1;
      G__6135.cljs$core$IFn$_invoke$arity$2 = G__6135__2;
      G__6135.cljs$core$IFn$_invoke$arity$3 = G__6135__3;
      G__6135.cljs$core$IFn$_invoke$arity$variadic = G__6135__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__6135;
    }();
  };
  var juxt__4 = function() {
    var G__6138__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__6139 = null;
          var G__6139__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6119_SHARP_, p2__6120_SHARP_) {
                return cljs.core.conj.call(null, p1__6119_SHARP_, p2__6120_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6139__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6121_SHARP_, p2__6122_SHARP_) {
                return cljs.core.conj.call(null, p1__6121_SHARP_, p2__6122_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6139__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6123_SHARP_, p2__6124_SHARP_) {
                return cljs.core.conj.call(null, p1__6123_SHARP_, p2__6124_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6139__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__6125_SHARP_, p2__6126_SHARP_) {
                return cljs.core.conj.call(null, p1__6125_SHARP_, p2__6126_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__6139__4 = function() {
            var G__6140__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__6127_SHARP_, p2__6128_SHARP_) {
                  return cljs.core.conj.call(null, p1__6127_SHARP_, cljs.core.apply.call(null, p2__6128_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__6140 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6140__delegate.call(this, x, y, z, args);
            };
            G__6140.cljs$lang$maxFixedArity = 3;
            G__6140.cljs$lang$applyTo = function(arglist__6141) {
              var x = cljs.core.first(arglist__6141);
              arglist__6141 = cljs.core.next(arglist__6141);
              var y = cljs.core.first(arglist__6141);
              arglist__6141 = cljs.core.next(arglist__6141);
              var z = cljs.core.first(arglist__6141);
              var args = cljs.core.rest(arglist__6141);
              return G__6140__delegate(x, y, z, args);
            };
            G__6140.cljs$core$IFn$_invoke$arity$variadic = G__6140__delegate;
            return G__6140;
          }();
          G__6139 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__6139__0.call(this);
              case 1:
                return G__6139__1.call(this, x);
              case 2:
                return G__6139__2.call(this, x, y);
              case 3:
                return G__6139__3.call(this, x, y, z);
              default:
                return G__6139__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6139.cljs$lang$maxFixedArity = 3;
          G__6139.cljs$lang$applyTo = G__6139__4.cljs$lang$applyTo;
          G__6139.cljs$core$IFn$_invoke$arity$0 = G__6139__0;
          G__6139.cljs$core$IFn$_invoke$arity$1 = G__6139__1;
          G__6139.cljs$core$IFn$_invoke$arity$2 = G__6139__2;
          G__6139.cljs$core$IFn$_invoke$arity$3 = G__6139__3;
          G__6139.cljs$core$IFn$_invoke$arity$variadic = G__6139__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__6139;
        }();
      }(fs__$1);
    };
    var G__6138 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6138__delegate.call(this, f, g, h, fs);
    };
    G__6138.cljs$lang$maxFixedArity = 3;
    G__6138.cljs$lang$applyTo = function(arglist__6142) {
      var f = cljs.core.first(arglist__6142);
      arglist__6142 = cljs.core.next(arglist__6142);
      var g = cljs.core.first(arglist__6142);
      arglist__6142 = cljs.core.next(arglist__6142);
      var h = cljs.core.first(arglist__6142);
      var fs = cljs.core.rest(arglist__6142);
      return G__6138__delegate(f, g, h, fs);
    };
    G__6138.cljs$core$IFn$_invoke$arity$variadic = G__6138__delegate;
    return G__6138;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__6143 = cljs.core.next.call(null, coll);
        coll = G__6143;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__6144 = n - 1;
        var G__6145 = cljs.core.next.call(null, coll);
        n = G__6144;
        coll = G__6145;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__6147 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.call(null, vec__6147, 0, null);
    var flags = cljs.core.nth.call(null, vec__6147, 1, null);
    var pattern = cljs.core.nth.call(null, vec__6147, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_6149 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_6150__$1 = cljs.core.next.call(null, coll);
      var n_6151 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_6150__$1 && (n_6151 == null || !(n_6151 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_6150__$1), writer, opts);
          var G__6152 = cljs.core.next.call(null, coll_6150__$1);
          var G__6153 = n_6151 - 1;
          coll_6150__$1 = G__6152;
          n_6151 = G__6153;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_6150__$1) && n_6151 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_6149;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__6158 = cljs.core.seq.call(null, ss);
    var chunk__6159 = null;
    var count__6160 = 0;
    var i__6161 = 0;
    while (true) {
      if (i__6161 < count__6160) {
        var s = cljs.core._nth.call(null, chunk__6159, i__6161);
        cljs.core._write.call(null, writer, s);
        var G__6162 = seq__6158;
        var G__6163 = chunk__6159;
        var G__6164 = count__6160;
        var G__6165 = i__6161 + 1;
        seq__6158 = G__6162;
        chunk__6159 = G__6163;
        count__6160 = G__6164;
        i__6161 = G__6165;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__6158);
        if (temp__4126__auto__) {
          var seq__6158__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6158__$1)) {
            var c__4410__auto__ = cljs.core.chunk_first.call(null, seq__6158__$1);
            var G__6166 = cljs.core.chunk_rest.call(null, seq__6158__$1);
            var G__6167 = c__4410__auto__;
            var G__6168 = cljs.core.count.call(null, c__4410__auto__);
            var G__6169 = 0;
            seq__6158 = G__6166;
            chunk__6159 = G__6167;
            count__6160 = G__6168;
            i__6161 = G__6169;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__6158__$1);
            cljs.core._write.call(null, writer, s);
            var G__6170 = cljs.core.next.call(null, seq__6158__$1);
            var G__6171 = null;
            var G__6172 = 0;
            var G__6173 = 0;
            seq__6158 = G__6170;
            chunk__6159 = G__6171;
            count__6160 = G__6172;
            i__6161 = G__6173;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__6174) {
    var writer = cljs.core.first(arglist__6174);
    var ss = cljs.core.rest(arglist__6174);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj6176 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj6176;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3628__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3628__auto__)) {
          var and__3628__auto____$1 = function() {
            var G__6182 = obj;
            if (G__6182) {
              var bit__4304__auto__ = G__6182.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4304__auto__ || G__6182.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__6182.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6182);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6182);
            }
          }();
          if (and__3628__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3628__auto____$1;
          }
        } else {
          return and__3628__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__6183 = obj;
            if (G__6183) {
              var bit__4297__auto__ = G__6183.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4297__auto__ || G__6183.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__6185 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__6185;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__6184 = obj;
                            if (G__6184) {
                              var bit__4304__auto__ = G__6184.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4304__auto__ || G__6184.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__6184.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6184);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__6184);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__6190 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__6191 = null;
  var count__6192 = 0;
  var i__6193 = 0;
  while (true) {
    if (i__6193 < count__6192) {
      var obj = cljs.core._nth.call(null, chunk__6191, i__6193);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__6194 = seq__6190;
      var G__6195 = chunk__6191;
      var G__6196 = count__6192;
      var G__6197 = i__6193 + 1;
      seq__6190 = G__6194;
      chunk__6191 = G__6195;
      count__6192 = G__6196;
      i__6193 = G__6197;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6190);
      if (temp__4126__auto__) {
        var seq__6190__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6190__$1)) {
          var c__4410__auto__ = cljs.core.chunk_first.call(null, seq__6190__$1);
          var G__6198 = cljs.core.chunk_rest.call(null, seq__6190__$1);
          var G__6199 = c__4410__auto__;
          var G__6200 = cljs.core.count.call(null, c__4410__auto__);
          var G__6201 = 0;
          seq__6190 = G__6198;
          chunk__6191 = G__6199;
          count__6192 = G__6200;
          i__6193 = G__6201;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__6190__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__6202 = cljs.core.next.call(null, seq__6190__$1);
          var G__6203 = null;
          var G__6204 = 0;
          var G__6205 = 0;
          seq__6190 = G__6202;
          chunk__6191 = G__6203;
          count__6192 = G__6204;
          i__6193 = G__6205;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__6206) {
    var objs = cljs.core.seq(arglist__6206);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__6207) {
    var objs = cljs.core.seq(arglist__6207);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__6208) {
    var objs = cljs.core.seq(arglist__6208);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__6209) {
    var objs = cljs.core.seq(arglist__6209);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__6210) {
    var objs = cljs.core.seq(arglist__6210);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__6211) {
    var objs = cljs.core.seq(arglist__6211);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__6212) {
    var objs = cljs.core.seq(arglist__6212);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__6213) {
    var objs = cljs.core.seq(arglist__6213);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__6214) {
    var iref = cljs.core.first(arglist__6214);
    arglist__6214 = cljs.core.next(arglist__6214);
    var f = cljs.core.first(arglist__6214);
    var args = cljs.core.rest(arglist__6214);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__6215_SHARP_, p2__6216_SHARP_) {
    var ret = rf.call(null, p1__6215_SHARP_, p2__6216_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced.call(null, rf);
  return function(rf1) {
    return function() {
      var G__6217 = null;
      var G__6217__0 = function() {
        return rf.call(null);
      };
      var G__6217__1 = function(result) {
        return rf.call(null, result);
      };
      var G__6217__2 = function(result, input) {
        return cljs.core.reduce.call(null, rf1, result, input);
      };
      G__6217 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__6217__0.call(this);
          case 1:
            return G__6217__1.call(this, result);
          case 2:
            return G__6217__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6217.cljs$core$IFn$_invoke$arity$0 = G__6217__0;
      G__6217.cljs$core$IFn$_invoke$arity$1 = G__6217__1;
      G__6217.cljs$core$IFn$_invoke$arity$2 = G__6217__2;
      return G__6217;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__6218 = null;
          var G__6218__0 = function() {
            return rf.call(null);
          };
          var G__6218__1 = function(result) {
            return rf.call(null, result);
          };
          var G__6218__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return rf.call(null, result, input);
            }
          };
          G__6218 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__6218__0.call(this);
              case 1:
                return G__6218__1.call(this, result);
              case 2:
                return G__6218__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__6218.cljs$core$IFn$_invoke$arity$0 = G__6218__0;
          G__6218.cljs$core$IFn$_invoke$arity$1 = G__6218__1;
          G__6218.cljs$core$IFn$_invoke$arity$2 = G__6218__2;
          return G__6218;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/Eduction");
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__6220_SHARP_, p2__6219_SHARP_) {
    return proc.call(null, p2__6219_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj6222 = {};
  return obj6222;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3628__auto__ = x;
    if (and__3628__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4277__auto__ = x == null ? null : x;
    return function() {
      var or__3640__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3628__auto__ = x;
    if (and__3628__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4277__auto__ = x == null ? null : x;
    return function() {
      var or__3640__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__6224 = k;
    if (G__6224) {
      var bit__4304__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3640__auto__ = bit__4304__auto__;
        if (cljs.core.truth_(or__3640__auto__)) {
          return or__3640__auto__;
        } else {
          return G__6224.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__6224.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6224);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6224);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__6238 = x;
      if (G__6238) {
        var bit__4304__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3640__auto__ = bit__4304__auto__;
          if (cljs.core.truth_(or__3640__auto__)) {
            return or__3640__auto__;
          } else {
            return G__6238.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__6238.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6238);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__6238);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj6240 = {};
              return obj6240;
            }();
            var seq__6241_6251 = cljs.core.seq.call(null, x);
            var chunk__6242_6252 = null;
            var count__6243_6253 = 0;
            var i__6244_6254 = 0;
            while (true) {
              if (i__6244_6254 < count__6243_6253) {
                var vec__6245_6255 = cljs.core._nth.call(null, chunk__6242_6252, i__6244_6254);
                var k_6256 = cljs.core.nth.call(null, vec__6245_6255, 0, null);
                var v_6257 = cljs.core.nth.call(null, vec__6245_6255, 1, null);
                m[cljs.core.key__GT_js.call(null, k_6256)] = clj__GT_js.call(null, v_6257);
                var G__6258 = seq__6241_6251;
                var G__6259 = chunk__6242_6252;
                var G__6260 = count__6243_6253;
                var G__6261 = i__6244_6254 + 1;
                seq__6241_6251 = G__6258;
                chunk__6242_6252 = G__6259;
                count__6243_6253 = G__6260;
                i__6244_6254 = G__6261;
                continue;
              } else {
                var temp__4126__auto___6262 = cljs.core.seq.call(null, seq__6241_6251);
                if (temp__4126__auto___6262) {
                  var seq__6241_6263__$1 = temp__4126__auto___6262;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__6241_6263__$1)) {
                    var c__4410__auto___6264 = cljs.core.chunk_first.call(null, seq__6241_6263__$1);
                    var G__6265 = cljs.core.chunk_rest.call(null, seq__6241_6263__$1);
                    var G__6266 = c__4410__auto___6264;
                    var G__6267 = cljs.core.count.call(null, c__4410__auto___6264);
                    var G__6268 = 0;
                    seq__6241_6251 = G__6265;
                    chunk__6242_6252 = G__6266;
                    count__6243_6253 = G__6267;
                    i__6244_6254 = G__6268;
                    continue;
                  } else {
                    var vec__6246_6269 = cljs.core.first.call(null, seq__6241_6263__$1);
                    var k_6270 = cljs.core.nth.call(null, vec__6246_6269, 0, null);
                    var v_6271 = cljs.core.nth.call(null, vec__6246_6269, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_6270)] = clj__GT_js.call(null, v_6271);
                    var G__6272 = cljs.core.next.call(null, seq__6241_6263__$1);
                    var G__6273 = null;
                    var G__6274 = 0;
                    var G__6275 = 0;
                    seq__6241_6251 = G__6272;
                    chunk__6242_6252 = G__6273;
                    count__6243_6253 = G__6274;
                    i__6244_6254 = G__6275;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__6247_6276 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__6248_6277 = null;
              var count__6249_6278 = 0;
              var i__6250_6279 = 0;
              while (true) {
                if (i__6250_6279 < count__6249_6278) {
                  var x_6280__$1 = cljs.core._nth.call(null, chunk__6248_6277, i__6250_6279);
                  arr.push(x_6280__$1);
                  var G__6281 = seq__6247_6276;
                  var G__6282 = chunk__6248_6277;
                  var G__6283 = count__6249_6278;
                  var G__6284 = i__6250_6279 + 1;
                  seq__6247_6276 = G__6281;
                  chunk__6248_6277 = G__6282;
                  count__6249_6278 = G__6283;
                  i__6250_6279 = G__6284;
                  continue;
                } else {
                  var temp__4126__auto___6285 = cljs.core.seq.call(null, seq__6247_6276);
                  if (temp__4126__auto___6285) {
                    var seq__6247_6286__$1 = temp__4126__auto___6285;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__6247_6286__$1)) {
                      var c__4410__auto___6287 = cljs.core.chunk_first.call(null, seq__6247_6286__$1);
                      var G__6288 = cljs.core.chunk_rest.call(null, seq__6247_6286__$1);
                      var G__6289 = c__4410__auto___6287;
                      var G__6290 = cljs.core.count.call(null, c__4410__auto___6287);
                      var G__6291 = 0;
                      seq__6247_6276 = G__6288;
                      chunk__6248_6277 = G__6289;
                      count__6249_6278 = G__6290;
                      i__6250_6279 = G__6291;
                      continue;
                    } else {
                      var x_6292__$1 = cljs.core.first.call(null, seq__6247_6286__$1);
                      arr.push(x_6292__$1);
                      var G__6293 = cljs.core.next.call(null, seq__6247_6286__$1);
                      var G__6294 = null;
                      var G__6295 = 0;
                      var G__6296 = 0;
                      seq__6247_6276 = G__6293;
                      chunk__6248_6277 = G__6294;
                      count__6249_6278 = G__6295;
                      i__6250_6279 = G__6296;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj6298 = {};
  return obj6298;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3628__auto__ = x;
    if (and__3628__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4277__auto__ = x == null ? null : x;
    return function() {
      var or__3640__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__6319__delegate = function(x, opts) {
      if (function() {
        var G__6309 = x;
        if (G__6309) {
          var bit__4304__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3640__auto__ = bit__4304__auto__;
            if (cljs.core.truth_(or__3640__auto__)) {
              return or__3640__auto__;
            } else {
              return G__6309.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__6309.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__6309);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__6309);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__6310 = opts;
          var map__6310__$1 = cljs.core.seq_QMARK_.call(null, map__6310) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6310) : map__6310;
          var keywordize_keys = cljs.core.get.call(null, map__6310__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__6310, map__6310__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4379__auto__ = function(map__6310, map__6310__$1, keywordize_keys, keyfn) {
                          return function iter__6315(s__6316) {
                            return new cljs.core.LazySeq(null, function(map__6310, map__6310__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__6316__$1 = s__6316;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__6316__$1);
                                  if (temp__4126__auto__) {
                                    var s__6316__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__6316__$2)) {
                                      var c__4377__auto__ = cljs.core.chunk_first.call(null, s__6316__$2);
                                      var size__4378__auto__ = cljs.core.count.call(null, c__4377__auto__);
                                      var b__6318 = cljs.core.chunk_buffer.call(null, size__4378__auto__);
                                      if (function() {
                                        var i__6317 = 0;
                                        while (true) {
                                          if (i__6317 < size__4378__auto__) {
                                            var k = cljs.core._nth.call(null, c__4377__auto__, i__6317);
                                            cljs.core.chunk_append.call(null, b__6318, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__6320 = i__6317 + 1;
                                            i__6317 = G__6320;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6318), iter__6315.call(null, cljs.core.chunk_rest.call(null, s__6316__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6318), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__6316__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__6315.call(null, cljs.core.rest.call(null, s__6316__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__6310, map__6310__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__6310, map__6310__$1, keywordize_keys, keyfn);
                        return iter__4379__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__6310, map__6310__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__6319 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6319__delegate.call(this, x, opts);
    };
    G__6319.cljs$lang$maxFixedArity = 1;
    G__6319.cljs$lang$applyTo = function(arglist__6321) {
      var x = cljs.core.first(arglist__6321);
      var opts = cljs.core.rest(arglist__6321);
      return G__6319__delegate(x, opts);
    };
    G__6319.cljs$core$IFn$_invoke$arity$variadic = G__6319__delegate;
    return G__6319;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__6322__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__6322 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6322__delegate.call(this, args);
      };
      G__6322.cljs$lang$maxFixedArity = 0;
      G__6322.cljs$lang$applyTo = function(arglist__6323) {
        var args = cljs.core.seq(arglist__6323);
        return G__6322__delegate(args);
      };
      G__6322.cljs$core$IFn$_invoke$arity$variadic = G__6322__delegate;
      return G__6322;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__6324 = ret;
        f = G__6324;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__6325__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__6325 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6325__delegate.call(this, f, args);
    };
    G__6325.cljs$lang$maxFixedArity = 1;
    G__6325.cljs$lang$applyTo = function(arglist__6326) {
      var f = cljs.core.first(arglist__6326);
      var args = cljs.core.rest(arglist__6326);
      return G__6325__delegate(f, args);
    };
    G__6325.cljs$core$IFn$_invoke$arity$variadic = G__6325__delegate;
    return G__6325;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__6327) {
    var f = cljs.core.first(arglist__6327);
    var args = cljs.core.rest(arglist__6327);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3640__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3640__auto__) {
      return or__3640__auto__;
    } else {
      var or__3640__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3640__auto____$1) {
        return or__3640__auto____$1;
      } else {
        var and__3628__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3628__auto__) {
          var and__3628__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3628__auto____$1) {
            var and__3628__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3628__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__6328 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__6329 = i + 1;
                  ret = G__6328;
                  i = G__6329;
                  continue;
                }
                break;
              }
            } else {
              return and__3628__auto____$2;
            }
          } else {
            return and__3628__auto____$1;
          }
        } else {
          return and__3628__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3640__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3640__auto__)) {
      return or__3640__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__6330_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__6330_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__6330_SHARP_), cljs.core.second.call(null, p1__6330_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__6331_SHARP_, p2__6332_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__6331_SHARP_, p2__6332_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3640__auto__ = cljs.core.truth_(function() {
    var and__3628__auto__ = xprefs;
    if (cljs.core.truth_(and__3628__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3628__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3640__auto__)) {
    return or__3640__auto__;
  } else {
    var or__3640__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__6333 = cljs.core.rest.call(null, ps);
          ps = G__6333;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3640__auto____$1)) {
      return or__3640__auto____$1;
    } else {
      var or__3640__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__6334 = cljs.core.rest.call(null, ps);
            ps = G__6334;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3640__auto____$2)) {
        return or__3640__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3640__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3640__auto__)) {
    return or__3640__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__6337) {
    var vec__6338 = p__6337;
    var k = cljs.core.nth.call(null, vec__6338, 0, null);
    var _ = cljs.core.nth.call(null, vec__6338, 1, null);
    var e = vec__6338;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3640__auto__ = be == null;
        if (or__3640__auto__) {
          return or__3640__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj6340 = {};
  return obj6340;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3628__auto__ = mf;
    if (and__3628__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4277__auto__ = mf == null ? null : mf;
    return function() {
      var or__3640__auto__ = cljs.core._reset[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._reset["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3628__auto__ = mf;
    if (and__3628__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4277__auto__ = mf == null ? null : mf;
    return function() {
      var or__3640__auto__ = cljs.core._add_method[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._add_method["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3628__auto__ = mf;
    if (and__3628__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4277__auto__ = mf == null ? null : mf;
    return function() {
      var or__3640__auto__ = cljs.core._remove_method[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._remove_method["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3628__auto__ = mf;
    if (and__3628__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4277__auto__ = mf == null ? null : mf;
    return function() {
      var or__3640__auto__ = cljs.core._prefer_method[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3628__auto__ = mf;
    if (and__3628__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4277__auto__ = mf == null ? null : mf;
    return function() {
      var or__3640__auto__ = cljs.core._get_method[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._get_method["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3628__auto__ = mf;
    if (and__3628__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4277__auto__ = mf == null ? null : mf;
    return function() {
      var or__3640__auto__ = cljs.core._methods[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._methods["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3628__auto__ = mf;
    if (and__3628__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3628__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4277__auto__ = mf == null ? null : mf;
    return function() {
      var or__3640__auto__ = cljs.core._prefers[goog.typeOf(x__4277__auto__)];
      if (or__3640__auto__) {
        return or__3640__auto__;
      } else {
        var or__3640__auto____$1 = cljs.core._prefers["_"];
        if (or__3640__auto____$1) {
          return or__3640__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__6342 = null;
  var G__6342__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__6342__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__6342__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__6342__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__6342__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__6342__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__6342__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__6342__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__6342__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6342__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6342__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6342__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6342__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6342__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6342__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6342__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6342__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6342__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6342__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6342__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6342__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__6342 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__6342__2.call(this, self__, a);
      case 3:
        return G__6342__3.call(this, self__, a, b);
      case 4:
        return G__6342__4.call(this, self__, a, b, c);
      case 5:
        return G__6342__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6342__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6342__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6342__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6342__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6342__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6342__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6342__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6342__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6342__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6342__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6342__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6342__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6342__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6342__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6342__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6342__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6342__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6342.cljs$core$IFn$_invoke$arity$2 = G__6342__2;
  G__6342.cljs$core$IFn$_invoke$arity$3 = G__6342__3;
  G__6342.cljs$core$IFn$_invoke$arity$4 = G__6342__4;
  G__6342.cljs$core$IFn$_invoke$arity$5 = G__6342__5;
  G__6342.cljs$core$IFn$_invoke$arity$6 = G__6342__6;
  G__6342.cljs$core$IFn$_invoke$arity$7 = G__6342__7;
  G__6342.cljs$core$IFn$_invoke$arity$8 = G__6342__8;
  G__6342.cljs$core$IFn$_invoke$arity$9 = G__6342__9;
  G__6342.cljs$core$IFn$_invoke$arity$10 = G__6342__10;
  G__6342.cljs$core$IFn$_invoke$arity$11 = G__6342__11;
  G__6342.cljs$core$IFn$_invoke$arity$12 = G__6342__12;
  G__6342.cljs$core$IFn$_invoke$arity$13 = G__6342__13;
  G__6342.cljs$core$IFn$_invoke$arity$14 = G__6342__14;
  G__6342.cljs$core$IFn$_invoke$arity$15 = G__6342__15;
  G__6342.cljs$core$IFn$_invoke$arity$16 = G__6342__16;
  G__6342.cljs$core$IFn$_invoke$arity$17 = G__6342__17;
  G__6342.cljs$core$IFn$_invoke$arity$18 = G__6342__18;
  G__6342.cljs$core$IFn$_invoke$arity$19 = G__6342__19;
  G__6342.cljs$core$IFn$_invoke$arity$20 = G__6342__20;
  G__6342.cljs$core$IFn$_invoke$arity$21 = G__6342__21;
  G__6342.cljs$core$IFn$_invoke$arity$22 = G__6342__22;
  return G__6342;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args6341) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6341)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4217__auto__, writer__4218__auto__, opt__4219__auto__) {
  return cljs.core._write.call(null, writer__4218__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4220__auto__, writer__4221__auto__, opts__4222__auto__) {
  return cljs.core._write.call(null, writer__4221__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj12879 = {};
  return obj12879;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3596__auto__ = port;
    if (and__3596__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4247__auto__ = port == null ? null : port;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj12881 = {};
  return obj12881;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3596__auto__ = port;
    if (and__3596__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4247__auto__ = port == null ? null : port;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj12883 = {};
  return obj12883;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3596__auto__ = chan;
    if (and__3596__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4247__auto__ = chan == null ? null : chan;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3596__auto__ = chan;
    if (and__3596__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4247__auto__ = chan == null ? null : chan;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj12885 = {};
  return obj12885;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3596__auto__ = h;
    if (and__3596__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4247__auto__ = h == null ? null : h;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3596__auto__ = h;
    if (and__3596__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4247__auto__ = h == null ? null : h;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj12887 = {};
  return obj12887;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3596__auto__ = b;
    if (and__3596__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4247__auto__ = b == null ? null : b;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3596__auto__ = b;
    if (and__3596__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4247__auto__ = b == null ? null : b;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3596__auto__ = b;
    if (and__3596__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4247__auto__ = b == null ? null : b;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj12889 = {};
  return obj12889;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__12890 = cnt + 1;
      cnt = G__12890;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4490__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4490__auto__) {
      var v_12891 = this$.pop();
      if (keep_QMARK_.call(null, v_12891)) {
        this$.unshift(v_12891);
      } else {
      }
      var G__12892 = x + 1;
      x = G__12892;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_12893 = 0;
  while (true) {
    var m_12894 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_12894 == null) {
    } else {
      m_12894.call(null);
      if (count_12893 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__12895 = count_12893 + 1;
        count_12893 = G__12895;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3596__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3596__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3596__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t12899 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t12899 = function(val, box, meta12900) {
      this.val = val;
      this.box = box;
      this.meta12900 = meta12900;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t12899.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t12899.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12901) {
      var self__ = this;
      var _12901__$1 = this;
      return self__.meta12900;
    };
    cljs.core.async.impl.channels.t12899.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12901, meta12900__$1) {
      var self__ = this;
      var _12901__$1 = this;
      return new cljs.core.async.impl.channels.t12899(self__.val, self__.box, meta12900__$1);
    };
    cljs.core.async.impl.channels.t12899.cljs$lang$type = true;
    cljs.core.async.impl.channels.t12899.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t12899";
    cljs.core.async.impl.channels.t12899.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.channels/t12899");
    };
    cljs.core.async.impl.channels.__GT_t12899 = function __GT_t12899(val__$1, box__$1, meta12900) {
      return new cljs.core.async.impl.channels.t12899(val__$1, box__$1, meta12900);
    };
  }
  return new cljs.core.async.impl.channels.t12899(val, box, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 18, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 17, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async/impl/channels.cljs"], 
  null));
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj12903 = {};
  return obj12903;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3596__auto__ = self__.buf;
      if (cljs.core.truth_(and__3596__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3596__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_12904 = self__.takes.pop();
      if (taker_12904 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_12904)) {
          var take_cb_12905 = cljs.core.async.impl.protocols.commit.call(null, taker_12904);
          var val_12906 = cljs.core.truth_(function() {
            var and__3596__auto__ = self__.buf;
            if (cljs.core.truth_(and__3596__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3596__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_12905, val_12906, taker_12904, this$__$1) {
            return function() {
              return take_cb_12905.call(null, val_12906);
            };
          }(take_cb_12905, val_12906, taker_12904, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_12907 = self__.puts.pop();
          if (putter_12907 == null) {
          } else {
            var put_handler_12908 = putter_12907.handler;
            var val_12909 = putter_12907.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_12908)) {
              var put_cb_12910 = cljs.core.async.impl.protocols.commit.call(null, put_handler_12908);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_12910, put_handler_12908, val_12909, putter_12907, _, retval, this$__$1) {
                return function() {
                  return put_cb_12910.call(null, true);
                };
              }(put_cb_12910, put_handler_12908, val_12909, putter_12907, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_12909))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3596__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3596__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3596__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3596__auto__ = self__.buf;
              if (cljs.core.truth_(and__3596__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3596__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3596__auto__ = self__.buf;
      if (cljs.core.truth_(and__3596__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3596__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_12911 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_12911)) {
            var take_cb_12912 = cljs.core.async.impl.protocols.commit.call(null, taker_12911);
            var val_12913__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_12912, val_12913__$1, taker_12911, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_12912.call(null, val_12913__$1);
              };
            }(take_cb_12912, val_12913__$1, taker_12911, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_12914 = self__.puts.pop();
    if (putter_12914 == null) {
    } else {
      var put_handler_12915 = putter_12914.handler;
      var val_12916 = putter_12914.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_12915)) {
        var put_cb_12917 = cljs.core.async.impl.protocols.commit.call(null, put_handler_12915);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_12917, put_handler_12915, val_12916, putter_12914, this$__$1) {
          return function() {
            return put_cb_12917.call(null, true);
          };
        }(put_cb_12917, put_handler_12915, val_12916, putter_12914, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3608__auto__ = exh;
    if (cljs.core.truth_(or__3608__auto__)) {
      return or__3608__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__12922 = null;
          var G__12922__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e12920) {
              var t = e12920;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__12922__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e12921) {
              var t = e12921;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__12922 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__12922__1.call(this, buf__$1);
              case 2:
                return G__12922__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12922.cljs$core$IFn$_invoke$arity$1 = G__12922__1;
          G__12922.cljs$core$IFn$_invoke$arity$2 = G__12922__2;
          return G__12922;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t12839 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t12839 = function(f, fn_handler, meta12840) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta12840 = meta12840;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t12839.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t12839.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t12839.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t12839.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12841) {
      var self__ = this;
      var _12841__$1 = this;
      return self__.meta12840;
    };
    cljs.core.async.impl.ioc_helpers.t12839.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12841, meta12840__$1) {
      var self__ = this;
      var _12841__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t12839(self__.f, self__.fn_handler, meta12840__$1);
    };
    cljs.core.async.impl.ioc_helpers.t12839.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t12839.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t12839";
    cljs.core.async.impl.ioc_helpers.t12839.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.ioc-helpers/t12839");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t12839 = function __GT_t12839(f__$1, fn_handler__$1, meta12840) {
      return new cljs.core.async.impl.ioc_helpers.t12839(f__$1, fn_handler__$1, meta12840);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t12839(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 19, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 30, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 27, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async/impl/ioc_helpers.cljs"], 
  null));
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e12843) {
    if (e12843 instanceof Object) {
      var ex = e12843;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e12843;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_12846_12848 = state;
    statearr_12846_12848[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_12846_12848[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_12847_12849 = state;
    statearr_12847_12849[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_12847_12849[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_12852_12854 = state;
    statearr_12852_12854[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_12852_12854[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_12853_12855 = state;
    statearr_12853_12855[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_12853_12855[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4206__auto__, k__4207__auto__) {
  var self__ = this;
  var this__4206__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4206__auto____$1, k__4207__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4208__auto__, k12857, else__4209__auto__) {
  var self__ = this;
  var this__4208__auto____$1 = this;
  var G__12859 = k12857 instanceof cljs.core.Keyword ? k12857.fqn : null;
  switch(G__12859) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k12857, else__4209__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4220__auto__, writer__4221__auto__, opts__4222__auto__) {
  var self__ = this;
  var this__4220__auto____$1 = this;
  var pr_pair__4223__auto__ = function(this__4220__auto____$1) {
    return function(keyval__4224__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4221__auto__, cljs.core.pr_writer, "", " ", "", opts__4222__auto__, keyval__4224__auto__);
    };
  }(this__4220__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4221__auto__, pr_pair__4223__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4222__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4204__auto__) {
  var self__ = this;
  var this__4204__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4200__auto__) {
  var self__ = this;
  var this__4200__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4210__auto__) {
  var self__ = this;
  var this__4210__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4201__auto__) {
  var self__ = this;
  var this__4201__auto____$1 = this;
  var h__4024__auto__ = self__.__hash;
  if (!(h__4024__auto__ == null)) {
    return h__4024__auto__;
  } else {
    var h__4024__auto____$1 = cljs.core.hash_imap.call(null, this__4201__auto____$1);
    self__.__hash = h__4024__auto____$1;
    return h__4024__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4202__auto__, other__4203__auto__) {
  var self__ = this;
  var this__4202__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3596__auto__ = other__4203__auto__;
    if (cljs.core.truth_(and__3596__auto__)) {
      return this__4202__auto____$1.constructor === other__4203__auto__.constructor && cljs.core.equiv_map.call(null, this__4202__auto____$1, other__4203__auto__);
    } else {
      return and__3596__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4215__auto__, k__4216__auto__) {
  var self__ = this;
  var this__4215__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4216__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4215__auto____$1), self__.__meta), k__4216__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4216__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4213__auto__, k__4214__auto__, G__12856) {
  var self__ = this;
  var this__4213__auto____$1 = this;
  var pred__12860 = cljs.core.keyword_identical_QMARK_;
  var expr__12861 = k__4214__auto__;
  if (cljs.core.truth_(pred__12860.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__12861))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__12856, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__12860.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__12861))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__12856, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__12860.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__12861))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__12856, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__12860.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__12861))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__12856, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__12860.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__12861))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__12856, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4214__auto__, G__12856), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4218__auto__) {
  var self__ = this;
  var this__4218__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4205__auto__, G__12856) {
  var self__ = this;
  var this__4205__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__12856, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4211__auto__, entry__4212__auto__) {
  var self__ = this;
  var this__4211__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4212__auto__)) {
    return cljs.core._assoc.call(null, this__4211__auto____$1, cljs.core._nth.call(null, entry__4212__auto__, 0), cljs.core._nth.call(null, entry__4212__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4211__auto____$1, entry__4212__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4240__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4240__auto__, writer__4241__auto__) {
  return cljs.core._write.call(null, writer__4241__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__12858) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__12858), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__12858), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__12858), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__12858), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__12858), null, cljs.core.dissoc.call(null, G__12858, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_12865 = state;
  statearr_12865[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_12865;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3596__auto__ = exception;
      if (cljs.core.truth_(and__3596__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3596__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3596__auto__ = exception;
        if (cljs.core.truth_(and__3596__auto__)) {
          var and__3596__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3596__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3596__auto____$1;
          }
        } else {
          return and__3596__auto__;
        }
      }())) {
        var statearr_12871 = state;
        statearr_12871[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_12871[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_12871[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_12871[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_12871;
      } else {
        if (cljs.core.truth_(function() {
          var and__3596__auto__ = exception;
          if (cljs.core.truth_(and__3596__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3596__auto__;
          }
        }())) {
          var statearr_12872_12876 = state;
          statearr_12872_12876[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__12877 = state;
          state = G__12877;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3596__auto__ = exception;
            if (cljs.core.truth_(and__3596__auto__)) {
              var and__3596__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3596__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3596__auto____$1;
              }
            } else {
              return and__3596__auto__;
            }
          }())) {
            var statearr_12873 = state;
            statearr_12873[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_12873[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_12873;
          } else {
            if (cljs.core.truth_(function() {
              var and__3596__auto__ = cljs.core.not.call(null, exception);
              if (and__3596__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3596__auto__;
              }
            }())) {
              var statearr_12874 = state;
              statearr_12874[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_12874[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_12874;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_12875 = state;
                statearr_12875[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_12875[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_12875;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__12812 = level + 1;
        level = G__12812;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_12813 = 0;
    while (true) {
      if (i_12813 < arr.length) {
        arr[i_12813] = null;
        var G__12814 = i_12813 + 1;
        i_12813 = G__12814;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__12815 = x_SINGLEQUOTE_;
                x__$1 = G__12815;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__12816 = x__$1;
        var G__12817 = k;
        var G__12818 = level - 1;
        var G__12819 = update;
        x = G__12816;
        k = G__12817;
        level = G__12818;
        update = G__12819;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_12820 = self__.level + 1;
      while (true) {
        if (i_12820 <= new_level + 1) {
          update[i_12820] = self__.header;
          var G__12821 = i_12820 + 1;
          i_12820 = G__12821;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_12822 = 0;
    while (true) {
      if (i_12822 <= self__.level) {
        var links_12823 = update[i_12822].forward;
        if (links_12823[i_12822] === x__$1) {
          links_12823[i_12822] = x__$1.forward[i_12822];
          var G__12824 = i_12822 + 1;
          i_12822 = G__12824;
          continue;
        } else {
          var G__12825 = i_12822 + 1;
          i_12822 = G__12825;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__12826 = x_SINGLEQUOTE_;
              x__$1 = G__12826;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__12827 = nx;
        var G__12828 = level__$1 - 1;
        x = G__12827;
        level__$1 = G__12828;
        continue;
      } else {
        var G__12829 = x;
        var G__12830 = level__$1 - 1;
        x = G__12829;
        level__$1 = G__12830;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__12831 = x_SINGLEQUOTE_;
              x__$1 = G__12831;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__12832 = nx;
        var G__12833 = level__$1 - 1;
        x = G__12832;
        level__$1 = G__12833;
        continue;
      } else {
        var G__12834 = x;
        var G__12835 = level__$1 - 1;
        x = G__12834;
        level__$1 = G__12835;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
  return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3608__auto__ = cljs.core.truth_(function() {
    var and__3596__auto__ = me;
    if (cljs.core.truth_(and__3596__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3596__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3608__auto__)) {
    return or__3608__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3608__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3608__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t9727 !== "undefined") {
  } else {
    cljs.core.async.t9727 = function(f, fn_handler, meta9728) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta9728 = meta9728;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t9727.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t9727.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t9727.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t9727.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9729) {
      var self__ = this;
      var _9729__$1 = this;
      return self__.meta9728;
    };
    cljs.core.async.t9727.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9729, meta9728__$1) {
      var self__ = this;
      var _9729__$1 = this;
      return new cljs.core.async.t9727(self__.f, self__.fn_handler, meta9728__$1);
    };
    cljs.core.async.t9727.cljs$lang$type = true;
    cljs.core.async.t9727.cljs$lang$ctorStr = "cljs.core.async/t9727";
    cljs.core.async.t9727.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t9727");
    };
    cljs.core.async.__GT_t9727 = function __GT_t9727(f__$1, fn_handler__$1, meta9728) {
      return new cljs.core.async.t9727(f__$1, fn_handler__$1, meta9728);
    };
  }
  return new cljs.core.async.t9727(f, fn_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__9731 = buff;
  if (G__9731) {
    var bit__4284__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3608__auto__ = bit__4284__auto__;
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        return G__9731.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__9731.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__9731);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__9731);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_9732 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_9732);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_9732, ret) {
          return function() {
            return fn1.call(null, val_9732);
          };
        }(val_9732, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4490__auto___9733 = n;
  var x_9734 = 0;
  while (true) {
    if (x_9734 < n__4490__auto___9733) {
      a[x_9734] = 0;
      var G__9735 = x_9734 + 1;
      x_9734 = G__9735;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__9736 = i + 1;
      i = G__9736;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t9740 !== "undefined") {
  } else {
    cljs.core.async.t9740 = function(flag, alt_flag, meta9741) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta9741 = meta9741;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t9740.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t9740.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t9740.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t9740.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_9742) {
        var self__ = this;
        var _9742__$1 = this;
        return self__.meta9741;
      };
    }(flag);
    cljs.core.async.t9740.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_9742, meta9741__$1) {
        var self__ = this;
        var _9742__$1 = this;
        return new cljs.core.async.t9740(self__.flag, self__.alt_flag, meta9741__$1);
      };
    }(flag);
    cljs.core.async.t9740.cljs$lang$type = true;
    cljs.core.async.t9740.cljs$lang$ctorStr = "cljs.core.async/t9740";
    cljs.core.async.t9740.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
        return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t9740");
      };
    }(flag);
    cljs.core.async.__GT_t9740 = function(flag) {
      return function __GT_t9740(flag__$1, alt_flag__$1, meta9741) {
        return new cljs.core.async.t9740(flag__$1, alt_flag__$1, meta9741);
      };
    }(flag);
  }
  return new cljs.core.async.t9740(flag, alt_flag, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 15, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 146, new cljs.core.Keyword(null, "column", "column", 2078222095), 5, new cljs.core.Keyword(null, "line", "line", 212345235), 141, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t9746 !== "undefined") {
  } else {
    cljs.core.async.t9746 = function(cb, flag, alt_handler, meta9747) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta9747 = meta9747;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t9746.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t9746.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t9746.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t9746.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9748) {
      var self__ = this;
      var _9748__$1 = this;
      return self__.meta9747;
    };
    cljs.core.async.t9746.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9748, meta9747__$1) {
      var self__ = this;
      var _9748__$1 = this;
      return new cljs.core.async.t9746(self__.cb, self__.flag, self__.alt_handler, meta9747__$1);
    };
    cljs.core.async.t9746.cljs$lang$type = true;
    cljs.core.async.t9746.cljs$lang$ctorStr = "cljs.core.async/t9746";
    cljs.core.async.t9746.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t9746");
    };
    cljs.core.async.__GT_t9746 = function __GT_t9746(cb__$1, flag__$1, alt_handler__$1, meta9747) {
      return new cljs.core.async.t9746(cb__$1, flag__$1, alt_handler__$1, meta9747);
    };
  }
  return new cljs.core.async.t9746(cb, flag, alt_handler, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 11, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 154, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 149, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__9749_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9749_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__9750_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9750_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3608__auto__ = wport;
            if (cljs.core.truth_(or__3608__auto__)) {
              return or__3608__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__9751 = i + 1;
          i = G__9751;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3608__auto__ = ret;
  if (cljs.core.truth_(or__3608__auto__)) {
    return or__3608__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3596__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3596__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3596__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__9752) {
    var map__9754 = p__9752;
    var map__9754__$1 = cljs.core.seq_QMARK_.call(null, map__9754) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9754) : map__9754;
    var opts = map__9754__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__9752 = null;
    if (arguments.length > 1) {
      p__9752 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__9752);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__9755) {
    var ports = cljs.core.first(arglist__9755);
    var p__9752 = cljs.core.rest(arglist__9755);
    return alts_BANG___delegate(ports, p__9752);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5809__auto___9850 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___9850) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___9850) {
            return function(state_9826) {
              var state_val_9827 = state_9826[1];
              if (state_val_9827 === 7) {
                var inst_9822 = state_9826[2];
                var state_9826__$1 = state_9826;
                var statearr_9828_9851 = state_9826__$1;
                statearr_9828_9851[2] = inst_9822;
                statearr_9828_9851[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_9827 === 1) {
                  var state_9826__$1 = state_9826;
                  var statearr_9829_9852 = state_9826__$1;
                  statearr_9829_9852[2] = null;
                  statearr_9829_9852[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_9827 === 4) {
                    var inst_9805 = state_9826[7];
                    var inst_9805__$1 = state_9826[2];
                    var inst_9806 = inst_9805__$1 == null;
                    var state_9826__$1 = function() {
                      var statearr_9830 = state_9826;
                      statearr_9830[7] = inst_9805__$1;
                      return statearr_9830;
                    }();
                    if (cljs.core.truth_(inst_9806)) {
                      var statearr_9831_9853 = state_9826__$1;
                      statearr_9831_9853[1] = 5;
                    } else {
                      var statearr_9832_9854 = state_9826__$1;
                      statearr_9832_9854[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_9827 === 13) {
                      var state_9826__$1 = state_9826;
                      var statearr_9833_9855 = state_9826__$1;
                      statearr_9833_9855[2] = null;
                      statearr_9833_9855[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_9827 === 6) {
                        var inst_9805 = state_9826[7];
                        var state_9826__$1 = state_9826;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9826__$1, 11, to, inst_9805);
                      } else {
                        if (state_val_9827 === 3) {
                          var inst_9824 = state_9826[2];
                          var state_9826__$1 = state_9826;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9826__$1, inst_9824);
                        } else {
                          if (state_val_9827 === 12) {
                            var state_9826__$1 = state_9826;
                            var statearr_9834_9856 = state_9826__$1;
                            statearr_9834_9856[2] = null;
                            statearr_9834_9856[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_9827 === 2) {
                              var state_9826__$1 = state_9826;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9826__$1, 4, from);
                            } else {
                              if (state_val_9827 === 11) {
                                var inst_9815 = state_9826[2];
                                var state_9826__$1 = state_9826;
                                if (cljs.core.truth_(inst_9815)) {
                                  var statearr_9835_9857 = state_9826__$1;
                                  statearr_9835_9857[1] = 12;
                                } else {
                                  var statearr_9836_9858 = state_9826__$1;
                                  statearr_9836_9858[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_9827 === 9) {
                                  var state_9826__$1 = state_9826;
                                  var statearr_9837_9859 = state_9826__$1;
                                  statearr_9837_9859[2] = null;
                                  statearr_9837_9859[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_9827 === 5) {
                                    var state_9826__$1 = state_9826;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_9838_9860 = state_9826__$1;
                                      statearr_9838_9860[1] = 8;
                                    } else {
                                      var statearr_9839_9861 = state_9826__$1;
                                      statearr_9839_9861[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_9827 === 14) {
                                      var inst_9820 = state_9826[2];
                                      var state_9826__$1 = state_9826;
                                      var statearr_9840_9862 = state_9826__$1;
                                      statearr_9840_9862[2] = inst_9820;
                                      statearr_9840_9862[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_9827 === 10) {
                                        var inst_9812 = state_9826[2];
                                        var state_9826__$1 = state_9826;
                                        var statearr_9841_9863 = state_9826__$1;
                                        statearr_9841_9863[2] = inst_9812;
                                        statearr_9841_9863[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_9827 === 8) {
                                          var inst_9809 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_9826__$1 = state_9826;
                                          var statearr_9842_9864 = state_9826__$1;
                                          statearr_9842_9864[2] = inst_9809;
                                          statearr_9842_9864[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___9850);
          return function(switch__5794__auto__, c__5809__auto___9850) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_9846 = [null, null, null, null, null, null, null, null];
                statearr_9846[0] = state_machine__5795__auto__;
                statearr_9846[1] = 1;
                return statearr_9846;
              };
              var state_machine__5795__auto____1 = function(state_9826) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_9826);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e9847) {
                      if (e9847 instanceof Object) {
                        var ex__5798__auto__ = e9847;
                        var statearr_9848_9865 = state_9826;
                        statearr_9848_9865[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9826);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e9847;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__9866 = state_9826;
                    state_9826 = G__9866;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_9826) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_9826);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___9850);
        }();
        var state__5811__auto__ = function() {
          var statearr_9849 = f__5810__auto__.call(null);
          statearr_9849[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___9850;
          return statearr_9849;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___9850));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__10050) {
      var vec__10051 = p__10050;
      var v = cljs.core.nth.call(null, vec__10051, 0, null);
      var p = cljs.core.nth.call(null, vec__10051, 1, null);
      var job = vec__10051;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__5809__auto___10233 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___10233, res, vec__10051, v, p, job, jobs, results) {
          return function() {
            var f__5810__auto__ = function() {
              var switch__5794__auto__ = function(c__5809__auto___10233, res, vec__10051, v, p, job, jobs, results) {
                return function(state_10056) {
                  var state_val_10057 = state_10056[1];
                  if (state_val_10057 === 2) {
                    var inst_10053 = state_10056[2];
                    var inst_10054 = cljs.core.async.close_BANG_.call(null, res);
                    var state_10056__$1 = function() {
                      var statearr_10058 = state_10056;
                      statearr_10058[7] = inst_10053;
                      return statearr_10058;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10056__$1, inst_10054);
                  } else {
                    if (state_val_10057 === 1) {
                      var state_10056__$1 = state_10056;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10056__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__5809__auto___10233, res, vec__10051, v, p, job, jobs, results);
              return function(switch__5794__auto__, c__5809__auto___10233, res, vec__10051, v, p, job, jobs, results) {
                return function() {
                  var state_machine__5795__auto__ = null;
                  var state_machine__5795__auto____0 = function() {
                    var statearr_10062 = [null, null, null, null, null, null, null, null];
                    statearr_10062[0] = state_machine__5795__auto__;
                    statearr_10062[1] = 1;
                    return statearr_10062;
                  };
                  var state_machine__5795__auto____1 = function(state_10056) {
                    while (true) {
                      var ret_value__5796__auto__ = function() {
                        try {
                          while (true) {
                            var result__5797__auto__ = switch__5794__auto__.call(null, state_10056);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__5797__auto__;
                            }
                            break;
                          }
                        } catch (e10063) {
                          if (e10063 instanceof Object) {
                            var ex__5798__auto__ = e10063;
                            var statearr_10064_10234 = state_10056;
                            statearr_10064_10234[5] = ex__5798__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10056);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e10063;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__10235 = state_10056;
                        state_10056 = G__10235;
                        continue;
                      } else {
                        return ret_value__5796__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__5795__auto__ = function(state_10056) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__5795__auto____0.call(this);
                      case 1:
                        return state_machine__5795__auto____1.call(this, state_10056);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
                  state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
                  return state_machine__5795__auto__;
                }();
              }(switch__5794__auto__, c__5809__auto___10233, res, vec__10051, v, p, job, jobs, results);
            }();
            var state__5811__auto__ = function() {
              var statearr_10065 = f__5810__auto__.call(null);
              statearr_10065[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___10233;
              return statearr_10065;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
          };
        }(c__5809__auto___10233, res, vec__10051, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__10066) {
      var vec__10067 = p__10066;
      var v = cljs.core.nth.call(null, vec__10067, 0, null);
      var p = cljs.core.nth.call(null, vec__10067, 1, null);
      var job = vec__10067;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4490__auto___10236 = n;
  var __10237 = 0;
  while (true) {
    if (__10237 < n__4490__auto___10236) {
      var G__10068_10238 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__10068_10238) {
        case "async":
          var c__5809__auto___10240 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__10237, c__5809__auto___10240, G__10068_10238, n__4490__auto___10236, jobs, results, process, async) {
            return function() {
              var f__5810__auto__ = function() {
                var switch__5794__auto__ = function(__10237, c__5809__auto___10240, G__10068_10238, n__4490__auto___10236, jobs, results, process, async) {
                  return function(state_10081) {
                    var state_val_10082 = state_10081[1];
                    if (state_val_10082 === 7) {
                      var inst_10077 = state_10081[2];
                      var state_10081__$1 = state_10081;
                      var statearr_10083_10241 = state_10081__$1;
                      statearr_10083_10241[2] = inst_10077;
                      statearr_10083_10241[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10082 === 6) {
                        var state_10081__$1 = state_10081;
                        var statearr_10084_10242 = state_10081__$1;
                        statearr_10084_10242[2] = null;
                        statearr_10084_10242[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10082 === 5) {
                          var state_10081__$1 = state_10081;
                          var statearr_10085_10243 = state_10081__$1;
                          statearr_10085_10243[2] = null;
                          statearr_10085_10243[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10082 === 4) {
                            var inst_10071 = state_10081[2];
                            var inst_10072 = async.call(null, inst_10071);
                            var state_10081__$1 = state_10081;
                            if (cljs.core.truth_(inst_10072)) {
                              var statearr_10086_10244 = state_10081__$1;
                              statearr_10086_10244[1] = 5;
                            } else {
                              var statearr_10087_10245 = state_10081__$1;
                              statearr_10087_10245[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10082 === 3) {
                              var inst_10079 = state_10081[2];
                              var state_10081__$1 = state_10081;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10081__$1, inst_10079);
                            } else {
                              if (state_val_10082 === 2) {
                                var state_10081__$1 = state_10081;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10081__$1, 4, jobs);
                              } else {
                                if (state_val_10082 === 1) {
                                  var state_10081__$1 = state_10081;
                                  var statearr_10088_10246 = state_10081__$1;
                                  statearr_10088_10246[2] = null;
                                  statearr_10088_10246[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__10237, c__5809__auto___10240, G__10068_10238, n__4490__auto___10236, jobs, results, process, async);
                return function(__10237, switch__5794__auto__, c__5809__auto___10240, G__10068_10238, n__4490__auto___10236, jobs, results, process, async) {
                  return function() {
                    var state_machine__5795__auto__ = null;
                    var state_machine__5795__auto____0 = function() {
                      var statearr_10092 = [null, null, null, null, null, null, null];
                      statearr_10092[0] = state_machine__5795__auto__;
                      statearr_10092[1] = 1;
                      return statearr_10092;
                    };
                    var state_machine__5795__auto____1 = function(state_10081) {
                      while (true) {
                        var ret_value__5796__auto__ = function() {
                          try {
                            while (true) {
                              var result__5797__auto__ = switch__5794__auto__.call(null, state_10081);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__5797__auto__;
                              }
                              break;
                            }
                          } catch (e10093) {
                            if (e10093 instanceof Object) {
                              var ex__5798__auto__ = e10093;
                              var statearr_10094_10247 = state_10081;
                              statearr_10094_10247[5] = ex__5798__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10081);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e10093;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__10248 = state_10081;
                          state_10081 = G__10248;
                          continue;
                        } else {
                          return ret_value__5796__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__5795__auto__ = function(state_10081) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__5795__auto____0.call(this);
                        case 1:
                          return state_machine__5795__auto____1.call(this, state_10081);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
                    state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
                    return state_machine__5795__auto__;
                  }();
                }(__10237, switch__5794__auto__, c__5809__auto___10240, G__10068_10238, n__4490__auto___10236, jobs, results, process, async);
              }();
              var state__5811__auto__ = function() {
                var statearr_10095 = f__5810__auto__.call(null);
                statearr_10095[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___10240;
                return statearr_10095;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
            };
          }(__10237, c__5809__auto___10240, G__10068_10238, n__4490__auto___10236, jobs, results, process, async));
          break;
        case "compute":
          var c__5809__auto___10249 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__10237, c__5809__auto___10249, G__10068_10238, n__4490__auto___10236, jobs, results, process, async) {
            return function() {
              var f__5810__auto__ = function() {
                var switch__5794__auto__ = function(__10237, c__5809__auto___10249, G__10068_10238, n__4490__auto___10236, jobs, results, process, async) {
                  return function(state_10108) {
                    var state_val_10109 = state_10108[1];
                    if (state_val_10109 === 7) {
                      var inst_10104 = state_10108[2];
                      var state_10108__$1 = state_10108;
                      var statearr_10110_10250 = state_10108__$1;
                      statearr_10110_10250[2] = inst_10104;
                      statearr_10110_10250[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10109 === 6) {
                        var state_10108__$1 = state_10108;
                        var statearr_10111_10251 = state_10108__$1;
                        statearr_10111_10251[2] = null;
                        statearr_10111_10251[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10109 === 5) {
                          var state_10108__$1 = state_10108;
                          var statearr_10112_10252 = state_10108__$1;
                          statearr_10112_10252[2] = null;
                          statearr_10112_10252[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10109 === 4) {
                            var inst_10098 = state_10108[2];
                            var inst_10099 = process.call(null, inst_10098);
                            var state_10108__$1 = state_10108;
                            if (cljs.core.truth_(inst_10099)) {
                              var statearr_10113_10253 = state_10108__$1;
                              statearr_10113_10253[1] = 5;
                            } else {
                              var statearr_10114_10254 = state_10108__$1;
                              statearr_10114_10254[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10109 === 3) {
                              var inst_10106 = state_10108[2];
                              var state_10108__$1 = state_10108;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10108__$1, inst_10106);
                            } else {
                              if (state_val_10109 === 2) {
                                var state_10108__$1 = state_10108;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10108__$1, 4, jobs);
                              } else {
                                if (state_val_10109 === 1) {
                                  var state_10108__$1 = state_10108;
                                  var statearr_10115_10255 = state_10108__$1;
                                  statearr_10115_10255[2] = null;
                                  statearr_10115_10255[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__10237, c__5809__auto___10249, G__10068_10238, n__4490__auto___10236, jobs, results, process, async);
                return function(__10237, switch__5794__auto__, c__5809__auto___10249, G__10068_10238, n__4490__auto___10236, jobs, results, process, async) {
                  return function() {
                    var state_machine__5795__auto__ = null;
                    var state_machine__5795__auto____0 = function() {
                      var statearr_10119 = [null, null, null, null, null, null, null];
                      statearr_10119[0] = state_machine__5795__auto__;
                      statearr_10119[1] = 1;
                      return statearr_10119;
                    };
                    var state_machine__5795__auto____1 = function(state_10108) {
                      while (true) {
                        var ret_value__5796__auto__ = function() {
                          try {
                            while (true) {
                              var result__5797__auto__ = switch__5794__auto__.call(null, state_10108);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__5797__auto__;
                              }
                              break;
                            }
                          } catch (e10120) {
                            if (e10120 instanceof Object) {
                              var ex__5798__auto__ = e10120;
                              var statearr_10121_10256 = state_10108;
                              statearr_10121_10256[5] = ex__5798__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10108);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e10120;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__10257 = state_10108;
                          state_10108 = G__10257;
                          continue;
                        } else {
                          return ret_value__5796__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__5795__auto__ = function(state_10108) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__5795__auto____0.call(this);
                        case 1:
                          return state_machine__5795__auto____1.call(this, state_10108);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
                    state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
                    return state_machine__5795__auto__;
                  }();
                }(__10237, switch__5794__auto__, c__5809__auto___10249, G__10068_10238, n__4490__auto___10236, jobs, results, process, async);
              }();
              var state__5811__auto__ = function() {
                var statearr_10122 = f__5810__auto__.call(null);
                statearr_10122[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___10249;
                return statearr_10122;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
            };
          }(__10237, c__5809__auto___10249, G__10068_10238, n__4490__auto___10236, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__10258 = __10237 + 1;
      __10237 = G__10258;
      continue;
    } else {
    }
    break;
  }
  var c__5809__auto___10259 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___10259, jobs, results, process, async) {
    return function() {
      var f__5810__auto__ = function() {
        var switch__5794__auto__ = function(c__5809__auto___10259, jobs, results, process, async) {
          return function(state_10144) {
            var state_val_10145 = state_10144[1];
            if (state_val_10145 === 9) {
              var inst_10137 = state_10144[2];
              var state_10144__$1 = function() {
                var statearr_10146 = state_10144;
                statearr_10146[7] = inst_10137;
                return statearr_10146;
              }();
              var statearr_10147_10260 = state_10144__$1;
              statearr_10147_10260[2] = null;
              statearr_10147_10260[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10145 === 8) {
                var inst_10130 = state_10144[8];
                var inst_10135 = state_10144[2];
                var state_10144__$1 = function() {
                  var statearr_10148 = state_10144;
                  statearr_10148[9] = inst_10135;
                  return statearr_10148;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10144__$1, 9, results, inst_10130);
              } else {
                if (state_val_10145 === 7) {
                  var inst_10140 = state_10144[2];
                  var state_10144__$1 = state_10144;
                  var statearr_10149_10261 = state_10144__$1;
                  statearr_10149_10261[2] = inst_10140;
                  statearr_10149_10261[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10145 === 6) {
                    var inst_10125 = state_10144[10];
                    var inst_10130 = state_10144[8];
                    var inst_10130__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_10131 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_10132 = [inst_10125, inst_10130__$1];
                    var inst_10133 = new cljs.core.PersistentVector(null, 2, 5, inst_10131, inst_10132, null);
                    var state_10144__$1 = function() {
                      var statearr_10150 = state_10144;
                      statearr_10150[8] = inst_10130__$1;
                      return statearr_10150;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10144__$1, 8, jobs, inst_10133);
                  } else {
                    if (state_val_10145 === 5) {
                      var inst_10128 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_10144__$1 = state_10144;
                      var statearr_10151_10262 = state_10144__$1;
                      statearr_10151_10262[2] = inst_10128;
                      statearr_10151_10262[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10145 === 4) {
                        var inst_10125 = state_10144[10];
                        var inst_10125__$1 = state_10144[2];
                        var inst_10126 = inst_10125__$1 == null;
                        var state_10144__$1 = function() {
                          var statearr_10152 = state_10144;
                          statearr_10152[10] = inst_10125__$1;
                          return statearr_10152;
                        }();
                        if (cljs.core.truth_(inst_10126)) {
                          var statearr_10153_10263 = state_10144__$1;
                          statearr_10153_10263[1] = 5;
                        } else {
                          var statearr_10154_10264 = state_10144__$1;
                          statearr_10154_10264[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10145 === 3) {
                          var inst_10142 = state_10144[2];
                          var state_10144__$1 = state_10144;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10144__$1, inst_10142);
                        } else {
                          if (state_val_10145 === 2) {
                            var state_10144__$1 = state_10144;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10144__$1, 4, from);
                          } else {
                            if (state_val_10145 === 1) {
                              var state_10144__$1 = state_10144;
                              var statearr_10155_10265 = state_10144__$1;
                              statearr_10155_10265[2] = null;
                              statearr_10155_10265[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5809__auto___10259, jobs, results, process, async);
        return function(switch__5794__auto__, c__5809__auto___10259, jobs, results, process, async) {
          return function() {
            var state_machine__5795__auto__ = null;
            var state_machine__5795__auto____0 = function() {
              var statearr_10159 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_10159[0] = state_machine__5795__auto__;
              statearr_10159[1] = 1;
              return statearr_10159;
            };
            var state_machine__5795__auto____1 = function(state_10144) {
              while (true) {
                var ret_value__5796__auto__ = function() {
                  try {
                    while (true) {
                      var result__5797__auto__ = switch__5794__auto__.call(null, state_10144);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5797__auto__;
                      }
                      break;
                    }
                  } catch (e10160) {
                    if (e10160 instanceof Object) {
                      var ex__5798__auto__ = e10160;
                      var statearr_10161_10266 = state_10144;
                      statearr_10161_10266[5] = ex__5798__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10144);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10160;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10267 = state_10144;
                  state_10144 = G__10267;
                  continue;
                } else {
                  return ret_value__5796__auto__;
                }
                break;
              }
            };
            state_machine__5795__auto__ = function(state_10144) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5795__auto____0.call(this);
                case 1:
                  return state_machine__5795__auto____1.call(this, state_10144);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
            return state_machine__5795__auto__;
          }();
        }(switch__5794__auto__, c__5809__auto___10259, jobs, results, process, async);
      }();
      var state__5811__auto__ = function() {
        var statearr_10162 = f__5810__auto__.call(null);
        statearr_10162[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___10259;
        return statearr_10162;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
    };
  }(c__5809__auto___10259, jobs, results, process, async));
  var c__5809__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto__, jobs, results, process, async) {
    return function() {
      var f__5810__auto__ = function() {
        var switch__5794__auto__ = function(c__5809__auto__, jobs, results, process, async) {
          return function(state_10200) {
            var state_val_10201 = state_10200[1];
            if (state_val_10201 === 7) {
              var inst_10196 = state_10200[2];
              var state_10200__$1 = state_10200;
              var statearr_10202_10268 = state_10200__$1;
              statearr_10202_10268[2] = inst_10196;
              statearr_10202_10268[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10201 === 20) {
                var state_10200__$1 = state_10200;
                var statearr_10203_10269 = state_10200__$1;
                statearr_10203_10269[2] = null;
                statearr_10203_10269[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10201 === 1) {
                  var state_10200__$1 = state_10200;
                  var statearr_10204_10270 = state_10200__$1;
                  statearr_10204_10270[2] = null;
                  statearr_10204_10270[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10201 === 4) {
                    var inst_10165 = state_10200[7];
                    var inst_10165__$1 = state_10200[2];
                    var inst_10166 = inst_10165__$1 == null;
                    var state_10200__$1 = function() {
                      var statearr_10205 = state_10200;
                      statearr_10205[7] = inst_10165__$1;
                      return statearr_10205;
                    }();
                    if (cljs.core.truth_(inst_10166)) {
                      var statearr_10206_10271 = state_10200__$1;
                      statearr_10206_10271[1] = 5;
                    } else {
                      var statearr_10207_10272 = state_10200__$1;
                      statearr_10207_10272[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10201 === 15) {
                      var inst_10178 = state_10200[8];
                      var state_10200__$1 = state_10200;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10200__$1, 18, to, inst_10178);
                    } else {
                      if (state_val_10201 === 21) {
                        var inst_10191 = state_10200[2];
                        var state_10200__$1 = state_10200;
                        var statearr_10208_10273 = state_10200__$1;
                        statearr_10208_10273[2] = inst_10191;
                        statearr_10208_10273[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10201 === 13) {
                          var inst_10193 = state_10200[2];
                          var state_10200__$1 = function() {
                            var statearr_10209 = state_10200;
                            statearr_10209[9] = inst_10193;
                            return statearr_10209;
                          }();
                          var statearr_10210_10274 = state_10200__$1;
                          statearr_10210_10274[2] = null;
                          statearr_10210_10274[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10201 === 6) {
                            var inst_10165 = state_10200[7];
                            var state_10200__$1 = state_10200;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10200__$1, 11, inst_10165);
                          } else {
                            if (state_val_10201 === 17) {
                              var inst_10186 = state_10200[2];
                              var state_10200__$1 = state_10200;
                              if (cljs.core.truth_(inst_10186)) {
                                var statearr_10211_10275 = state_10200__$1;
                                statearr_10211_10275[1] = 19;
                              } else {
                                var statearr_10212_10276 = state_10200__$1;
                                statearr_10212_10276[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10201 === 3) {
                                var inst_10198 = state_10200[2];
                                var state_10200__$1 = state_10200;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10200__$1, inst_10198);
                              } else {
                                if (state_val_10201 === 12) {
                                  var inst_10175 = state_10200[10];
                                  var state_10200__$1 = state_10200;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10200__$1, 14, inst_10175);
                                } else {
                                  if (state_val_10201 === 2) {
                                    var state_10200__$1 = state_10200;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10200__$1, 4, results);
                                  } else {
                                    if (state_val_10201 === 19) {
                                      var state_10200__$1 = state_10200;
                                      var statearr_10213_10277 = state_10200__$1;
                                      statearr_10213_10277[2] = null;
                                      statearr_10213_10277[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10201 === 11) {
                                        var inst_10175 = state_10200[2];
                                        var state_10200__$1 = function() {
                                          var statearr_10214 = state_10200;
                                          statearr_10214[10] = inst_10175;
                                          return statearr_10214;
                                        }();
                                        var statearr_10215_10278 = state_10200__$1;
                                        statearr_10215_10278[2] = null;
                                        statearr_10215_10278[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10201 === 9) {
                                          var state_10200__$1 = state_10200;
                                          var statearr_10216_10279 = state_10200__$1;
                                          statearr_10216_10279[2] = null;
                                          statearr_10216_10279[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_10201 === 5) {
                                            var state_10200__$1 = state_10200;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_10217_10280 = state_10200__$1;
                                              statearr_10217_10280[1] = 8;
                                            } else {
                                              var statearr_10218_10281 = state_10200__$1;
                                              statearr_10218_10281[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_10201 === 14) {
                                              var inst_10180 = state_10200[11];
                                              var inst_10178 = state_10200[8];
                                              var inst_10178__$1 = state_10200[2];
                                              var inst_10179 = inst_10178__$1 == null;
                                              var inst_10180__$1 = cljs.core.not.call(null, inst_10179);
                                              var state_10200__$1 = function() {
                                                var statearr_10219 = state_10200;
                                                statearr_10219[11] = inst_10180__$1;
                                                statearr_10219[8] = inst_10178__$1;
                                                return statearr_10219;
                                              }();
                                              if (inst_10180__$1) {
                                                var statearr_10220_10282 = state_10200__$1;
                                                statearr_10220_10282[1] = 15;
                                              } else {
                                                var statearr_10221_10283 = state_10200__$1;
                                                statearr_10221_10283[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_10201 === 16) {
                                                var inst_10180 = state_10200[11];
                                                var state_10200__$1 = state_10200;
                                                var statearr_10222_10284 = state_10200__$1;
                                                statearr_10222_10284[2] = inst_10180;
                                                statearr_10222_10284[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_10201 === 10) {
                                                  var inst_10172 = state_10200[2];
                                                  var state_10200__$1 = state_10200;
                                                  var statearr_10223_10285 = state_10200__$1;
                                                  statearr_10223_10285[2] = inst_10172;
                                                  statearr_10223_10285[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_10201 === 18) {
                                                    var inst_10183 = state_10200[2];
                                                    var state_10200__$1 = state_10200;
                                                    var statearr_10224_10286 = state_10200__$1;
                                                    statearr_10224_10286[2] = inst_10183;
                                                    statearr_10224_10286[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_10201 === 8) {
                                                      var inst_10169 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_10200__$1 = state_10200;
                                                      var statearr_10225_10287 = state_10200__$1;
                                                      statearr_10225_10287[2] = inst_10169;
                                                      statearr_10225_10287[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5809__auto__, jobs, results, process, async);
        return function(switch__5794__auto__, c__5809__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__5795__auto__ = null;
            var state_machine__5795__auto____0 = function() {
              var statearr_10229 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_10229[0] = state_machine__5795__auto__;
              statearr_10229[1] = 1;
              return statearr_10229;
            };
            var state_machine__5795__auto____1 = function(state_10200) {
              while (true) {
                var ret_value__5796__auto__ = function() {
                  try {
                    while (true) {
                      var result__5797__auto__ = switch__5794__auto__.call(null, state_10200);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5797__auto__;
                      }
                      break;
                    }
                  } catch (e10230) {
                    if (e10230 instanceof Object) {
                      var ex__5798__auto__ = e10230;
                      var statearr_10231_10288 = state_10200;
                      statearr_10231_10288[5] = ex__5798__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10200);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10230;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10289 = state_10200;
                  state_10200 = G__10289;
                  continue;
                } else {
                  return ret_value__5796__auto__;
                }
                break;
              }
            };
            state_machine__5795__auto__ = function(state_10200) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5795__auto____0.call(this);
                case 1:
                  return state_machine__5795__auto____1.call(this, state_10200);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
            return state_machine__5795__auto__;
          }();
        }(switch__5794__auto__, c__5809__auto__, jobs, results, process, async);
      }();
      var state__5811__auto__ = function() {
        var statearr_10232 = f__5810__auto__.call(null);
        statearr_10232[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto__;
        return statearr_10232;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
    };
  }(c__5809__auto__, jobs, results, process, async));
  return c__5809__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5809__auto___10390 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___10390, tc, fc) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___10390, tc, fc) {
            return function(state_10365) {
              var state_val_10366 = state_10365[1];
              if (state_val_10366 === 7) {
                var inst_10361 = state_10365[2];
                var state_10365__$1 = state_10365;
                var statearr_10367_10391 = state_10365__$1;
                statearr_10367_10391[2] = inst_10361;
                statearr_10367_10391[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10366 === 1) {
                  var state_10365__$1 = state_10365;
                  var statearr_10368_10392 = state_10365__$1;
                  statearr_10368_10392[2] = null;
                  statearr_10368_10392[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10366 === 4) {
                    var inst_10342 = state_10365[7];
                    var inst_10342__$1 = state_10365[2];
                    var inst_10343 = inst_10342__$1 == null;
                    var state_10365__$1 = function() {
                      var statearr_10369 = state_10365;
                      statearr_10369[7] = inst_10342__$1;
                      return statearr_10369;
                    }();
                    if (cljs.core.truth_(inst_10343)) {
                      var statearr_10370_10393 = state_10365__$1;
                      statearr_10370_10393[1] = 5;
                    } else {
                      var statearr_10371_10394 = state_10365__$1;
                      statearr_10371_10394[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10366 === 13) {
                      var state_10365__$1 = state_10365;
                      var statearr_10372_10395 = state_10365__$1;
                      statearr_10372_10395[2] = null;
                      statearr_10372_10395[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10366 === 6) {
                        var inst_10342 = state_10365[7];
                        var inst_10348 = p.call(null, inst_10342);
                        var state_10365__$1 = state_10365;
                        if (cljs.core.truth_(inst_10348)) {
                          var statearr_10373_10396 = state_10365__$1;
                          statearr_10373_10396[1] = 9;
                        } else {
                          var statearr_10374_10397 = state_10365__$1;
                          statearr_10374_10397[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10366 === 3) {
                          var inst_10363 = state_10365[2];
                          var state_10365__$1 = state_10365;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10365__$1, inst_10363);
                        } else {
                          if (state_val_10366 === 12) {
                            var state_10365__$1 = state_10365;
                            var statearr_10375_10398 = state_10365__$1;
                            statearr_10375_10398[2] = null;
                            statearr_10375_10398[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10366 === 2) {
                              var state_10365__$1 = state_10365;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10365__$1, 4, ch);
                            } else {
                              if (state_val_10366 === 11) {
                                var inst_10342 = state_10365[7];
                                var inst_10352 = state_10365[2];
                                var state_10365__$1 = state_10365;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10365__$1, 8, inst_10352, inst_10342);
                              } else {
                                if (state_val_10366 === 9) {
                                  var state_10365__$1 = state_10365;
                                  var statearr_10376_10399 = state_10365__$1;
                                  statearr_10376_10399[2] = tc;
                                  statearr_10376_10399[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10366 === 5) {
                                    var inst_10345 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_10346 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_10365__$1 = function() {
                                      var statearr_10377 = state_10365;
                                      statearr_10377[8] = inst_10345;
                                      return statearr_10377;
                                    }();
                                    var statearr_10378_10400 = state_10365__$1;
                                    statearr_10378_10400[2] = inst_10346;
                                    statearr_10378_10400[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10366 === 14) {
                                      var inst_10359 = state_10365[2];
                                      var state_10365__$1 = state_10365;
                                      var statearr_10379_10401 = state_10365__$1;
                                      statearr_10379_10401[2] = inst_10359;
                                      statearr_10379_10401[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10366 === 10) {
                                        var state_10365__$1 = state_10365;
                                        var statearr_10380_10402 = state_10365__$1;
                                        statearr_10380_10402[2] = fc;
                                        statearr_10380_10402[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10366 === 8) {
                                          var inst_10354 = state_10365[2];
                                          var state_10365__$1 = state_10365;
                                          if (cljs.core.truth_(inst_10354)) {
                                            var statearr_10381_10403 = state_10365__$1;
                                            statearr_10381_10403[1] = 12;
                                          } else {
                                            var statearr_10382_10404 = state_10365__$1;
                                            statearr_10382_10404[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___10390, tc, fc);
          return function(switch__5794__auto__, c__5809__auto___10390, tc, fc) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_10386 = [null, null, null, null, null, null, null, null, null];
                statearr_10386[0] = state_machine__5795__auto__;
                statearr_10386[1] = 1;
                return statearr_10386;
              };
              var state_machine__5795__auto____1 = function(state_10365) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_10365);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e10387) {
                      if (e10387 instanceof Object) {
                        var ex__5798__auto__ = e10387;
                        var statearr_10388_10405 = state_10365;
                        statearr_10388_10405[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10365);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e10387;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__10406 = state_10365;
                    state_10365 = G__10406;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_10365) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_10365);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___10390, tc, fc);
        }();
        var state__5811__auto__ = function() {
          var statearr_10389 = f__5810__auto__.call(null);
          statearr_10389[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___10390;
          return statearr_10389;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___10390, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5809__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto__) {
    return function() {
      var f__5810__auto__ = function() {
        var switch__5794__auto__ = function(c__5809__auto__) {
          return function(state_10453) {
            var state_val_10454 = state_10453[1];
            if (state_val_10454 === 7) {
              var inst_10449 = state_10453[2];
              var state_10453__$1 = state_10453;
              var statearr_10455_10471 = state_10453__$1;
              statearr_10455_10471[2] = inst_10449;
              statearr_10455_10471[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10454 === 6) {
                var inst_10439 = state_10453[7];
                var inst_10442 = state_10453[8];
                var inst_10446 = f.call(null, inst_10439, inst_10442);
                var inst_10439__$1 = inst_10446;
                var state_10453__$1 = function() {
                  var statearr_10456 = state_10453;
                  statearr_10456[7] = inst_10439__$1;
                  return statearr_10456;
                }();
                var statearr_10457_10472 = state_10453__$1;
                statearr_10457_10472[2] = null;
                statearr_10457_10472[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10454 === 5) {
                  var inst_10439 = state_10453[7];
                  var state_10453__$1 = state_10453;
                  var statearr_10458_10473 = state_10453__$1;
                  statearr_10458_10473[2] = inst_10439;
                  statearr_10458_10473[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10454 === 4) {
                    var inst_10442 = state_10453[8];
                    var inst_10442__$1 = state_10453[2];
                    var inst_10443 = inst_10442__$1 == null;
                    var state_10453__$1 = function() {
                      var statearr_10459 = state_10453;
                      statearr_10459[8] = inst_10442__$1;
                      return statearr_10459;
                    }();
                    if (cljs.core.truth_(inst_10443)) {
                      var statearr_10460_10474 = state_10453__$1;
                      statearr_10460_10474[1] = 5;
                    } else {
                      var statearr_10461_10475 = state_10453__$1;
                      statearr_10461_10475[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10454 === 3) {
                      var inst_10451 = state_10453[2];
                      var state_10453__$1 = state_10453;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10453__$1, inst_10451);
                    } else {
                      if (state_val_10454 === 2) {
                        var state_10453__$1 = state_10453;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10453__$1, 4, ch);
                      } else {
                        if (state_val_10454 === 1) {
                          var inst_10439 = init;
                          var state_10453__$1 = function() {
                            var statearr_10462 = state_10453;
                            statearr_10462[7] = inst_10439;
                            return statearr_10462;
                          }();
                          var statearr_10463_10476 = state_10453__$1;
                          statearr_10463_10476[2] = null;
                          statearr_10463_10476[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5809__auto__);
        return function(switch__5794__auto__, c__5809__auto__) {
          return function() {
            var state_machine__5795__auto__ = null;
            var state_machine__5795__auto____0 = function() {
              var statearr_10467 = [null, null, null, null, null, null, null, null, null];
              statearr_10467[0] = state_machine__5795__auto__;
              statearr_10467[1] = 1;
              return statearr_10467;
            };
            var state_machine__5795__auto____1 = function(state_10453) {
              while (true) {
                var ret_value__5796__auto__ = function() {
                  try {
                    while (true) {
                      var result__5797__auto__ = switch__5794__auto__.call(null, state_10453);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5797__auto__;
                      }
                      break;
                    }
                  } catch (e10468) {
                    if (e10468 instanceof Object) {
                      var ex__5798__auto__ = e10468;
                      var statearr_10469_10477 = state_10453;
                      statearr_10469_10477[5] = ex__5798__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10453);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10468;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10478 = state_10453;
                  state_10453 = G__10478;
                  continue;
                } else {
                  return ret_value__5796__auto__;
                }
                break;
              }
            };
            state_machine__5795__auto__ = function(state_10453) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5795__auto____0.call(this);
                case 1:
                  return state_machine__5795__auto____1.call(this, state_10453);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
            return state_machine__5795__auto__;
          }();
        }(switch__5794__auto__, c__5809__auto__);
      }();
      var state__5811__auto__ = function() {
        var statearr_10470 = f__5810__auto__.call(null);
        statearr_10470[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto__;
        return statearr_10470;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
    };
  }(c__5809__auto__));
  return c__5809__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5809__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto__) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto__) {
            return function(state_10552) {
              var state_val_10553 = state_10552[1];
              if (state_val_10553 === 7) {
                var inst_10534 = state_10552[2];
                var state_10552__$1 = state_10552;
                var statearr_10554_10577 = state_10552__$1;
                statearr_10554_10577[2] = inst_10534;
                statearr_10554_10577[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10553 === 1) {
                  var inst_10528 = cljs.core.seq.call(null, coll);
                  var inst_10529 = inst_10528;
                  var state_10552__$1 = function() {
                    var statearr_10555 = state_10552;
                    statearr_10555[7] = inst_10529;
                    return statearr_10555;
                  }();
                  var statearr_10556_10578 = state_10552__$1;
                  statearr_10556_10578[2] = null;
                  statearr_10556_10578[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10553 === 4) {
                    var inst_10529 = state_10552[7];
                    var inst_10532 = cljs.core.first.call(null, inst_10529);
                    var state_10552__$1 = state_10552;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10552__$1, 7, ch, inst_10532);
                  } else {
                    if (state_val_10553 === 13) {
                      var inst_10546 = state_10552[2];
                      var state_10552__$1 = state_10552;
                      var statearr_10557_10579 = state_10552__$1;
                      statearr_10557_10579[2] = inst_10546;
                      statearr_10557_10579[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10553 === 6) {
                        var inst_10537 = state_10552[2];
                        var state_10552__$1 = state_10552;
                        if (cljs.core.truth_(inst_10537)) {
                          var statearr_10558_10580 = state_10552__$1;
                          statearr_10558_10580[1] = 8;
                        } else {
                          var statearr_10559_10581 = state_10552__$1;
                          statearr_10559_10581[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10553 === 3) {
                          var inst_10550 = state_10552[2];
                          var state_10552__$1 = state_10552;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10552__$1, inst_10550);
                        } else {
                          if (state_val_10553 === 12) {
                            var state_10552__$1 = state_10552;
                            var statearr_10560_10582 = state_10552__$1;
                            statearr_10560_10582[2] = null;
                            statearr_10560_10582[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10553 === 2) {
                              var inst_10529 = state_10552[7];
                              var state_10552__$1 = state_10552;
                              if (cljs.core.truth_(inst_10529)) {
                                var statearr_10561_10583 = state_10552__$1;
                                statearr_10561_10583[1] = 4;
                              } else {
                                var statearr_10562_10584 = state_10552__$1;
                                statearr_10562_10584[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10553 === 11) {
                                var inst_10543 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_10552__$1 = state_10552;
                                var statearr_10563_10585 = state_10552__$1;
                                statearr_10563_10585[2] = inst_10543;
                                statearr_10563_10585[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10553 === 9) {
                                  var state_10552__$1 = state_10552;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_10564_10586 = state_10552__$1;
                                    statearr_10564_10586[1] = 11;
                                  } else {
                                    var statearr_10565_10587 = state_10552__$1;
                                    statearr_10565_10587[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10553 === 5) {
                                    var inst_10529 = state_10552[7];
                                    var state_10552__$1 = state_10552;
                                    var statearr_10566_10588 = state_10552__$1;
                                    statearr_10566_10588[2] = inst_10529;
                                    statearr_10566_10588[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10553 === 10) {
                                      var inst_10548 = state_10552[2];
                                      var state_10552__$1 = state_10552;
                                      var statearr_10567_10589 = state_10552__$1;
                                      statearr_10567_10589[2] = inst_10548;
                                      statearr_10567_10589[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10553 === 8) {
                                        var inst_10529 = state_10552[7];
                                        var inst_10539 = cljs.core.next.call(null, inst_10529);
                                        var inst_10529__$1 = inst_10539;
                                        var state_10552__$1 = function() {
                                          var statearr_10568 = state_10552;
                                          statearr_10568[7] = inst_10529__$1;
                                          return statearr_10568;
                                        }();
                                        var statearr_10569_10590 = state_10552__$1;
                                        statearr_10569_10590[2] = null;
                                        statearr_10569_10590[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto__);
          return function(switch__5794__auto__, c__5809__auto__) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_10573 = [null, null, null, null, null, null, null, null];
                statearr_10573[0] = state_machine__5795__auto__;
                statearr_10573[1] = 1;
                return statearr_10573;
              };
              var state_machine__5795__auto____1 = function(state_10552) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_10552);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e10574) {
                      if (e10574 instanceof Object) {
                        var ex__5798__auto__ = e10574;
                        var statearr_10575_10591 = state_10552;
                        statearr_10575_10591[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10552);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e10574;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__10592 = state_10552;
                    state_10552 = G__10592;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_10552) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_10552);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto__);
        }();
        var state__5811__auto__ = function() {
          var statearr_10576 = f__5810__auto__.call(null);
          statearr_10576[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto__;
          return statearr_10576;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto__));
    return c__5809__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj10594 = {};
  return obj10594;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3596__auto__ = _;
    if (and__3596__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4247__auto__ = _ == null ? null : _;
    return function() {
      var or__3608__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj10596 = {};
  return obj10596;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3596__auto__ = m;
    if (and__3596__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4247__auto__ = m == null ? null : m;
    return function() {
      var or__3608__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3596__auto__ = m;
    if (and__3596__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4247__auto__ = m == null ? null : m;
    return function() {
      var or__3608__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3596__auto__ = m;
    if (and__3596__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4247__auto__ = m == null ? null : m;
    return function() {
      var or__3608__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t10818 !== "undefined") {
    } else {
      cljs.core.async.t10818 = function(cs, ch, mult, meta10819) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta10819 = meta10819;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t10818.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t10818.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t10818.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t10818.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t10818.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t10818.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t10818.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_10820) {
          var self__ = this;
          var _10820__$1 = this;
          return self__.meta10819;
        };
      }(cs);
      cljs.core.async.t10818.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_10820, meta10819__$1) {
          var self__ = this;
          var _10820__$1 = this;
          return new cljs.core.async.t10818(self__.cs, self__.ch, self__.mult, meta10819__$1);
        };
      }(cs);
      cljs.core.async.t10818.cljs$lang$type = true;
      cljs.core.async.t10818.cljs$lang$ctorStr = "cljs.core.async/t10818";
      cljs.core.async.t10818.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
          return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t10818");
        };
      }(cs);
      cljs.core.async.__GT_t10818 = function(cs) {
        return function __GT_t10818(cs__$1, ch__$1, mult__$1, meta10819) {
          return new cljs.core.async.t10818(cs__$1, ch__$1, mult__$1, meta10819);
        };
      }(cs);
    }
    return new cljs.core.async.t10818(cs, ch, mult, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 397, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 390, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
    null));
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__5809__auto___11039 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___11039, cs, m, dchan, dctr, done) {
    return function() {
      var f__5810__auto__ = function() {
        var switch__5794__auto__ = function(c__5809__auto___11039, cs, m, dchan, dctr, done) {
          return function(state_10951) {
            var state_val_10952 = state_10951[1];
            if (state_val_10952 === 7) {
              var inst_10947 = state_10951[2];
              var state_10951__$1 = state_10951;
              var statearr_10953_11040 = state_10951__$1;
              statearr_10953_11040[2] = inst_10947;
              statearr_10953_11040[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10952 === 20) {
                var inst_10852 = state_10951[7];
                var inst_10862 = cljs.core.first.call(null, inst_10852);
                var inst_10863 = cljs.core.nth.call(null, inst_10862, 0, null);
                var inst_10864 = cljs.core.nth.call(null, inst_10862, 1, null);
                var state_10951__$1 = function() {
                  var statearr_10954 = state_10951;
                  statearr_10954[8] = inst_10863;
                  return statearr_10954;
                }();
                if (cljs.core.truth_(inst_10864)) {
                  var statearr_10955_11041 = state_10951__$1;
                  statearr_10955_11041[1] = 22;
                } else {
                  var statearr_10956_11042 = state_10951__$1;
                  statearr_10956_11042[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10952 === 27) {
                  var inst_10899 = state_10951[9];
                  var inst_10892 = state_10951[10];
                  var inst_10823 = state_10951[11];
                  var inst_10894 = state_10951[12];
                  var inst_10899__$1 = cljs.core._nth.call(null, inst_10892, inst_10894);
                  var inst_10900 = cljs.core.async.put_BANG_.call(null, inst_10899__$1, inst_10823, done);
                  var state_10951__$1 = function() {
                    var statearr_10957 = state_10951;
                    statearr_10957[9] = inst_10899__$1;
                    return statearr_10957;
                  }();
                  if (cljs.core.truth_(inst_10900)) {
                    var statearr_10958_11043 = state_10951__$1;
                    statearr_10958_11043[1] = 30;
                  } else {
                    var statearr_10959_11044 = state_10951__$1;
                    statearr_10959_11044[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10952 === 1) {
                    var state_10951__$1 = state_10951;
                    var statearr_10960_11045 = state_10951__$1;
                    statearr_10960_11045[2] = null;
                    statearr_10960_11045[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10952 === 24) {
                      var inst_10852 = state_10951[7];
                      var inst_10869 = state_10951[2];
                      var inst_10870 = cljs.core.next.call(null, inst_10852);
                      var inst_10832 = inst_10870;
                      var inst_10833 = null;
                      var inst_10834 = 0;
                      var inst_10835 = 0;
                      var state_10951__$1 = function() {
                        var statearr_10961 = state_10951;
                        statearr_10961[13] = inst_10835;
                        statearr_10961[14] = inst_10834;
                        statearr_10961[15] = inst_10832;
                        statearr_10961[16] = inst_10833;
                        statearr_10961[17] = inst_10869;
                        return statearr_10961;
                      }();
                      var statearr_10962_11046 = state_10951__$1;
                      statearr_10962_11046[2] = null;
                      statearr_10962_11046[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10952 === 39) {
                        var state_10951__$1 = state_10951;
                        var statearr_10966_11047 = state_10951__$1;
                        statearr_10966_11047[2] = null;
                        statearr_10966_11047[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10952 === 4) {
                          var inst_10823 = state_10951[11];
                          var inst_10823__$1 = state_10951[2];
                          var inst_10824 = inst_10823__$1 == null;
                          var state_10951__$1 = function() {
                            var statearr_10967 = state_10951;
                            statearr_10967[11] = inst_10823__$1;
                            return statearr_10967;
                          }();
                          if (cljs.core.truth_(inst_10824)) {
                            var statearr_10968_11048 = state_10951__$1;
                            statearr_10968_11048[1] = 5;
                          } else {
                            var statearr_10969_11049 = state_10951__$1;
                            statearr_10969_11049[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10952 === 15) {
                            var inst_10835 = state_10951[13];
                            var inst_10834 = state_10951[14];
                            var inst_10832 = state_10951[15];
                            var inst_10833 = state_10951[16];
                            var inst_10848 = state_10951[2];
                            var inst_10849 = inst_10835 + 1;
                            var tmp10963 = inst_10834;
                            var tmp10964 = inst_10832;
                            var tmp10965 = inst_10833;
                            var inst_10832__$1 = tmp10964;
                            var inst_10833__$1 = tmp10965;
                            var inst_10834__$1 = tmp10963;
                            var inst_10835__$1 = inst_10849;
                            var state_10951__$1 = function() {
                              var statearr_10970 = state_10951;
                              statearr_10970[13] = inst_10835__$1;
                              statearr_10970[18] = inst_10848;
                              statearr_10970[14] = inst_10834__$1;
                              statearr_10970[15] = inst_10832__$1;
                              statearr_10970[16] = inst_10833__$1;
                              return statearr_10970;
                            }();
                            var statearr_10971_11050 = state_10951__$1;
                            statearr_10971_11050[2] = null;
                            statearr_10971_11050[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10952 === 21) {
                              var inst_10873 = state_10951[2];
                              var state_10951__$1 = state_10951;
                              var statearr_10975_11051 = state_10951__$1;
                              statearr_10975_11051[2] = inst_10873;
                              statearr_10975_11051[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10952 === 31) {
                                var inst_10899 = state_10951[9];
                                var inst_10903 = done.call(null, null);
                                var inst_10904 = cljs.core.async.untap_STAR_.call(null, m, inst_10899);
                                var state_10951__$1 = function() {
                                  var statearr_10976 = state_10951;
                                  statearr_10976[19] = inst_10903;
                                  return statearr_10976;
                                }();
                                var statearr_10977_11052 = state_10951__$1;
                                statearr_10977_11052[2] = inst_10904;
                                statearr_10977_11052[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10952 === 32) {
                                  var inst_10891 = state_10951[20];
                                  var inst_10892 = state_10951[10];
                                  var inst_10894 = state_10951[12];
                                  var inst_10893 = state_10951[21];
                                  var inst_10906 = state_10951[2];
                                  var inst_10907 = inst_10894 + 1;
                                  var tmp10972 = inst_10891;
                                  var tmp10973 = inst_10892;
                                  var tmp10974 = inst_10893;
                                  var inst_10891__$1 = tmp10972;
                                  var inst_10892__$1 = tmp10973;
                                  var inst_10893__$1 = tmp10974;
                                  var inst_10894__$1 = inst_10907;
                                  var state_10951__$1 = function() {
                                    var statearr_10978 = state_10951;
                                    statearr_10978[20] = inst_10891__$1;
                                    statearr_10978[22] = inst_10906;
                                    statearr_10978[10] = inst_10892__$1;
                                    statearr_10978[12] = inst_10894__$1;
                                    statearr_10978[21] = inst_10893__$1;
                                    return statearr_10978;
                                  }();
                                  var statearr_10979_11053 = state_10951__$1;
                                  statearr_10979_11053[2] = null;
                                  statearr_10979_11053[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10952 === 40) {
                                    var inst_10919 = state_10951[23];
                                    var inst_10923 = done.call(null, null);
                                    var inst_10924 = cljs.core.async.untap_STAR_.call(null, m, inst_10919);
                                    var state_10951__$1 = function() {
                                      var statearr_10980 = state_10951;
                                      statearr_10980[24] = inst_10923;
                                      return statearr_10980;
                                    }();
                                    var statearr_10981_11054 = state_10951__$1;
                                    statearr_10981_11054[2] = inst_10924;
                                    statearr_10981_11054[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10952 === 33) {
                                      var inst_10910 = state_10951[25];
                                      var inst_10912 = cljs.core.chunked_seq_QMARK_.call(null, inst_10910);
                                      var state_10951__$1 = state_10951;
                                      if (inst_10912) {
                                        var statearr_10982_11055 = state_10951__$1;
                                        statearr_10982_11055[1] = 36;
                                      } else {
                                        var statearr_10983_11056 = state_10951__$1;
                                        statearr_10983_11056[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10952 === 13) {
                                        var inst_10842 = state_10951[26];
                                        var inst_10845 = cljs.core.async.close_BANG_.call(null, inst_10842);
                                        var state_10951__$1 = state_10951;
                                        var statearr_10984_11057 = state_10951__$1;
                                        statearr_10984_11057[2] = inst_10845;
                                        statearr_10984_11057[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10952 === 22) {
                                          var inst_10863 = state_10951[8];
                                          var inst_10866 = cljs.core.async.close_BANG_.call(null, inst_10863);
                                          var state_10951__$1 = state_10951;
                                          var statearr_10985_11058 = state_10951__$1;
                                          statearr_10985_11058[2] = inst_10866;
                                          statearr_10985_11058[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_10952 === 36) {
                                            var inst_10910 = state_10951[25];
                                            var inst_10914 = cljs.core.chunk_first.call(null, inst_10910);
                                            var inst_10915 = cljs.core.chunk_rest.call(null, inst_10910);
                                            var inst_10916 = cljs.core.count.call(null, inst_10914);
                                            var inst_10891 = inst_10915;
                                            var inst_10892 = inst_10914;
                                            var inst_10893 = inst_10916;
                                            var inst_10894 = 0;
                                            var state_10951__$1 = function() {
                                              var statearr_10986 = state_10951;
                                              statearr_10986[20] = inst_10891;
                                              statearr_10986[10] = inst_10892;
                                              statearr_10986[12] = inst_10894;
                                              statearr_10986[21] = inst_10893;
                                              return statearr_10986;
                                            }();
                                            var statearr_10987_11059 = state_10951__$1;
                                            statearr_10987_11059[2] = null;
                                            statearr_10987_11059[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_10952 === 41) {
                                              var inst_10910 = state_10951[25];
                                              var inst_10926 = state_10951[2];
                                              var inst_10927 = cljs.core.next.call(null, inst_10910);
                                              var inst_10891 = inst_10927;
                                              var inst_10892 = null;
                                              var inst_10893 = 0;
                                              var inst_10894 = 0;
                                              var state_10951__$1 = function() {
                                                var statearr_10988 = state_10951;
                                                statearr_10988[20] = inst_10891;
                                                statearr_10988[27] = inst_10926;
                                                statearr_10988[10] = inst_10892;
                                                statearr_10988[12] = inst_10894;
                                                statearr_10988[21] = inst_10893;
                                                return statearr_10988;
                                              }();
                                              var statearr_10989_11060 = state_10951__$1;
                                              statearr_10989_11060[2] = null;
                                              statearr_10989_11060[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_10952 === 43) {
                                                var state_10951__$1 = state_10951;
                                                var statearr_10990_11061 = state_10951__$1;
                                                statearr_10990_11061[2] = null;
                                                statearr_10990_11061[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_10952 === 29) {
                                                  var inst_10935 = state_10951[2];
                                                  var state_10951__$1 = state_10951;
                                                  var statearr_10991_11062 = state_10951__$1;
                                                  statearr_10991_11062[2] = inst_10935;
                                                  statearr_10991_11062[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_10952 === 44) {
                                                    var inst_10944 = state_10951[2];
                                                    var state_10951__$1 = function() {
                                                      var statearr_10992 = state_10951;
                                                      statearr_10992[28] = inst_10944;
                                                      return statearr_10992;
                                                    }();
                                                    var statearr_10993_11063 = state_10951__$1;
                                                    statearr_10993_11063[2] = null;
                                                    statearr_10993_11063[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_10952 === 6) {
                                                      var inst_10883 = state_10951[29];
                                                      var inst_10882 = cljs.core.deref.call(null, cs);
                                                      var inst_10883__$1 = cljs.core.keys.call(null, inst_10882);
                                                      var inst_10884 = cljs.core.count.call(null, inst_10883__$1);
                                                      var inst_10885 = cljs.core.reset_BANG_.call(null, dctr, inst_10884);
                                                      var inst_10890 = cljs.core.seq.call(null, inst_10883__$1);
                                                      var inst_10891 = inst_10890;
                                                      var inst_10892 = null;
                                                      var inst_10893 = 0;
                                                      var inst_10894 = 0;
                                                      var state_10951__$1 = function() {
                                                        var statearr_10994 = state_10951;
                                                        statearr_10994[20] = inst_10891;
                                                        statearr_10994[30] = inst_10885;
                                                        statearr_10994[29] = inst_10883__$1;
                                                        statearr_10994[10] = inst_10892;
                                                        statearr_10994[12] = inst_10894;
                                                        statearr_10994[21] = inst_10893;
                                                        return statearr_10994;
                                                      }();
                                                      var statearr_10995_11064 = state_10951__$1;
                                                      statearr_10995_11064[2] = null;
                                                      statearr_10995_11064[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_10952 === 28) {
                                                        var inst_10891 = state_10951[20];
                                                        var inst_10910 = state_10951[25];
                                                        var inst_10910__$1 = cljs.core.seq.call(null, inst_10891);
                                                        var state_10951__$1 = function() {
                                                          var statearr_10996 = state_10951;
                                                          statearr_10996[25] = inst_10910__$1;
                                                          return statearr_10996;
                                                        }();
                                                        if (inst_10910__$1) {
                                                          var statearr_10997_11065 = state_10951__$1;
                                                          statearr_10997_11065[1] = 33;
                                                        } else {
                                                          var statearr_10998_11066 = state_10951__$1;
                                                          statearr_10998_11066[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_10952 === 25) {
                                                          var inst_10894 = state_10951[12];
                                                          var inst_10893 = state_10951[21];
                                                          var inst_10896 = inst_10894 < inst_10893;
                                                          var inst_10897 = inst_10896;
                                                          var state_10951__$1 = state_10951;
                                                          if (cljs.core.truth_(inst_10897)) {
                                                            var statearr_10999_11067 = state_10951__$1;
                                                            statearr_10999_11067[1] = 27;
                                                          } else {
                                                            var statearr_11000_11068 = state_10951__$1;
                                                            statearr_11000_11068[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_10952 === 34) {
                                                            var state_10951__$1 = state_10951;
                                                            var statearr_11001_11069 = state_10951__$1;
                                                            statearr_11001_11069[2] = null;
                                                            statearr_11001_11069[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_10952 === 17) {
                                                              var state_10951__$1 = state_10951;
                                                              var statearr_11002_11070 = state_10951__$1;
                                                              statearr_11002_11070[2] = null;
                                                              statearr_11002_11070[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_10952 === 3) {
                                                                var inst_10949 = state_10951[2];
                                                                var state_10951__$1 = state_10951;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10951__$1, inst_10949);
                                                              } else {
                                                                if (state_val_10952 === 12) {
                                                                  var inst_10878 = state_10951[2];
                                                                  var state_10951__$1 = state_10951;
                                                                  var statearr_11003_11071 = state_10951__$1;
                                                                  statearr_11003_11071[2] = inst_10878;
                                                                  statearr_11003_11071[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_10952 === 2) {
                                                                    var state_10951__$1 = state_10951;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10951__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_10952 === 23) {
                                                                      var state_10951__$1 = state_10951;
                                                                      var statearr_11004_11072 = state_10951__$1;
                                                                      statearr_11004_11072[2] = null;
                                                                      statearr_11004_11072[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_10952 === 35) {
                                                                        var inst_10933 = state_10951[2];
                                                                        var state_10951__$1 = state_10951;
                                                                        var statearr_11005_11073 = state_10951__$1;
                                                                        statearr_11005_11073[2] = inst_10933;
                                                                        statearr_11005_11073[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_10952 === 19) {
                                                                          var inst_10852 = state_10951[7];
                                                                          var inst_10856 = cljs.core.chunk_first.call(null, inst_10852);
                                                                          var inst_10857 = cljs.core.chunk_rest.call(null, inst_10852);
                                                                          var inst_10858 = cljs.core.count.call(null, inst_10856);
                                                                          var inst_10832 = inst_10857;
                                                                          var inst_10833 = inst_10856;
                                                                          var inst_10834 = inst_10858;
                                                                          var inst_10835 = 0;
                                                                          var state_10951__$1 = function() {
                                                                            var statearr_11006 = state_10951;
                                                                            statearr_11006[13] = inst_10835;
                                                                            statearr_11006[14] = inst_10834;
                                                                            statearr_11006[15] = inst_10832;
                                                                            statearr_11006[16] = inst_10833;
                                                                            return statearr_11006;
                                                                          }();
                                                                          var statearr_11007_11074 = state_10951__$1;
                                                                          statearr_11007_11074[2] = null;
                                                                          statearr_11007_11074[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_10952 === 11) {
                                                                            var inst_10852 = state_10951[7];
                                                                            var inst_10832 = state_10951[15];
                                                                            var inst_10852__$1 = cljs.core.seq.call(null, inst_10832);
                                                                            var state_10951__$1 = function() {
                                                                              var statearr_11008 = state_10951;
                                                                              statearr_11008[7] = inst_10852__$1;
                                                                              return statearr_11008;
                                                                            }();
                                                                            if (inst_10852__$1) {
                                                                              var statearr_11009_11075 = state_10951__$1;
                                                                              statearr_11009_11075[1] = 16;
                                                                            } else {
                                                                              var statearr_11010_11076 = state_10951__$1;
                                                                              statearr_11010_11076[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_10952 === 9) {
                                                                              var inst_10880 = state_10951[2];
                                                                              var state_10951__$1 = state_10951;
                                                                              var statearr_11011_11077 = state_10951__$1;
                                                                              statearr_11011_11077[2] = inst_10880;
                                                                              statearr_11011_11077[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_10952 === 5) {
                                                                                var inst_10830 = cljs.core.deref.call(null, cs);
                                                                                var inst_10831 = cljs.core.seq.call(null, inst_10830);
                                                                                var inst_10832 = inst_10831;
                                                                                var inst_10833 = null;
                                                                                var inst_10834 = 0;
                                                                                var inst_10835 = 0;
                                                                                var state_10951__$1 = function() {
                                                                                  var statearr_11012 = state_10951;
                                                                                  statearr_11012[13] = inst_10835;
                                                                                  statearr_11012[14] = inst_10834;
                                                                                  statearr_11012[15] = inst_10832;
                                                                                  statearr_11012[16] = inst_10833;
                                                                                  return statearr_11012;
                                                                                }();
                                                                                var statearr_11013_11078 = state_10951__$1;
                                                                                statearr_11013_11078[2] = null;
                                                                                statearr_11013_11078[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_10952 === 14) {
                                                                                  var state_10951__$1 = state_10951;
                                                                                  var statearr_11014_11079 = state_10951__$1;
                                                                                  statearr_11014_11079[2] = null;
                                                                                  statearr_11014_11079[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_10952 === 45) {
                                                                                    var inst_10941 = state_10951[2];
                                                                                    var state_10951__$1 = state_10951;
                                                                                    var statearr_11015_11080 = state_10951__$1;
                                                                                    statearr_11015_11080[2] = inst_10941;
                                                                                    statearr_11015_11080[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_10952 === 26) {
                                                                                      var inst_10883 = state_10951[29];
                                                                                      var inst_10937 = state_10951[2];
                                                                                      var inst_10938 = cljs.core.seq.call(null, inst_10883);
                                                                                      var state_10951__$1 = function() {
                                                                                        var statearr_11016 = state_10951;
                                                                                        statearr_11016[31] = inst_10937;
                                                                                        return statearr_11016;
                                                                                      }();
                                                                                      if (inst_10938) {
                                                                                        var statearr_11017_11081 = state_10951__$1;
                                                                                        statearr_11017_11081[1] = 42;
                                                                                      } else {
                                                                                        var statearr_11018_11082 = state_10951__$1;
                                                                                        statearr_11018_11082[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_10952 === 16) {
                                                                                        var inst_10852 = state_10951[7];
                                                                                        var inst_10854 = cljs.core.chunked_seq_QMARK_.call(null, inst_10852);
                                                                                        var state_10951__$1 = state_10951;
                                                                                        if (inst_10854) {
                                                                                          var statearr_11019_11083 = state_10951__$1;
                                                                                          statearr_11019_11083[1] = 19;
                                                                                        } else {
                                                                                          var statearr_11020_11084 = state_10951__$1;
                                                                                          statearr_11020_11084[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_10952 === 38) {
                                                                                          var inst_10930 = state_10951[2];
                                                                                          var state_10951__$1 = state_10951;
                                                                                          var statearr_11021_11085 = state_10951__$1;
                                                                                          statearr_11021_11085[2] = inst_10930;
                                                                                          statearr_11021_11085[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_10952 === 30) {
                                                                                            var state_10951__$1 = state_10951;
                                                                                            var statearr_11022_11086 = state_10951__$1;
                                                                                            statearr_11022_11086[2] = null;
                                                                                            statearr_11022_11086[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_10952 === 10) {
                                                                                              var inst_10835 = state_10951[13];
                                                                                              var inst_10833 = state_10951[16];
                                                                                              var inst_10841 = cljs.core._nth.call(null, inst_10833, inst_10835);
                                                                                              var inst_10842 = cljs.core.nth.call(null, inst_10841, 0, null);
                                                                                              var inst_10843 = cljs.core.nth.call(null, inst_10841, 1, null);
                                                                                              var state_10951__$1 = function() {
                                                                                                var statearr_11023 = state_10951;
                                                                                                statearr_11023[26] = inst_10842;
                                                                                                return statearr_11023;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_10843)) {
                                                                                                var statearr_11024_11087 = state_10951__$1;
                                                                                                statearr_11024_11087[1] = 13;
                                                                                              } else {
                                                                                                var statearr_11025_11088 = state_10951__$1;
                                                                                                statearr_11025_11088[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_10952 === 18) {
                                                                                                var inst_10876 = state_10951[2];
                                                                                                var state_10951__$1 = state_10951;
                                                                                                var statearr_11026_11089 = state_10951__$1;
                                                                                                statearr_11026_11089[2] = inst_10876;
                                                                                                statearr_11026_11089[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_10952 === 42) {
                                                                                                  var state_10951__$1 = state_10951;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10951__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_10952 === 37) {
                                                                                                    var inst_10823 = state_10951[11];
                                                                                                    var inst_10919 = state_10951[23];
                                                                                                    var inst_10910 = state_10951[25];
                                                                                                    var inst_10919__$1 = cljs.core.first.call(null, inst_10910);
                                                                                                    var inst_10920 = cljs.core.async.put_BANG_.call(null, inst_10919__$1, inst_10823, done);
                                                                                                    var state_10951__$1 = function() {
                                                                                                      var statearr_11027 = state_10951;
                                                                                                      statearr_11027[23] = inst_10919__$1;
                                                                                                      return statearr_11027;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_10920)) {
                                                                                                      var statearr_11028_11090 = state_10951__$1;
                                                                                                      statearr_11028_11090[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_11029_11091 = state_10951__$1;
                                                                                                      statearr_11029_11091[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_10952 === 8) {
                                                                                                      var inst_10835 = state_10951[13];
                                                                                                      var inst_10834 = state_10951[14];
                                                                                                      var inst_10837 = inst_10835 < inst_10834;
                                                                                                      var inst_10838 = inst_10837;
                                                                                                      var state_10951__$1 = state_10951;
                                                                                                      if (cljs.core.truth_(inst_10838)) {
                                                                                                        var statearr_11030_11092 = state_10951__$1;
                                                                                                        statearr_11030_11092[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_11031_11093 = state_10951__$1;
                                                                                                        statearr_11031_11093[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5809__auto___11039, cs, m, dchan, dctr, done);
        return function(switch__5794__auto__, c__5809__auto___11039, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__5795__auto__ = null;
            var state_machine__5795__auto____0 = function() {
              var statearr_11035 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11035[0] = state_machine__5795__auto__;
              statearr_11035[1] = 1;
              return statearr_11035;
            };
            var state_machine__5795__auto____1 = function(state_10951) {
              while (true) {
                var ret_value__5796__auto__ = function() {
                  try {
                    while (true) {
                      var result__5797__auto__ = switch__5794__auto__.call(null, state_10951);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5797__auto__;
                      }
                      break;
                    }
                  } catch (e11036) {
                    if (e11036 instanceof Object) {
                      var ex__5798__auto__ = e11036;
                      var statearr_11037_11094 = state_10951;
                      statearr_11037_11094[5] = ex__5798__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10951);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11036;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11095 = state_10951;
                  state_10951 = G__11095;
                  continue;
                } else {
                  return ret_value__5796__auto__;
                }
                break;
              }
            };
            state_machine__5795__auto__ = function(state_10951) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5795__auto____0.call(this);
                case 1:
                  return state_machine__5795__auto____1.call(this, state_10951);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
            return state_machine__5795__auto__;
          }();
        }(switch__5794__auto__, c__5809__auto___11039, cs, m, dchan, dctr, done);
      }();
      var state__5811__auto__ = function() {
        var statearr_11038 = f__5810__auto__.call(null);
        statearr_11038[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___11039;
        return statearr_11038;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
    };
  }(c__5809__auto___11039, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj11097 = {};
  return obj11097;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3596__auto__ = m;
    if (and__3596__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4247__auto__ = m == null ? null : m;
    return function() {
      var or__3608__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3596__auto__ = m;
    if (and__3596__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4247__auto__ = m == null ? null : m;
    return function() {
      var or__3608__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3596__auto__ = m;
    if (and__3596__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4247__auto__ = m == null ? null : m;
    return function() {
      var or__3608__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3596__auto__ = m;
    if (and__3596__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4247__auto__ = m == null ? null : m;
    return function() {
      var or__3608__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3596__auto__ = m;
    if (and__3596__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4247__auto__ = m == null ? null : m;
    return function() {
      var or__3608__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__11098) {
    var map__11103 = p__11098;
    var map__11103__$1 = cljs.core.seq_QMARK_.call(null, map__11103) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11103) : map__11103;
    var opts = map__11103__$1;
    var statearr_11104_11107 = state;
    statearr_11104_11107[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__11103, map__11103__$1, opts) {
      return function(val) {
        var statearr_11105_11108 = state;
        statearr_11105_11108[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__11103, map__11103__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_11106_11109 = state;
      statearr_11106_11109[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__11098 = null;
    if (arguments.length > 3) {
      p__11098 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__11098);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__11110) {
    var state = cljs.core.first(arglist__11110);
    arglist__11110 = cljs.core.next(arglist__11110);
    var cont_block = cljs.core.first(arglist__11110);
    arglist__11110 = cljs.core.next(arglist__11110);
    var ports = cljs.core.first(arglist__11110);
    var p__11098 = cljs.core.rest(arglist__11110);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__11098);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t11230 !== "undefined") {
    } else {
      cljs.core.async.t11230 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta11231) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta11231 = meta11231;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t11230.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t11230.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11230.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11230.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11230.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11230.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11230.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t11230.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11230.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_11232) {
          var self__ = this;
          var _11232__$1 = this;
          return self__.meta11231;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11230.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_11232, meta11231__$1) {
          var self__ = this;
          var _11232__$1 = this;
          return new cljs.core.async.t11230(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta11231__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11230.cljs$lang$type = true;
      cljs.core.async.t11230.cljs$lang$ctorStr = "cljs.core.async/t11230";
      cljs.core.async.t11230.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
          return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t11230");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t11230 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t11230(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta11231) {
          return new cljs.core.async.t11230(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta11231);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t11230(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 510, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 499, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
    null));
  }();
  var c__5809__auto___11349 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___11349, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__5810__auto__ = function() {
        var switch__5794__auto__ = function(c__5809__auto___11349, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_11302) {
            var state_val_11303 = state_11302[1];
            if (state_val_11303 === 7) {
              var inst_11246 = state_11302[7];
              var inst_11251 = cljs.core.apply.call(null, cljs.core.hash_map, inst_11246);
              var state_11302__$1 = state_11302;
              var statearr_11304_11350 = state_11302__$1;
              statearr_11304_11350[2] = inst_11251;
              statearr_11304_11350[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11303 === 20) {
                var inst_11261 = state_11302[8];
                var state_11302__$1 = state_11302;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11302__$1, 23, out, inst_11261);
              } else {
                if (state_val_11303 === 1) {
                  var inst_11236 = state_11302[9];
                  var inst_11236__$1 = calc_state.call(null);
                  var inst_11237 = cljs.core.seq_QMARK_.call(null, inst_11236__$1);
                  var state_11302__$1 = function() {
                    var statearr_11305 = state_11302;
                    statearr_11305[9] = inst_11236__$1;
                    return statearr_11305;
                  }();
                  if (inst_11237) {
                    var statearr_11306_11351 = state_11302__$1;
                    statearr_11306_11351[1] = 2;
                  } else {
                    var statearr_11307_11352 = state_11302__$1;
                    statearr_11307_11352[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11303 === 24) {
                    var inst_11254 = state_11302[10];
                    var inst_11246 = inst_11254;
                    var state_11302__$1 = function() {
                      var statearr_11308 = state_11302;
                      statearr_11308[7] = inst_11246;
                      return statearr_11308;
                    }();
                    var statearr_11309_11353 = state_11302__$1;
                    statearr_11309_11353[2] = null;
                    statearr_11309_11353[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11303 === 4) {
                      var inst_11236 = state_11302[9];
                      var inst_11242 = state_11302[2];
                      var inst_11243 = cljs.core.get.call(null, inst_11242, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_11244 = cljs.core.get.call(null, inst_11242, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_11245 = cljs.core.get.call(null, inst_11242, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_11246 = inst_11236;
                      var state_11302__$1 = function() {
                        var statearr_11310 = state_11302;
                        statearr_11310[11] = inst_11243;
                        statearr_11310[12] = inst_11245;
                        statearr_11310[7] = inst_11246;
                        statearr_11310[13] = inst_11244;
                        return statearr_11310;
                      }();
                      var statearr_11311_11354 = state_11302__$1;
                      statearr_11311_11354[2] = null;
                      statearr_11311_11354[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11303 === 15) {
                        var state_11302__$1 = state_11302;
                        var statearr_11312_11355 = state_11302__$1;
                        statearr_11312_11355[2] = null;
                        statearr_11312_11355[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11303 === 21) {
                          var inst_11254 = state_11302[10];
                          var inst_11246 = inst_11254;
                          var state_11302__$1 = function() {
                            var statearr_11313 = state_11302;
                            statearr_11313[7] = inst_11246;
                            return statearr_11313;
                          }();
                          var statearr_11314_11356 = state_11302__$1;
                          statearr_11314_11356[2] = null;
                          statearr_11314_11356[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11303 === 13) {
                            var inst_11298 = state_11302[2];
                            var state_11302__$1 = state_11302;
                            var statearr_11315_11357 = state_11302__$1;
                            statearr_11315_11357[2] = inst_11298;
                            statearr_11315_11357[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11303 === 22) {
                              var inst_11296 = state_11302[2];
                              var state_11302__$1 = state_11302;
                              var statearr_11316_11358 = state_11302__$1;
                              statearr_11316_11358[2] = inst_11296;
                              statearr_11316_11358[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11303 === 6) {
                                var inst_11300 = state_11302[2];
                                var state_11302__$1 = state_11302;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11302__$1, inst_11300);
                              } else {
                                if (state_val_11303 === 25) {
                                  var state_11302__$1 = state_11302;
                                  var statearr_11317_11359 = state_11302__$1;
                                  statearr_11317_11359[2] = null;
                                  statearr_11317_11359[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11303 === 17) {
                                    var inst_11276 = state_11302[14];
                                    var state_11302__$1 = state_11302;
                                    var statearr_11318_11360 = state_11302__$1;
                                    statearr_11318_11360[2] = inst_11276;
                                    statearr_11318_11360[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11303 === 3) {
                                      var inst_11236 = state_11302[9];
                                      var state_11302__$1 = state_11302;
                                      var statearr_11319_11361 = state_11302__$1;
                                      statearr_11319_11361[2] = inst_11236;
                                      statearr_11319_11361[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_11303 === 12) {
                                        var inst_11262 = state_11302[15];
                                        var inst_11276 = state_11302[14];
                                        var inst_11257 = state_11302[16];
                                        var inst_11276__$1 = inst_11257.call(null, inst_11262);
                                        var state_11302__$1 = function() {
                                          var statearr_11320 = state_11302;
                                          statearr_11320[14] = inst_11276__$1;
                                          return statearr_11320;
                                        }();
                                        if (cljs.core.truth_(inst_11276__$1)) {
                                          var statearr_11321_11362 = state_11302__$1;
                                          statearr_11321_11362[1] = 17;
                                        } else {
                                          var statearr_11322_11363 = state_11302__$1;
                                          statearr_11322_11363[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_11303 === 2) {
                                          var inst_11236 = state_11302[9];
                                          var inst_11239 = cljs.core.apply.call(null, cljs.core.hash_map, inst_11236);
                                          var state_11302__$1 = state_11302;
                                          var statearr_11323_11364 = state_11302__$1;
                                          statearr_11323_11364[2] = inst_11239;
                                          statearr_11323_11364[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_11303 === 23) {
                                            var inst_11287 = state_11302[2];
                                            var state_11302__$1 = state_11302;
                                            if (cljs.core.truth_(inst_11287)) {
                                              var statearr_11324_11365 = state_11302__$1;
                                              statearr_11324_11365[1] = 24;
                                            } else {
                                              var statearr_11325_11366 = state_11302__$1;
                                              statearr_11325_11366[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_11303 === 19) {
                                              var inst_11284 = state_11302[2];
                                              var state_11302__$1 = state_11302;
                                              if (cljs.core.truth_(inst_11284)) {
                                                var statearr_11326_11367 = state_11302__$1;
                                                statearr_11326_11367[1] = 20;
                                              } else {
                                                var statearr_11327_11368 = state_11302__$1;
                                                statearr_11327_11368[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_11303 === 11) {
                                                var inst_11261 = state_11302[8];
                                                var inst_11267 = inst_11261 == null;
                                                var state_11302__$1 = state_11302;
                                                if (cljs.core.truth_(inst_11267)) {
                                                  var statearr_11328_11369 = state_11302__$1;
                                                  statearr_11328_11369[1] = 14;
                                                } else {
                                                  var statearr_11329_11370 = state_11302__$1;
                                                  statearr_11329_11370[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_11303 === 9) {
                                                  var inst_11254 = state_11302[10];
                                                  var inst_11254__$1 = state_11302[2];
                                                  var inst_11255 = cljs.core.get.call(null, inst_11254__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_11256 = cljs.core.get.call(null, inst_11254__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_11257 = cljs.core.get.call(null, inst_11254__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_11302__$1 = function() {
                                                    var statearr_11330 = state_11302;
                                                    statearr_11330[17] = inst_11256;
                                                    statearr_11330[10] = inst_11254__$1;
                                                    statearr_11330[16] = inst_11257;
                                                    return statearr_11330;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_11302__$1, 10, inst_11255);
                                                } else {
                                                  if (state_val_11303 === 5) {
                                                    var inst_11246 = state_11302[7];
                                                    var inst_11249 = cljs.core.seq_QMARK_.call(null, inst_11246);
                                                    var state_11302__$1 = state_11302;
                                                    if (inst_11249) {
                                                      var statearr_11331_11371 = state_11302__$1;
                                                      statearr_11331_11371[1] = 7;
                                                    } else {
                                                      var statearr_11332_11372 = state_11302__$1;
                                                      statearr_11332_11372[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_11303 === 14) {
                                                      var inst_11262 = state_11302[15];
                                                      var inst_11269 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_11262);
                                                      var state_11302__$1 = state_11302;
                                                      var statearr_11333_11373 = state_11302__$1;
                                                      statearr_11333_11373[2] = inst_11269;
                                                      statearr_11333_11373[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_11303 === 26) {
                                                        var inst_11292 = state_11302[2];
                                                        var state_11302__$1 = state_11302;
                                                        var statearr_11334_11374 = state_11302__$1;
                                                        statearr_11334_11374[2] = inst_11292;
                                                        statearr_11334_11374[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_11303 === 16) {
                                                          var inst_11272 = state_11302[2];
                                                          var inst_11273 = calc_state.call(null);
                                                          var inst_11246 = inst_11273;
                                                          var state_11302__$1 = function() {
                                                            var statearr_11335 = state_11302;
                                                            statearr_11335[7] = inst_11246;
                                                            statearr_11335[18] = inst_11272;
                                                            return statearr_11335;
                                                          }();
                                                          var statearr_11336_11375 = state_11302__$1;
                                                          statearr_11336_11375[2] = null;
                                                          statearr_11336_11375[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_11303 === 10) {
                                                            var inst_11262 = state_11302[15];
                                                            var inst_11261 = state_11302[8];
                                                            var inst_11260 = state_11302[2];
                                                            var inst_11261__$1 = cljs.core.nth.call(null, inst_11260, 0, null);
                                                            var inst_11262__$1 = cljs.core.nth.call(null, inst_11260, 1, null);
                                                            var inst_11263 = inst_11261__$1 == null;
                                                            var inst_11264 = cljs.core._EQ_.call(null, inst_11262__$1, change);
                                                            var inst_11265 = inst_11263 || inst_11264;
                                                            var state_11302__$1 = function() {
                                                              var statearr_11337 = state_11302;
                                                              statearr_11337[15] = inst_11262__$1;
                                                              statearr_11337[8] = inst_11261__$1;
                                                              return statearr_11337;
                                                            }();
                                                            if (cljs.core.truth_(inst_11265)) {
                                                              var statearr_11338_11376 = state_11302__$1;
                                                              statearr_11338_11376[1] = 11;
                                                            } else {
                                                              var statearr_11339_11377 = state_11302__$1;
                                                              statearr_11339_11377[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_11303 === 18) {
                                                              var inst_11262 = state_11302[15];
                                                              var inst_11256 = state_11302[17];
                                                              var inst_11257 = state_11302[16];
                                                              var inst_11279 = cljs.core.empty_QMARK_.call(null, inst_11257);
                                                              var inst_11280 = inst_11256.call(null, inst_11262);
                                                              var inst_11281 = cljs.core.not.call(null, inst_11280);
                                                              var inst_11282 = inst_11279 && inst_11281;
                                                              var state_11302__$1 = state_11302;
                                                              var statearr_11340_11378 = state_11302__$1;
                                                              statearr_11340_11378[2] = inst_11282;
                                                              statearr_11340_11378[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_11303 === 8) {
                                                                var inst_11246 = state_11302[7];
                                                                var state_11302__$1 = state_11302;
                                                                var statearr_11341_11379 = state_11302__$1;
                                                                statearr_11341_11379[2] = inst_11246;
                                                                statearr_11341_11379[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5809__auto___11349, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__5794__auto__, c__5809__auto___11349, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__5795__auto__ = null;
            var state_machine__5795__auto____0 = function() {
              var statearr_11345 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11345[0] = state_machine__5795__auto__;
              statearr_11345[1] = 1;
              return statearr_11345;
            };
            var state_machine__5795__auto____1 = function(state_11302) {
              while (true) {
                var ret_value__5796__auto__ = function() {
                  try {
                    while (true) {
                      var result__5797__auto__ = switch__5794__auto__.call(null, state_11302);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5797__auto__;
                      }
                      break;
                    }
                  } catch (e11346) {
                    if (e11346 instanceof Object) {
                      var ex__5798__auto__ = e11346;
                      var statearr_11347_11380 = state_11302;
                      statearr_11347_11380[5] = ex__5798__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11302);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e11346;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__11381 = state_11302;
                  state_11302 = G__11381;
                  continue;
                } else {
                  return ret_value__5796__auto__;
                }
                break;
              }
            };
            state_machine__5795__auto__ = function(state_11302) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5795__auto____0.call(this);
                case 1:
                  return state_machine__5795__auto____1.call(this, state_11302);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
            return state_machine__5795__auto__;
          }();
        }(switch__5794__auto__, c__5809__auto___11349, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__5811__auto__ = function() {
        var statearr_11348 = f__5810__auto__.call(null);
        statearr_11348[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___11349;
        return statearr_11348;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
    };
  }(c__5809__auto___11349, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj11383 = {};
  return obj11383;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3596__auto__ = p;
    if (and__3596__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4247__auto__ = p == null ? null : p;
    return function() {
      var or__3608__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3596__auto__ = p;
    if (and__3596__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4247__auto__ = p == null ? null : p;
    return function() {
      var or__3608__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3596__auto__ = p;
      if (and__3596__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4247__auto__ = p == null ? null : p;
      return function() {
        var or__3608__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3596__auto__ = p;
      if (and__3596__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3596__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4247__auto__ = p == null ? null : p;
      return function() {
        var or__3608__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4247__auto__)];
        if (or__3608__auto__) {
          return or__3608__auto__;
        } else {
          var or__3608__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3608__auto____$1) {
            return or__3608__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3608__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3608__auto__)) {
          return or__3608__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3608__auto__, mults) {
            return function(p1__11384_SHARP_) {
              if (cljs.core.truth_(p1__11384_SHARP_.call(null, topic))) {
                return p1__11384_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__11384_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3608__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t11507 !== "undefined") {
      } else {
        cljs.core.async.t11507 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta11508) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta11508 = meta11508;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t11507.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t11507.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t11507.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t11507.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t11507.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t11507.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t11507.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t11507.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_11509) {
            var self__ = this;
            var _11509__$1 = this;
            return self__.meta11508;
          };
        }(mults, ensure_mult);
        cljs.core.async.t11507.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_11509, meta11508__$1) {
            var self__ = this;
            var _11509__$1 = this;
            return new cljs.core.async.t11507(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta11508__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t11507.cljs$lang$type = true;
        cljs.core.async.t11507.cljs$lang$ctorStr = "cljs.core.async/t11507";
        cljs.core.async.t11507.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
            return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t11507");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t11507 = function(mults, ensure_mult) {
          return function __GT_t11507(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta11508) {
            return new cljs.core.async.t11507(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta11508);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t11507(ensure_mult, mults, buf_fn, topic_fn, ch, pub, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 65, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 603, new cljs.core.Keyword(null, "column", "column", 2078222095), 14, new cljs.core.Keyword(null, "line", "line", 212345235), 591, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
      null));
    }();
    var c__5809__auto___11629 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___11629, mults, ensure_mult, p) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___11629, mults, ensure_mult, p) {
            return function(state_11581) {
              var state_val_11582 = state_11581[1];
              if (state_val_11582 === 7) {
                var inst_11577 = state_11581[2];
                var state_11581__$1 = state_11581;
                var statearr_11583_11630 = state_11581__$1;
                statearr_11583_11630[2] = inst_11577;
                statearr_11583_11630[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11582 === 20) {
                  var state_11581__$1 = state_11581;
                  var statearr_11584_11631 = state_11581__$1;
                  statearr_11584_11631[2] = null;
                  statearr_11584_11631[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11582 === 1) {
                    var state_11581__$1 = state_11581;
                    var statearr_11585_11632 = state_11581__$1;
                    statearr_11585_11632[2] = null;
                    statearr_11585_11632[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11582 === 24) {
                      var inst_11560 = state_11581[7];
                      var inst_11569 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_11560);
                      var state_11581__$1 = state_11581;
                      var statearr_11586_11633 = state_11581__$1;
                      statearr_11586_11633[2] = inst_11569;
                      statearr_11586_11633[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11582 === 4) {
                        var inst_11512 = state_11581[8];
                        var inst_11512__$1 = state_11581[2];
                        var inst_11513 = inst_11512__$1 == null;
                        var state_11581__$1 = function() {
                          var statearr_11587 = state_11581;
                          statearr_11587[8] = inst_11512__$1;
                          return statearr_11587;
                        }();
                        if (cljs.core.truth_(inst_11513)) {
                          var statearr_11588_11634 = state_11581__$1;
                          statearr_11588_11634[1] = 5;
                        } else {
                          var statearr_11589_11635 = state_11581__$1;
                          statearr_11589_11635[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11582 === 15) {
                          var inst_11554 = state_11581[2];
                          var state_11581__$1 = state_11581;
                          var statearr_11590_11636 = state_11581__$1;
                          statearr_11590_11636[2] = inst_11554;
                          statearr_11590_11636[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11582 === 21) {
                            var inst_11574 = state_11581[2];
                            var state_11581__$1 = function() {
                              var statearr_11591 = state_11581;
                              statearr_11591[9] = inst_11574;
                              return statearr_11591;
                            }();
                            var statearr_11592_11637 = state_11581__$1;
                            statearr_11592_11637[2] = null;
                            statearr_11592_11637[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11582 === 13) {
                              var inst_11536 = state_11581[10];
                              var inst_11538 = cljs.core.chunked_seq_QMARK_.call(null, inst_11536);
                              var state_11581__$1 = state_11581;
                              if (inst_11538) {
                                var statearr_11593_11638 = state_11581__$1;
                                statearr_11593_11638[1] = 16;
                              } else {
                                var statearr_11594_11639 = state_11581__$1;
                                statearr_11594_11639[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11582 === 22) {
                                var inst_11566 = state_11581[2];
                                var state_11581__$1 = state_11581;
                                if (cljs.core.truth_(inst_11566)) {
                                  var statearr_11595_11640 = state_11581__$1;
                                  statearr_11595_11640[1] = 23;
                                } else {
                                  var statearr_11596_11641 = state_11581__$1;
                                  statearr_11596_11641[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11582 === 6) {
                                  var inst_11512 = state_11581[8];
                                  var inst_11560 = state_11581[7];
                                  var inst_11562 = state_11581[11];
                                  var inst_11560__$1 = topic_fn.call(null, inst_11512);
                                  var inst_11561 = cljs.core.deref.call(null, mults);
                                  var inst_11562__$1 = cljs.core.get.call(null, inst_11561, inst_11560__$1);
                                  var state_11581__$1 = function() {
                                    var statearr_11597 = state_11581;
                                    statearr_11597[7] = inst_11560__$1;
                                    statearr_11597[11] = inst_11562__$1;
                                    return statearr_11597;
                                  }();
                                  if (cljs.core.truth_(inst_11562__$1)) {
                                    var statearr_11598_11642 = state_11581__$1;
                                    statearr_11598_11642[1] = 19;
                                  } else {
                                    var statearr_11599_11643 = state_11581__$1;
                                    statearr_11599_11643[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11582 === 25) {
                                    var inst_11571 = state_11581[2];
                                    var state_11581__$1 = state_11581;
                                    var statearr_11600_11644 = state_11581__$1;
                                    statearr_11600_11644[2] = inst_11571;
                                    statearr_11600_11644[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11582 === 17) {
                                      var inst_11536 = state_11581[10];
                                      var inst_11545 = cljs.core.first.call(null, inst_11536);
                                      var inst_11546 = cljs.core.async.muxch_STAR_.call(null, inst_11545);
                                      var inst_11547 = cljs.core.async.close_BANG_.call(null, inst_11546);
                                      var inst_11548 = cljs.core.next.call(null, inst_11536);
                                      var inst_11522 = inst_11548;
                                      var inst_11523 = null;
                                      var inst_11524 = 0;
                                      var inst_11525 = 0;
                                      var state_11581__$1 = function() {
                                        var statearr_11601 = state_11581;
                                        statearr_11601[12] = inst_11525;
                                        statearr_11601[13] = inst_11523;
                                        statearr_11601[14] = inst_11547;
                                        statearr_11601[15] = inst_11522;
                                        statearr_11601[16] = inst_11524;
                                        return statearr_11601;
                                      }();
                                      var statearr_11602_11645 = state_11581__$1;
                                      statearr_11602_11645[2] = null;
                                      statearr_11602_11645[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_11582 === 3) {
                                        var inst_11579 = state_11581[2];
                                        var state_11581__$1 = state_11581;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11581__$1, inst_11579);
                                      } else {
                                        if (state_val_11582 === 12) {
                                          var inst_11556 = state_11581[2];
                                          var state_11581__$1 = state_11581;
                                          var statearr_11603_11646 = state_11581__$1;
                                          statearr_11603_11646[2] = inst_11556;
                                          statearr_11603_11646[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_11582 === 2) {
                                            var state_11581__$1 = state_11581;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11581__$1, 4, ch);
                                          } else {
                                            if (state_val_11582 === 23) {
                                              var state_11581__$1 = state_11581;
                                              var statearr_11604_11647 = state_11581__$1;
                                              statearr_11604_11647[2] = null;
                                              statearr_11604_11647[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_11582 === 19) {
                                                var inst_11512 = state_11581[8];
                                                var inst_11562 = state_11581[11];
                                                var inst_11564 = cljs.core.async.muxch_STAR_.call(null, inst_11562);
                                                var state_11581__$1 = state_11581;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11581__$1, 22, inst_11564, inst_11512);
                                              } else {
                                                if (state_val_11582 === 11) {
                                                  var inst_11536 = state_11581[10];
                                                  var inst_11522 = state_11581[15];
                                                  var inst_11536__$1 = cljs.core.seq.call(null, inst_11522);
                                                  var state_11581__$1 = function() {
                                                    var statearr_11605 = state_11581;
                                                    statearr_11605[10] = inst_11536__$1;
                                                    return statearr_11605;
                                                  }();
                                                  if (inst_11536__$1) {
                                                    var statearr_11606_11648 = state_11581__$1;
                                                    statearr_11606_11648[1] = 13;
                                                  } else {
                                                    var statearr_11607_11649 = state_11581__$1;
                                                    statearr_11607_11649[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_11582 === 9) {
                                                    var inst_11558 = state_11581[2];
                                                    var state_11581__$1 = state_11581;
                                                    var statearr_11608_11650 = state_11581__$1;
                                                    statearr_11608_11650[2] = inst_11558;
                                                    statearr_11608_11650[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_11582 === 5) {
                                                      var inst_11519 = cljs.core.deref.call(null, mults);
                                                      var inst_11520 = cljs.core.vals.call(null, inst_11519);
                                                      var inst_11521 = cljs.core.seq.call(null, inst_11520);
                                                      var inst_11522 = inst_11521;
                                                      var inst_11523 = null;
                                                      var inst_11524 = 0;
                                                      var inst_11525 = 0;
                                                      var state_11581__$1 = function() {
                                                        var statearr_11609 = state_11581;
                                                        statearr_11609[12] = inst_11525;
                                                        statearr_11609[13] = inst_11523;
                                                        statearr_11609[15] = inst_11522;
                                                        statearr_11609[16] = inst_11524;
                                                        return statearr_11609;
                                                      }();
                                                      var statearr_11610_11651 = state_11581__$1;
                                                      statearr_11610_11651[2] = null;
                                                      statearr_11610_11651[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_11582 === 14) {
                                                        var state_11581__$1 = state_11581;
                                                        var statearr_11614_11652 = state_11581__$1;
                                                        statearr_11614_11652[2] = null;
                                                        statearr_11614_11652[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_11582 === 16) {
                                                          var inst_11536 = state_11581[10];
                                                          var inst_11540 = cljs.core.chunk_first.call(null, inst_11536);
                                                          var inst_11541 = cljs.core.chunk_rest.call(null, inst_11536);
                                                          var inst_11542 = cljs.core.count.call(null, inst_11540);
                                                          var inst_11522 = inst_11541;
                                                          var inst_11523 = inst_11540;
                                                          var inst_11524 = inst_11542;
                                                          var inst_11525 = 0;
                                                          var state_11581__$1 = function() {
                                                            var statearr_11615 = state_11581;
                                                            statearr_11615[12] = inst_11525;
                                                            statearr_11615[13] = inst_11523;
                                                            statearr_11615[15] = inst_11522;
                                                            statearr_11615[16] = inst_11524;
                                                            return statearr_11615;
                                                          }();
                                                          var statearr_11616_11653 = state_11581__$1;
                                                          statearr_11616_11653[2] = null;
                                                          statearr_11616_11653[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_11582 === 10) {
                                                            var inst_11525 = state_11581[12];
                                                            var inst_11523 = state_11581[13];
                                                            var inst_11522 = state_11581[15];
                                                            var inst_11524 = state_11581[16];
                                                            var inst_11530 = cljs.core._nth.call(null, inst_11523, inst_11525);
                                                            var inst_11531 = cljs.core.async.muxch_STAR_.call(null, inst_11530);
                                                            var inst_11532 = cljs.core.async.close_BANG_.call(null, inst_11531);
                                                            var inst_11533 = inst_11525 + 1;
                                                            var tmp11611 = inst_11523;
                                                            var tmp11612 = inst_11522;
                                                            var tmp11613 = inst_11524;
                                                            var inst_11522__$1 = tmp11612;
                                                            var inst_11523__$1 = tmp11611;
                                                            var inst_11524__$1 = tmp11613;
                                                            var inst_11525__$1 = inst_11533;
                                                            var state_11581__$1 = function() {
                                                              var statearr_11617 = state_11581;
                                                              statearr_11617[12] = inst_11525__$1;
                                                              statearr_11617[13] = inst_11523__$1;
                                                              statearr_11617[17] = inst_11532;
                                                              statearr_11617[15] = inst_11522__$1;
                                                              statearr_11617[16] = inst_11524__$1;
                                                              return statearr_11617;
                                                            }();
                                                            var statearr_11618_11654 = state_11581__$1;
                                                            statearr_11618_11654[2] = null;
                                                            statearr_11618_11654[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_11582 === 18) {
                                                              var inst_11551 = state_11581[2];
                                                              var state_11581__$1 = state_11581;
                                                              var statearr_11619_11655 = state_11581__$1;
                                                              statearr_11619_11655[2] = inst_11551;
                                                              statearr_11619_11655[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_11582 === 8) {
                                                                var inst_11525 = state_11581[12];
                                                                var inst_11524 = state_11581[16];
                                                                var inst_11527 = inst_11525 < inst_11524;
                                                                var inst_11528 = inst_11527;
                                                                var state_11581__$1 = state_11581;
                                                                if (cljs.core.truth_(inst_11528)) {
                                                                  var statearr_11620_11656 = state_11581__$1;
                                                                  statearr_11620_11656[1] = 10;
                                                                } else {
                                                                  var statearr_11621_11657 = state_11581__$1;
                                                                  statearr_11621_11657[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___11629, mults, ensure_mult, p);
          return function(switch__5794__auto__, c__5809__auto___11629, mults, ensure_mult, p) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_11625 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_11625[0] = state_machine__5795__auto__;
                statearr_11625[1] = 1;
                return statearr_11625;
              };
              var state_machine__5795__auto____1 = function(state_11581) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_11581);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e11626) {
                      if (e11626 instanceof Object) {
                        var ex__5798__auto__ = e11626;
                        var statearr_11627_11658 = state_11581;
                        statearr_11627_11658[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11581);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e11626;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__11659 = state_11581;
                    state_11581 = G__11659;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_11581) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_11581);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___11629, mults, ensure_mult, p);
        }();
        var state__5811__auto__ = function() {
          var statearr_11628 = f__5810__auto__.call(null);
          statearr_11628[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___11629;
          return statearr_11628;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___11629, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5809__auto___11796 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___11796, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___11796, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_11766) {
              var state_val_11767 = state_11766[1];
              if (state_val_11767 === 7) {
                var state_11766__$1 = state_11766;
                var statearr_11768_11797 = state_11766__$1;
                statearr_11768_11797[2] = null;
                statearr_11768_11797[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11767 === 1) {
                  var state_11766__$1 = state_11766;
                  var statearr_11769_11798 = state_11766__$1;
                  statearr_11769_11798[2] = null;
                  statearr_11769_11798[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11767 === 4) {
                    var inst_11730 = state_11766[7];
                    var inst_11732 = inst_11730 < cnt;
                    var state_11766__$1 = state_11766;
                    if (cljs.core.truth_(inst_11732)) {
                      var statearr_11770_11799 = state_11766__$1;
                      statearr_11770_11799[1] = 6;
                    } else {
                      var statearr_11771_11800 = state_11766__$1;
                      statearr_11771_11800[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11767 === 15) {
                      var inst_11762 = state_11766[2];
                      var state_11766__$1 = state_11766;
                      var statearr_11772_11801 = state_11766__$1;
                      statearr_11772_11801[2] = inst_11762;
                      statearr_11772_11801[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11767 === 13) {
                        var inst_11755 = cljs.core.async.close_BANG_.call(null, out);
                        var state_11766__$1 = state_11766;
                        var statearr_11773_11802 = state_11766__$1;
                        statearr_11773_11802[2] = inst_11755;
                        statearr_11773_11802[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11767 === 6) {
                          var state_11766__$1 = state_11766;
                          var statearr_11774_11803 = state_11766__$1;
                          statearr_11774_11803[2] = null;
                          statearr_11774_11803[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11767 === 3) {
                            var inst_11764 = state_11766[2];
                            var state_11766__$1 = state_11766;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11766__$1, inst_11764);
                          } else {
                            if (state_val_11767 === 12) {
                              var inst_11752 = state_11766[8];
                              var inst_11752__$1 = state_11766[2];
                              var inst_11753 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_11752__$1);
                              var state_11766__$1 = function() {
                                var statearr_11775 = state_11766;
                                statearr_11775[8] = inst_11752__$1;
                                return statearr_11775;
                              }();
                              if (cljs.core.truth_(inst_11753)) {
                                var statearr_11776_11804 = state_11766__$1;
                                statearr_11776_11804[1] = 13;
                              } else {
                                var statearr_11777_11805 = state_11766__$1;
                                statearr_11777_11805[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11767 === 2) {
                                var inst_11729 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_11730 = 0;
                                var state_11766__$1 = function() {
                                  var statearr_11778 = state_11766;
                                  statearr_11778[7] = inst_11730;
                                  statearr_11778[9] = inst_11729;
                                  return statearr_11778;
                                }();
                                var statearr_11779_11806 = state_11766__$1;
                                statearr_11779_11806[2] = null;
                                statearr_11779_11806[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11767 === 11) {
                                  var inst_11730 = state_11766[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11766, 10, Object, null, 9);
                                  var inst_11739 = chs__$1.call(null, inst_11730);
                                  var inst_11740 = done.call(null, inst_11730);
                                  var inst_11741 = cljs.core.async.take_BANG_.call(null, inst_11739, inst_11740);
                                  var state_11766__$1 = state_11766;
                                  var statearr_11780_11807 = state_11766__$1;
                                  statearr_11780_11807[2] = inst_11741;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11766__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11767 === 9) {
                                    var inst_11730 = state_11766[7];
                                    var inst_11743 = state_11766[2];
                                    var inst_11744 = inst_11730 + 1;
                                    var inst_11730__$1 = inst_11744;
                                    var state_11766__$1 = function() {
                                      var statearr_11781 = state_11766;
                                      statearr_11781[7] = inst_11730__$1;
                                      statearr_11781[10] = inst_11743;
                                      return statearr_11781;
                                    }();
                                    var statearr_11782_11808 = state_11766__$1;
                                    statearr_11782_11808[2] = null;
                                    statearr_11782_11808[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11767 === 5) {
                                      var inst_11750 = state_11766[2];
                                      var state_11766__$1 = function() {
                                        var statearr_11783 = state_11766;
                                        statearr_11783[11] = inst_11750;
                                        return statearr_11783;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11766__$1, 12, dchan);
                                    } else {
                                      if (state_val_11767 === 14) {
                                        var inst_11752 = state_11766[8];
                                        var inst_11757 = cljs.core.apply.call(null, f, inst_11752);
                                        var state_11766__$1 = state_11766;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11766__$1, 16, out, inst_11757);
                                      } else {
                                        if (state_val_11767 === 16) {
                                          var inst_11759 = state_11766[2];
                                          var state_11766__$1 = function() {
                                            var statearr_11784 = state_11766;
                                            statearr_11784[12] = inst_11759;
                                            return statearr_11784;
                                          }();
                                          var statearr_11785_11809 = state_11766__$1;
                                          statearr_11785_11809[2] = null;
                                          statearr_11785_11809[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_11767 === 10) {
                                            var inst_11734 = state_11766[2];
                                            var inst_11735 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_11766__$1 = function() {
                                              var statearr_11786 = state_11766;
                                              statearr_11786[13] = inst_11734;
                                              return statearr_11786;
                                            }();
                                            var statearr_11787_11810 = state_11766__$1;
                                            statearr_11787_11810[2] = inst_11735;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11766__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_11767 === 8) {
                                              var inst_11748 = state_11766[2];
                                              var state_11766__$1 = state_11766;
                                              var statearr_11788_11811 = state_11766__$1;
                                              statearr_11788_11811[2] = inst_11748;
                                              statearr_11788_11811[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___11796, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__5794__auto__, c__5809__auto___11796, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_11792 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_11792[0] = state_machine__5795__auto__;
                statearr_11792[1] = 1;
                return statearr_11792;
              };
              var state_machine__5795__auto____1 = function(state_11766) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_11766);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e11793) {
                      if (e11793 instanceof Object) {
                        var ex__5798__auto__ = e11793;
                        var statearr_11794_11812 = state_11766;
                        statearr_11794_11812[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11766);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e11793;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__11813 = state_11766;
                    state_11766 = G__11813;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_11766) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_11766);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___11796, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__5811__auto__ = function() {
          var statearr_11795 = f__5810__auto__.call(null);
          statearr_11795[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___11796;
          return statearr_11795;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___11796, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5809__auto___11921 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___11921, out) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___11921, out) {
            return function(state_11897) {
              var state_val_11898 = state_11897[1];
              if (state_val_11898 === 7) {
                var inst_11876 = state_11897[7];
                var inst_11877 = state_11897[8];
                var inst_11876__$1 = state_11897[2];
                var inst_11877__$1 = cljs.core.nth.call(null, inst_11876__$1, 0, null);
                var inst_11878 = cljs.core.nth.call(null, inst_11876__$1, 1, null);
                var inst_11879 = inst_11877__$1 == null;
                var state_11897__$1 = function() {
                  var statearr_11899 = state_11897;
                  statearr_11899[7] = inst_11876__$1;
                  statearr_11899[8] = inst_11877__$1;
                  statearr_11899[9] = inst_11878;
                  return statearr_11899;
                }();
                if (cljs.core.truth_(inst_11879)) {
                  var statearr_11900_11922 = state_11897__$1;
                  statearr_11900_11922[1] = 8;
                } else {
                  var statearr_11901_11923 = state_11897__$1;
                  statearr_11901_11923[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_11898 === 1) {
                  var inst_11868 = cljs.core.vec.call(null, chs);
                  var inst_11869 = inst_11868;
                  var state_11897__$1 = function() {
                    var statearr_11902 = state_11897;
                    statearr_11902[10] = inst_11869;
                    return statearr_11902;
                  }();
                  var statearr_11903_11924 = state_11897__$1;
                  statearr_11903_11924[2] = null;
                  statearr_11903_11924[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11898 === 4) {
                    var inst_11869 = state_11897[10];
                    var state_11897__$1 = state_11897;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_11897__$1, 7, inst_11869);
                  } else {
                    if (state_val_11898 === 6) {
                      var inst_11893 = state_11897[2];
                      var state_11897__$1 = state_11897;
                      var statearr_11904_11925 = state_11897__$1;
                      statearr_11904_11925[2] = inst_11893;
                      statearr_11904_11925[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11898 === 3) {
                        var inst_11895 = state_11897[2];
                        var state_11897__$1 = state_11897;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11897__$1, inst_11895);
                      } else {
                        if (state_val_11898 === 2) {
                          var inst_11869 = state_11897[10];
                          var inst_11871 = cljs.core.count.call(null, inst_11869);
                          var inst_11872 = inst_11871 > 0;
                          var state_11897__$1 = state_11897;
                          if (cljs.core.truth_(inst_11872)) {
                            var statearr_11906_11926 = state_11897__$1;
                            statearr_11906_11926[1] = 4;
                          } else {
                            var statearr_11907_11927 = state_11897__$1;
                            statearr_11907_11927[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11898 === 11) {
                            var inst_11869 = state_11897[10];
                            var inst_11886 = state_11897[2];
                            var tmp11905 = inst_11869;
                            var inst_11869__$1 = tmp11905;
                            var state_11897__$1 = function() {
                              var statearr_11908 = state_11897;
                              statearr_11908[10] = inst_11869__$1;
                              statearr_11908[11] = inst_11886;
                              return statearr_11908;
                            }();
                            var statearr_11909_11928 = state_11897__$1;
                            statearr_11909_11928[2] = null;
                            statearr_11909_11928[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11898 === 9) {
                              var inst_11877 = state_11897[8];
                              var state_11897__$1 = state_11897;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11897__$1, 11, out, inst_11877);
                            } else {
                              if (state_val_11898 === 5) {
                                var inst_11891 = cljs.core.async.close_BANG_.call(null, out);
                                var state_11897__$1 = state_11897;
                                var statearr_11910_11929 = state_11897__$1;
                                statearr_11910_11929[2] = inst_11891;
                                statearr_11910_11929[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11898 === 10) {
                                  var inst_11889 = state_11897[2];
                                  var state_11897__$1 = state_11897;
                                  var statearr_11911_11930 = state_11897__$1;
                                  statearr_11911_11930[2] = inst_11889;
                                  statearr_11911_11930[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11898 === 8) {
                                    var inst_11869 = state_11897[10];
                                    var inst_11876 = state_11897[7];
                                    var inst_11877 = state_11897[8];
                                    var inst_11878 = state_11897[9];
                                    var inst_11881 = function() {
                                      var c = inst_11878;
                                      var v = inst_11877;
                                      var vec__11874 = inst_11876;
                                      var cs = inst_11869;
                                      return function(c, v, vec__11874, cs, inst_11869, inst_11876, inst_11877, inst_11878, state_val_11898, c__5809__auto___11921, out) {
                                        return function(p1__11814_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__11814_SHARP_);
                                        };
                                      }(c, v, vec__11874, cs, inst_11869, inst_11876, inst_11877, inst_11878, state_val_11898, c__5809__auto___11921, out);
                                    }();
                                    var inst_11882 = cljs.core.filterv.call(null, inst_11881, inst_11869);
                                    var inst_11869__$1 = inst_11882;
                                    var state_11897__$1 = function() {
                                      var statearr_11912 = state_11897;
                                      statearr_11912[10] = inst_11869__$1;
                                      return statearr_11912;
                                    }();
                                    var statearr_11913_11931 = state_11897__$1;
                                    statearr_11913_11931[2] = null;
                                    statearr_11913_11931[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___11921, out);
          return function(switch__5794__auto__, c__5809__auto___11921, out) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_11917 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_11917[0] = state_machine__5795__auto__;
                statearr_11917[1] = 1;
                return statearr_11917;
              };
              var state_machine__5795__auto____1 = function(state_11897) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_11897);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e11918) {
                      if (e11918 instanceof Object) {
                        var ex__5798__auto__ = e11918;
                        var statearr_11919_11932 = state_11897;
                        statearr_11919_11932[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11897);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e11918;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__11933 = state_11897;
                    state_11897 = G__11933;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_11897) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_11897);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___11921, out);
        }();
        var state__5811__auto__ = function() {
          var statearr_11920 = f__5810__auto__.call(null);
          statearr_11920[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___11921;
          return statearr_11920;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___11921, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5809__auto___12026 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___12026, out) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___12026, out) {
            return function(state_12003) {
              var state_val_12004 = state_12003[1];
              if (state_val_12004 === 7) {
                var inst_11985 = state_12003[7];
                var inst_11985__$1 = state_12003[2];
                var inst_11986 = inst_11985__$1 == null;
                var inst_11987 = cljs.core.not.call(null, inst_11986);
                var state_12003__$1 = function() {
                  var statearr_12005 = state_12003;
                  statearr_12005[7] = inst_11985__$1;
                  return statearr_12005;
                }();
                if (inst_11987) {
                  var statearr_12006_12027 = state_12003__$1;
                  statearr_12006_12027[1] = 8;
                } else {
                  var statearr_12007_12028 = state_12003__$1;
                  statearr_12007_12028[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12004 === 1) {
                  var inst_11980 = 0;
                  var state_12003__$1 = function() {
                    var statearr_12008 = state_12003;
                    statearr_12008[8] = inst_11980;
                    return statearr_12008;
                  }();
                  var statearr_12009_12029 = state_12003__$1;
                  statearr_12009_12029[2] = null;
                  statearr_12009_12029[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12004 === 4) {
                    var state_12003__$1 = state_12003;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12003__$1, 7, ch);
                  } else {
                    if (state_val_12004 === 6) {
                      var inst_11998 = state_12003[2];
                      var state_12003__$1 = state_12003;
                      var statearr_12010_12030 = state_12003__$1;
                      statearr_12010_12030[2] = inst_11998;
                      statearr_12010_12030[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12004 === 3) {
                        var inst_12000 = state_12003[2];
                        var inst_12001 = cljs.core.async.close_BANG_.call(null, out);
                        var state_12003__$1 = function() {
                          var statearr_12011 = state_12003;
                          statearr_12011[9] = inst_12000;
                          return statearr_12011;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12003__$1, inst_12001);
                      } else {
                        if (state_val_12004 === 2) {
                          var inst_11980 = state_12003[8];
                          var inst_11982 = inst_11980 < n;
                          var state_12003__$1 = state_12003;
                          if (cljs.core.truth_(inst_11982)) {
                            var statearr_12012_12031 = state_12003__$1;
                            statearr_12012_12031[1] = 4;
                          } else {
                            var statearr_12013_12032 = state_12003__$1;
                            statearr_12013_12032[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12004 === 11) {
                            var inst_11980 = state_12003[8];
                            var inst_11990 = state_12003[2];
                            var inst_11991 = inst_11980 + 1;
                            var inst_11980__$1 = inst_11991;
                            var state_12003__$1 = function() {
                              var statearr_12014 = state_12003;
                              statearr_12014[8] = inst_11980__$1;
                              statearr_12014[10] = inst_11990;
                              return statearr_12014;
                            }();
                            var statearr_12015_12033 = state_12003__$1;
                            statearr_12015_12033[2] = null;
                            statearr_12015_12033[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12004 === 9) {
                              var state_12003__$1 = state_12003;
                              var statearr_12016_12034 = state_12003__$1;
                              statearr_12016_12034[2] = null;
                              statearr_12016_12034[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12004 === 5) {
                                var state_12003__$1 = state_12003;
                                var statearr_12017_12035 = state_12003__$1;
                                statearr_12017_12035[2] = null;
                                statearr_12017_12035[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12004 === 10) {
                                  var inst_11995 = state_12003[2];
                                  var state_12003__$1 = state_12003;
                                  var statearr_12018_12036 = state_12003__$1;
                                  statearr_12018_12036[2] = inst_11995;
                                  statearr_12018_12036[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12004 === 8) {
                                    var inst_11985 = state_12003[7];
                                    var state_12003__$1 = state_12003;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12003__$1, 11, out, inst_11985);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___12026, out);
          return function(switch__5794__auto__, c__5809__auto___12026, out) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_12022 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_12022[0] = state_machine__5795__auto__;
                statearr_12022[1] = 1;
                return statearr_12022;
              };
              var state_machine__5795__auto____1 = function(state_12003) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_12003);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e12023) {
                      if (e12023 instanceof Object) {
                        var ex__5798__auto__ = e12023;
                        var statearr_12024_12037 = state_12003;
                        statearr_12024_12037[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12003);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12023;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12038 = state_12003;
                    state_12003 = G__12038;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_12003) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_12003);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___12026, out);
        }();
        var state__5811__auto__ = function() {
          var statearr_12025 = f__5810__auto__.call(null);
          statearr_12025[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___12026;
          return statearr_12025;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___12026, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t12046 !== "undefined") {
  } else {
    cljs.core.async.t12046 = function(ch, f, map_LT_, meta12047) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta12047 = meta12047;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12046.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t12046.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t12046.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t12046.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t12049 !== "undefined") {
        } else {
          cljs.core.async.t12049 = function(fn1, _, meta12047, map_LT_, f, ch, meta12050) {
            this.fn1 = fn1;
            this._ = _;
            this.meta12047 = meta12047;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta12050 = meta12050;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t12049.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t12049.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t12049.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__12039_SHARP_) {
                  return f1.call(null, p1__12039_SHARP_ == null ? null : self__.f.call(null, p1__12039_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t12049.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_12051) {
              var self__ = this;
              var _12051__$1 = this;
              return self__.meta12050;
            };
          }(___$1);
          cljs.core.async.t12049.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_12051, meta12050__$1) {
              var self__ = this;
              var _12051__$1 = this;
              return new cljs.core.async.t12049(self__.fn1, self__._, self__.meta12047, self__.map_LT_, self__.f, self__.ch, meta12050__$1);
            };
          }(___$1);
          cljs.core.async.t12049.cljs$lang$type = true;
          cljs.core.async.t12049.cljs$lang$ctorStr = "cljs.core.async/t12049";
          cljs.core.async.t12049.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
              return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t12049");
            };
          }(___$1);
          cljs.core.async.__GT_t12049 = function(___$1) {
            return function __GT_t12049(fn1__$1, ___$2, meta12047__$1, map_LT___$1, f__$1, ch__$1, meta12050) {
              return new cljs.core.async.t12049(fn1__$1, ___$2, meta12047__$1, map_LT___$1, f__$1, ch__$1, meta12050);
            };
          }(___$1);
        }
        return new cljs.core.async.t12049(fn1, ___$1, self__.meta12047, self__.map_LT_, self__.f, self__.ch, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 737, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 731, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
        null));
      }());
      if (cljs.core.truth_(function() {
        var and__3596__auto__ = ret;
        if (cljs.core.truth_(and__3596__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3596__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t12046.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t12046.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t12046.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t12046.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12048) {
      var self__ = this;
      var _12048__$1 = this;
      return self__.meta12047;
    };
    cljs.core.async.t12046.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12048, meta12047__$1) {
      var self__ = this;
      var _12048__$1 = this;
      return new cljs.core.async.t12046(self__.ch, self__.f, self__.map_LT_, meta12047__$1);
    };
    cljs.core.async.t12046.cljs$lang$type = true;
    cljs.core.async.t12046.cljs$lang$ctorStr = "cljs.core.async/t12046";
    cljs.core.async.t12046.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t12046");
    };
    cljs.core.async.__GT_t12046 = function __GT_t12046(ch__$1, f__$1, map_LT___$1, meta12047) {
      return new cljs.core.async.t12046(ch__$1, f__$1, map_LT___$1, meta12047);
    };
  }
  return new cljs.core.async.t12046(ch, f, map_LT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 46, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 743, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 722, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t12055 !== "undefined") {
  } else {
    cljs.core.async.t12055 = function(ch, f, map_GT_, meta12056) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta12056 = meta12056;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12055.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t12055.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t12055.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t12055.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t12055.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t12055.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t12055.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12057) {
      var self__ = this;
      var _12057__$1 = this;
      return self__.meta12056;
    };
    cljs.core.async.t12055.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12057, meta12056__$1) {
      var self__ = this;
      var _12057__$1 = this;
      return new cljs.core.async.t12055(self__.ch, self__.f, self__.map_GT_, meta12056__$1);
    };
    cljs.core.async.t12055.cljs$lang$type = true;
    cljs.core.async.t12055.cljs$lang$ctorStr = "cljs.core.async/t12055";
    cljs.core.async.t12055.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t12055");
    };
    cljs.core.async.__GT_t12055 = function __GT_t12055(ch__$1, f__$1, map_GT___$1, meta12056) {
      return new cljs.core.async.t12055(ch__$1, f__$1, map_GT___$1, meta12056);
    };
  }
  return new cljs.core.async.t12055(ch, f, map_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 757, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 748, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t12061 !== "undefined") {
  } else {
    cljs.core.async.t12061 = function(ch, p, filter_GT_, meta12062) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta12062 = meta12062;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12061.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t12061.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t12061.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t12061.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t12061.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t12061.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t12061.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t12061.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12063) {
      var self__ = this;
      var _12063__$1 = this;
      return self__.meta12062;
    };
    cljs.core.async.t12061.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12063, meta12062__$1) {
      var self__ = this;
      var _12063__$1 = this;
      return new cljs.core.async.t12061(self__.ch, self__.p, self__.filter_GT_, meta12062__$1);
    };
    cljs.core.async.t12061.cljs$lang$type = true;
    cljs.core.async.t12061.cljs$lang$ctorStr = "cljs.core.async/t12061";
    cljs.core.async.t12061.cljs$lang$ctorPrWriter = function(this__4190__auto__, writer__4191__auto__, opt__4192__auto__) {
      return cljs.core._write.call(null, writer__4191__auto__, "cljs.core.async/t12061");
    };
    cljs.core.async.__GT_t12061 = function __GT_t12061(ch__$1, p__$1, filter_GT___$1, meta12062) {
      return new cljs.core.async.t12061(ch__$1, p__$1, filter_GT___$1, meta12062);
    };
  }
  return new cljs.core.async.t12061(ch, p, filter_GT_, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 48, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 774, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 762, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/alotor/Projects/GhoulReader/ghoul-reader/dist/js/out/worker/cljs/core/async.cljs"], 
  null));
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5809__auto___12146 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___12146, out) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___12146, out) {
            return function(state_12125) {
              var state_val_12126 = state_12125[1];
              if (state_val_12126 === 7) {
                var inst_12121 = state_12125[2];
                var state_12125__$1 = state_12125;
                var statearr_12127_12147 = state_12125__$1;
                statearr_12127_12147[2] = inst_12121;
                statearr_12127_12147[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12126 === 1) {
                  var state_12125__$1 = state_12125;
                  var statearr_12128_12148 = state_12125__$1;
                  statearr_12128_12148[2] = null;
                  statearr_12128_12148[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12126 === 4) {
                    var inst_12107 = state_12125[7];
                    var inst_12107__$1 = state_12125[2];
                    var inst_12108 = inst_12107__$1 == null;
                    var state_12125__$1 = function() {
                      var statearr_12129 = state_12125;
                      statearr_12129[7] = inst_12107__$1;
                      return statearr_12129;
                    }();
                    if (cljs.core.truth_(inst_12108)) {
                      var statearr_12130_12149 = state_12125__$1;
                      statearr_12130_12149[1] = 5;
                    } else {
                      var statearr_12131_12150 = state_12125__$1;
                      statearr_12131_12150[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12126 === 6) {
                      var inst_12107 = state_12125[7];
                      var inst_12112 = p.call(null, inst_12107);
                      var state_12125__$1 = state_12125;
                      if (cljs.core.truth_(inst_12112)) {
                        var statearr_12132_12151 = state_12125__$1;
                        statearr_12132_12151[1] = 8;
                      } else {
                        var statearr_12133_12152 = state_12125__$1;
                        statearr_12133_12152[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12126 === 3) {
                        var inst_12123 = state_12125[2];
                        var state_12125__$1 = state_12125;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12125__$1, inst_12123);
                      } else {
                        if (state_val_12126 === 2) {
                          var state_12125__$1 = state_12125;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12125__$1, 4, ch);
                        } else {
                          if (state_val_12126 === 11) {
                            var inst_12115 = state_12125[2];
                            var state_12125__$1 = state_12125;
                            var statearr_12134_12153 = state_12125__$1;
                            statearr_12134_12153[2] = inst_12115;
                            statearr_12134_12153[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12126 === 9) {
                              var state_12125__$1 = state_12125;
                              var statearr_12135_12154 = state_12125__$1;
                              statearr_12135_12154[2] = null;
                              statearr_12135_12154[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12126 === 5) {
                                var inst_12110 = cljs.core.async.close_BANG_.call(null, out);
                                var state_12125__$1 = state_12125;
                                var statearr_12136_12155 = state_12125__$1;
                                statearr_12136_12155[2] = inst_12110;
                                statearr_12136_12155[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12126 === 10) {
                                  var inst_12118 = state_12125[2];
                                  var state_12125__$1 = function() {
                                    var statearr_12137 = state_12125;
                                    statearr_12137[8] = inst_12118;
                                    return statearr_12137;
                                  }();
                                  var statearr_12138_12156 = state_12125__$1;
                                  statearr_12138_12156[2] = null;
                                  statearr_12138_12156[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12126 === 8) {
                                    var inst_12107 = state_12125[7];
                                    var state_12125__$1 = state_12125;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12125__$1, 11, out, inst_12107);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___12146, out);
          return function(switch__5794__auto__, c__5809__auto___12146, out) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_12142 = [null, null, null, null, null, null, null, null, null];
                statearr_12142[0] = state_machine__5795__auto__;
                statearr_12142[1] = 1;
                return statearr_12142;
              };
              var state_machine__5795__auto____1 = function(state_12125) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_12125);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e12143) {
                      if (e12143 instanceof Object) {
                        var ex__5798__auto__ = e12143;
                        var statearr_12144_12157 = state_12125;
                        statearr_12144_12157[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12125);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12143;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12158 = state_12125;
                    state_12125 = G__12158;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_12125) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_12125);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___12146, out);
        }();
        var state__5811__auto__ = function() {
          var statearr_12145 = f__5810__auto__.call(null);
          statearr_12145[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___12146;
          return statearr_12145;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___12146, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5809__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto__) {
    return function() {
      var f__5810__auto__ = function() {
        var switch__5794__auto__ = function(c__5809__auto__) {
          return function(state_12324) {
            var state_val_12325 = state_12324[1];
            if (state_val_12325 === 7) {
              var inst_12320 = state_12324[2];
              var state_12324__$1 = state_12324;
              var statearr_12326_12367 = state_12324__$1;
              statearr_12326_12367[2] = inst_12320;
              statearr_12326_12367[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12325 === 20) {
                var inst_12290 = state_12324[7];
                var inst_12301 = state_12324[2];
                var inst_12302 = cljs.core.next.call(null, inst_12290);
                var inst_12276 = inst_12302;
                var inst_12277 = null;
                var inst_12278 = 0;
                var inst_12279 = 0;
                var state_12324__$1 = function() {
                  var statearr_12327 = state_12324;
                  statearr_12327[8] = inst_12276;
                  statearr_12327[9] = inst_12279;
                  statearr_12327[10] = inst_12278;
                  statearr_12327[11] = inst_12301;
                  statearr_12327[12] = inst_12277;
                  return statearr_12327;
                }();
                var statearr_12328_12368 = state_12324__$1;
                statearr_12328_12368[2] = null;
                statearr_12328_12368[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12325 === 1) {
                  var state_12324__$1 = state_12324;
                  var statearr_12329_12369 = state_12324__$1;
                  statearr_12329_12369[2] = null;
                  statearr_12329_12369[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12325 === 4) {
                    var inst_12265 = state_12324[13];
                    var inst_12265__$1 = state_12324[2];
                    var inst_12266 = inst_12265__$1 == null;
                    var state_12324__$1 = function() {
                      var statearr_12330 = state_12324;
                      statearr_12330[13] = inst_12265__$1;
                      return statearr_12330;
                    }();
                    if (cljs.core.truth_(inst_12266)) {
                      var statearr_12331_12370 = state_12324__$1;
                      statearr_12331_12370[1] = 5;
                    } else {
                      var statearr_12332_12371 = state_12324__$1;
                      statearr_12332_12371[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12325 === 15) {
                      var state_12324__$1 = state_12324;
                      var statearr_12336_12372 = state_12324__$1;
                      statearr_12336_12372[2] = null;
                      statearr_12336_12372[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12325 === 21) {
                        var state_12324__$1 = state_12324;
                        var statearr_12337_12373 = state_12324__$1;
                        statearr_12337_12373[2] = null;
                        statearr_12337_12373[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12325 === 13) {
                          var inst_12276 = state_12324[8];
                          var inst_12279 = state_12324[9];
                          var inst_12278 = state_12324[10];
                          var inst_12277 = state_12324[12];
                          var inst_12286 = state_12324[2];
                          var inst_12287 = inst_12279 + 1;
                          var tmp12333 = inst_12276;
                          var tmp12334 = inst_12278;
                          var tmp12335 = inst_12277;
                          var inst_12276__$1 = tmp12333;
                          var inst_12277__$1 = tmp12335;
                          var inst_12278__$1 = tmp12334;
                          var inst_12279__$1 = inst_12287;
                          var state_12324__$1 = function() {
                            var statearr_12338 = state_12324;
                            statearr_12338[8] = inst_12276__$1;
                            statearr_12338[9] = inst_12279__$1;
                            statearr_12338[14] = inst_12286;
                            statearr_12338[10] = inst_12278__$1;
                            statearr_12338[12] = inst_12277__$1;
                            return statearr_12338;
                          }();
                          var statearr_12339_12374 = state_12324__$1;
                          statearr_12339_12374[2] = null;
                          statearr_12339_12374[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12325 === 22) {
                            var state_12324__$1 = state_12324;
                            var statearr_12340_12375 = state_12324__$1;
                            statearr_12340_12375[2] = null;
                            statearr_12340_12375[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12325 === 6) {
                              var inst_12265 = state_12324[13];
                              var inst_12274 = f.call(null, inst_12265);
                              var inst_12275 = cljs.core.seq.call(null, inst_12274);
                              var inst_12276 = inst_12275;
                              var inst_12277 = null;
                              var inst_12278 = 0;
                              var inst_12279 = 0;
                              var state_12324__$1 = function() {
                                var statearr_12341 = state_12324;
                                statearr_12341[8] = inst_12276;
                                statearr_12341[9] = inst_12279;
                                statearr_12341[10] = inst_12278;
                                statearr_12341[12] = inst_12277;
                                return statearr_12341;
                              }();
                              var statearr_12342_12376 = state_12324__$1;
                              statearr_12342_12376[2] = null;
                              statearr_12342_12376[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12325 === 17) {
                                var inst_12290 = state_12324[7];
                                var inst_12294 = cljs.core.chunk_first.call(null, inst_12290);
                                var inst_12295 = cljs.core.chunk_rest.call(null, inst_12290);
                                var inst_12296 = cljs.core.count.call(null, inst_12294);
                                var inst_12276 = inst_12295;
                                var inst_12277 = inst_12294;
                                var inst_12278 = inst_12296;
                                var inst_12279 = 0;
                                var state_12324__$1 = function() {
                                  var statearr_12343 = state_12324;
                                  statearr_12343[8] = inst_12276;
                                  statearr_12343[9] = inst_12279;
                                  statearr_12343[10] = inst_12278;
                                  statearr_12343[12] = inst_12277;
                                  return statearr_12343;
                                }();
                                var statearr_12344_12377 = state_12324__$1;
                                statearr_12344_12377[2] = null;
                                statearr_12344_12377[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12325 === 3) {
                                  var inst_12322 = state_12324[2];
                                  var state_12324__$1 = state_12324;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12324__$1, inst_12322);
                                } else {
                                  if (state_val_12325 === 12) {
                                    var inst_12310 = state_12324[2];
                                    var state_12324__$1 = state_12324;
                                    var statearr_12345_12378 = state_12324__$1;
                                    statearr_12345_12378[2] = inst_12310;
                                    statearr_12345_12378[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12325 === 2) {
                                      var state_12324__$1 = state_12324;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12324__$1, 4, in$);
                                    } else {
                                      if (state_val_12325 === 23) {
                                        var inst_12318 = state_12324[2];
                                        var state_12324__$1 = state_12324;
                                        var statearr_12346_12379 = state_12324__$1;
                                        statearr_12346_12379[2] = inst_12318;
                                        statearr_12346_12379[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12325 === 19) {
                                          var inst_12305 = state_12324[2];
                                          var state_12324__$1 = state_12324;
                                          var statearr_12347_12380 = state_12324__$1;
                                          statearr_12347_12380[2] = inst_12305;
                                          statearr_12347_12380[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12325 === 11) {
                                            var inst_12276 = state_12324[8];
                                            var inst_12290 = state_12324[7];
                                            var inst_12290__$1 = cljs.core.seq.call(null, inst_12276);
                                            var state_12324__$1 = function() {
                                              var statearr_12348 = state_12324;
                                              statearr_12348[7] = inst_12290__$1;
                                              return statearr_12348;
                                            }();
                                            if (inst_12290__$1) {
                                              var statearr_12349_12381 = state_12324__$1;
                                              statearr_12349_12381[1] = 14;
                                            } else {
                                              var statearr_12350_12382 = state_12324__$1;
                                              statearr_12350_12382[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12325 === 9) {
                                              var inst_12312 = state_12324[2];
                                              var inst_12313 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_12324__$1 = function() {
                                                var statearr_12351 = state_12324;
                                                statearr_12351[15] = inst_12312;
                                                return statearr_12351;
                                              }();
                                              if (cljs.core.truth_(inst_12313)) {
                                                var statearr_12352_12383 = state_12324__$1;
                                                statearr_12352_12383[1] = 21;
                                              } else {
                                                var statearr_12353_12384 = state_12324__$1;
                                                statearr_12353_12384[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_12325 === 5) {
                                                var inst_12268 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_12324__$1 = state_12324;
                                                var statearr_12354_12385 = state_12324__$1;
                                                statearr_12354_12385[2] = inst_12268;
                                                statearr_12354_12385[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_12325 === 14) {
                                                  var inst_12290 = state_12324[7];
                                                  var inst_12292 = cljs.core.chunked_seq_QMARK_.call(null, inst_12290);
                                                  var state_12324__$1 = state_12324;
                                                  if (inst_12292) {
                                                    var statearr_12355_12386 = state_12324__$1;
                                                    statearr_12355_12386[1] = 17;
                                                  } else {
                                                    var statearr_12356_12387 = state_12324__$1;
                                                    statearr_12356_12387[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_12325 === 16) {
                                                    var inst_12308 = state_12324[2];
                                                    var state_12324__$1 = state_12324;
                                                    var statearr_12357_12388 = state_12324__$1;
                                                    statearr_12357_12388[2] = inst_12308;
                                                    statearr_12357_12388[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_12325 === 10) {
                                                      var inst_12279 = state_12324[9];
                                                      var inst_12277 = state_12324[12];
                                                      var inst_12284 = cljs.core._nth.call(null, inst_12277, inst_12279);
                                                      var state_12324__$1 = state_12324;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12324__$1, 13, out, inst_12284);
                                                    } else {
                                                      if (state_val_12325 === 18) {
                                                        var inst_12290 = state_12324[7];
                                                        var inst_12299 = cljs.core.first.call(null, inst_12290);
                                                        var state_12324__$1 = state_12324;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12324__$1, 20, out, inst_12299);
                                                      } else {
                                                        if (state_val_12325 === 8) {
                                                          var inst_12279 = state_12324[9];
                                                          var inst_12278 = state_12324[10];
                                                          var inst_12281 = inst_12279 < inst_12278;
                                                          var inst_12282 = inst_12281;
                                                          var state_12324__$1 = state_12324;
                                                          if (cljs.core.truth_(inst_12282)) {
                                                            var statearr_12358_12389 = state_12324__$1;
                                                            statearr_12358_12389[1] = 10;
                                                          } else {
                                                            var statearr_12359_12390 = state_12324__$1;
                                                            statearr_12359_12390[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5809__auto__);
        return function(switch__5794__auto__, c__5809__auto__) {
          return function() {
            var state_machine__5795__auto__ = null;
            var state_machine__5795__auto____0 = function() {
              var statearr_12363 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12363[0] = state_machine__5795__auto__;
              statearr_12363[1] = 1;
              return statearr_12363;
            };
            var state_machine__5795__auto____1 = function(state_12324) {
              while (true) {
                var ret_value__5796__auto__ = function() {
                  try {
                    while (true) {
                      var result__5797__auto__ = switch__5794__auto__.call(null, state_12324);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5797__auto__;
                      }
                      break;
                    }
                  } catch (e12364) {
                    if (e12364 instanceof Object) {
                      var ex__5798__auto__ = e12364;
                      var statearr_12365_12391 = state_12324;
                      statearr_12365_12391[5] = ex__5798__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12324);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12364;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12392 = state_12324;
                  state_12324 = G__12392;
                  continue;
                } else {
                  return ret_value__5796__auto__;
                }
                break;
              }
            };
            state_machine__5795__auto__ = function(state_12324) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5795__auto____0.call(this);
                case 1:
                  return state_machine__5795__auto____1.call(this, state_12324);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
            return state_machine__5795__auto__;
          }();
        }(switch__5794__auto__, c__5809__auto__);
      }();
      var state__5811__auto__ = function() {
        var statearr_12366 = f__5810__auto__.call(null);
        statearr_12366[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto__;
        return statearr_12366;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
    };
  }(c__5809__auto__));
  return c__5809__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5809__auto___12489 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___12489, out) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___12489, out) {
            return function(state_12464) {
              var state_val_12465 = state_12464[1];
              if (state_val_12465 === 7) {
                var inst_12459 = state_12464[2];
                var state_12464__$1 = state_12464;
                var statearr_12466_12490 = state_12464__$1;
                statearr_12466_12490[2] = inst_12459;
                statearr_12466_12490[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12465 === 1) {
                  var inst_12441 = null;
                  var state_12464__$1 = function() {
                    var statearr_12467 = state_12464;
                    statearr_12467[7] = inst_12441;
                    return statearr_12467;
                  }();
                  var statearr_12468_12491 = state_12464__$1;
                  statearr_12468_12491[2] = null;
                  statearr_12468_12491[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12465 === 4) {
                    var inst_12444 = state_12464[8];
                    var inst_12444__$1 = state_12464[2];
                    var inst_12445 = inst_12444__$1 == null;
                    var inst_12446 = cljs.core.not.call(null, inst_12445);
                    var state_12464__$1 = function() {
                      var statearr_12469 = state_12464;
                      statearr_12469[8] = inst_12444__$1;
                      return statearr_12469;
                    }();
                    if (inst_12446) {
                      var statearr_12470_12492 = state_12464__$1;
                      statearr_12470_12492[1] = 5;
                    } else {
                      var statearr_12471_12493 = state_12464__$1;
                      statearr_12471_12493[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12465 === 6) {
                      var state_12464__$1 = state_12464;
                      var statearr_12472_12494 = state_12464__$1;
                      statearr_12472_12494[2] = null;
                      statearr_12472_12494[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12465 === 3) {
                        var inst_12461 = state_12464[2];
                        var inst_12462 = cljs.core.async.close_BANG_.call(null, out);
                        var state_12464__$1 = function() {
                          var statearr_12473 = state_12464;
                          statearr_12473[9] = inst_12461;
                          return statearr_12473;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12464__$1, inst_12462);
                      } else {
                        if (state_val_12465 === 2) {
                          var state_12464__$1 = state_12464;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12464__$1, 4, ch);
                        } else {
                          if (state_val_12465 === 11) {
                            var inst_12444 = state_12464[8];
                            var inst_12453 = state_12464[2];
                            var inst_12441 = inst_12444;
                            var state_12464__$1 = function() {
                              var statearr_12474 = state_12464;
                              statearr_12474[7] = inst_12441;
                              statearr_12474[10] = inst_12453;
                              return statearr_12474;
                            }();
                            var statearr_12475_12495 = state_12464__$1;
                            statearr_12475_12495[2] = null;
                            statearr_12475_12495[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12465 === 9) {
                              var inst_12444 = state_12464[8];
                              var state_12464__$1 = state_12464;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12464__$1, 11, out, inst_12444);
                            } else {
                              if (state_val_12465 === 5) {
                                var inst_12441 = state_12464[7];
                                var inst_12444 = state_12464[8];
                                var inst_12448 = cljs.core._EQ_.call(null, inst_12444, inst_12441);
                                var state_12464__$1 = state_12464;
                                if (inst_12448) {
                                  var statearr_12477_12496 = state_12464__$1;
                                  statearr_12477_12496[1] = 8;
                                } else {
                                  var statearr_12478_12497 = state_12464__$1;
                                  statearr_12478_12497[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12465 === 10) {
                                  var inst_12456 = state_12464[2];
                                  var state_12464__$1 = state_12464;
                                  var statearr_12479_12498 = state_12464__$1;
                                  statearr_12479_12498[2] = inst_12456;
                                  statearr_12479_12498[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12465 === 8) {
                                    var inst_12441 = state_12464[7];
                                    var tmp12476 = inst_12441;
                                    var inst_12441__$1 = tmp12476;
                                    var state_12464__$1 = function() {
                                      var statearr_12480 = state_12464;
                                      statearr_12480[7] = inst_12441__$1;
                                      return statearr_12480;
                                    }();
                                    var statearr_12481_12499 = state_12464__$1;
                                    statearr_12481_12499[2] = null;
                                    statearr_12481_12499[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___12489, out);
          return function(switch__5794__auto__, c__5809__auto___12489, out) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_12485 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_12485[0] = state_machine__5795__auto__;
                statearr_12485[1] = 1;
                return statearr_12485;
              };
              var state_machine__5795__auto____1 = function(state_12464) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_12464);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e12486) {
                      if (e12486 instanceof Object) {
                        var ex__5798__auto__ = e12486;
                        var statearr_12487_12500 = state_12464;
                        statearr_12487_12500[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12464);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12486;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12501 = state_12464;
                    state_12464 = G__12501;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_12464) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_12464);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___12489, out);
        }();
        var state__5811__auto__ = function() {
          var statearr_12488 = f__5810__auto__.call(null);
          statearr_12488[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___12489;
          return statearr_12488;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___12489, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5809__auto___12636 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___12636, out) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___12636, out) {
            return function(state_12606) {
              var state_val_12607 = state_12606[1];
              if (state_val_12607 === 7) {
                var inst_12602 = state_12606[2];
                var state_12606__$1 = state_12606;
                var statearr_12608_12637 = state_12606__$1;
                statearr_12608_12637[2] = inst_12602;
                statearr_12608_12637[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12607 === 1) {
                  var inst_12569 = new Array(n);
                  var inst_12570 = inst_12569;
                  var inst_12571 = 0;
                  var state_12606__$1 = function() {
                    var statearr_12609 = state_12606;
                    statearr_12609[7] = inst_12571;
                    statearr_12609[8] = inst_12570;
                    return statearr_12609;
                  }();
                  var statearr_12610_12638 = state_12606__$1;
                  statearr_12610_12638[2] = null;
                  statearr_12610_12638[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12607 === 4) {
                    var inst_12574 = state_12606[9];
                    var inst_12574__$1 = state_12606[2];
                    var inst_12575 = inst_12574__$1 == null;
                    var inst_12576 = cljs.core.not.call(null, inst_12575);
                    var state_12606__$1 = function() {
                      var statearr_12611 = state_12606;
                      statearr_12611[9] = inst_12574__$1;
                      return statearr_12611;
                    }();
                    if (inst_12576) {
                      var statearr_12612_12639 = state_12606__$1;
                      statearr_12612_12639[1] = 5;
                    } else {
                      var statearr_12613_12640 = state_12606__$1;
                      statearr_12613_12640[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12607 === 15) {
                      var inst_12596 = state_12606[2];
                      var state_12606__$1 = state_12606;
                      var statearr_12614_12641 = state_12606__$1;
                      statearr_12614_12641[2] = inst_12596;
                      statearr_12614_12641[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12607 === 13) {
                        var state_12606__$1 = state_12606;
                        var statearr_12615_12642 = state_12606__$1;
                        statearr_12615_12642[2] = null;
                        statearr_12615_12642[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12607 === 6) {
                          var inst_12571 = state_12606[7];
                          var inst_12592 = inst_12571 > 0;
                          var state_12606__$1 = state_12606;
                          if (cljs.core.truth_(inst_12592)) {
                            var statearr_12616_12643 = state_12606__$1;
                            statearr_12616_12643[1] = 12;
                          } else {
                            var statearr_12617_12644 = state_12606__$1;
                            statearr_12617_12644[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12607 === 3) {
                            var inst_12604 = state_12606[2];
                            var state_12606__$1 = state_12606;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12606__$1, inst_12604);
                          } else {
                            if (state_val_12607 === 12) {
                              var inst_12570 = state_12606[8];
                              var inst_12594 = cljs.core.vec.call(null, inst_12570);
                              var state_12606__$1 = state_12606;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12606__$1, 15, out, inst_12594);
                            } else {
                              if (state_val_12607 === 2) {
                                var state_12606__$1 = state_12606;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12606__$1, 4, ch);
                              } else {
                                if (state_val_12607 === 11) {
                                  var inst_12586 = state_12606[2];
                                  var inst_12587 = new Array(n);
                                  var inst_12570 = inst_12587;
                                  var inst_12571 = 0;
                                  var state_12606__$1 = function() {
                                    var statearr_12618 = state_12606;
                                    statearr_12618[7] = inst_12571;
                                    statearr_12618[8] = inst_12570;
                                    statearr_12618[10] = inst_12586;
                                    return statearr_12618;
                                  }();
                                  var statearr_12619_12645 = state_12606__$1;
                                  statearr_12619_12645[2] = null;
                                  statearr_12619_12645[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12607 === 9) {
                                    var inst_12570 = state_12606[8];
                                    var inst_12584 = cljs.core.vec.call(null, inst_12570);
                                    var state_12606__$1 = state_12606;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12606__$1, 11, out, inst_12584);
                                  } else {
                                    if (state_val_12607 === 5) {
                                      var inst_12579 = state_12606[11];
                                      var inst_12574 = state_12606[9];
                                      var inst_12571 = state_12606[7];
                                      var inst_12570 = state_12606[8];
                                      var inst_12578 = inst_12570[inst_12571] = inst_12574;
                                      var inst_12579__$1 = inst_12571 + 1;
                                      var inst_12580 = inst_12579__$1 < n;
                                      var state_12606__$1 = function() {
                                        var statearr_12620 = state_12606;
                                        statearr_12620[11] = inst_12579__$1;
                                        statearr_12620[12] = inst_12578;
                                        return statearr_12620;
                                      }();
                                      if (cljs.core.truth_(inst_12580)) {
                                        var statearr_12621_12646 = state_12606__$1;
                                        statearr_12621_12646[1] = 8;
                                      } else {
                                        var statearr_12622_12647 = state_12606__$1;
                                        statearr_12622_12647[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12607 === 14) {
                                        var inst_12599 = state_12606[2];
                                        var inst_12600 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_12606__$1 = function() {
                                          var statearr_12624 = state_12606;
                                          statearr_12624[13] = inst_12599;
                                          return statearr_12624;
                                        }();
                                        var statearr_12625_12648 = state_12606__$1;
                                        statearr_12625_12648[2] = inst_12600;
                                        statearr_12625_12648[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12607 === 10) {
                                          var inst_12590 = state_12606[2];
                                          var state_12606__$1 = state_12606;
                                          var statearr_12626_12649 = state_12606__$1;
                                          statearr_12626_12649[2] = inst_12590;
                                          statearr_12626_12649[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12607 === 8) {
                                            var inst_12579 = state_12606[11];
                                            var inst_12570 = state_12606[8];
                                            var tmp12623 = inst_12570;
                                            var inst_12570__$1 = tmp12623;
                                            var inst_12571 = inst_12579;
                                            var state_12606__$1 = function() {
                                              var statearr_12627 = state_12606;
                                              statearr_12627[7] = inst_12571;
                                              statearr_12627[8] = inst_12570__$1;
                                              return statearr_12627;
                                            }();
                                            var statearr_12628_12650 = state_12606__$1;
                                            statearr_12628_12650[2] = null;
                                            statearr_12628_12650[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___12636, out);
          return function(switch__5794__auto__, c__5809__auto___12636, out) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_12632 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12632[0] = state_machine__5795__auto__;
                statearr_12632[1] = 1;
                return statearr_12632;
              };
              var state_machine__5795__auto____1 = function(state_12606) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_12606);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e12633) {
                      if (e12633 instanceof Object) {
                        var ex__5798__auto__ = e12633;
                        var statearr_12634_12651 = state_12606;
                        statearr_12634_12651[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12606);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12633;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12652 = state_12606;
                    state_12606 = G__12652;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_12606) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_12606);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___12636, out);
        }();
        var state__5811__auto__ = function() {
          var statearr_12635 = f__5810__auto__.call(null);
          statearr_12635[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___12636;
          return statearr_12635;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___12636, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5809__auto___12795 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto___12795, out) {
      return function() {
        var f__5810__auto__ = function() {
          var switch__5794__auto__ = function(c__5809__auto___12795, out) {
            return function(state_12765) {
              var state_val_12766 = state_12765[1];
              if (state_val_12766 === 7) {
                var inst_12761 = state_12765[2];
                var state_12765__$1 = state_12765;
                var statearr_12767_12796 = state_12765__$1;
                statearr_12767_12796[2] = inst_12761;
                statearr_12767_12796[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12766 === 1) {
                  var inst_12724 = [];
                  var inst_12725 = inst_12724;
                  var inst_12726 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_12765__$1 = function() {
                    var statearr_12768 = state_12765;
                    statearr_12768[7] = inst_12725;
                    statearr_12768[8] = inst_12726;
                    return statearr_12768;
                  }();
                  var statearr_12769_12797 = state_12765__$1;
                  statearr_12769_12797[2] = null;
                  statearr_12769_12797[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12766 === 4) {
                    var inst_12729 = state_12765[9];
                    var inst_12729__$1 = state_12765[2];
                    var inst_12730 = inst_12729__$1 == null;
                    var inst_12731 = cljs.core.not.call(null, inst_12730);
                    var state_12765__$1 = function() {
                      var statearr_12770 = state_12765;
                      statearr_12770[9] = inst_12729__$1;
                      return statearr_12770;
                    }();
                    if (inst_12731) {
                      var statearr_12771_12798 = state_12765__$1;
                      statearr_12771_12798[1] = 5;
                    } else {
                      var statearr_12772_12799 = state_12765__$1;
                      statearr_12772_12799[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12766 === 15) {
                      var inst_12755 = state_12765[2];
                      var state_12765__$1 = state_12765;
                      var statearr_12773_12800 = state_12765__$1;
                      statearr_12773_12800[2] = inst_12755;
                      statearr_12773_12800[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12766 === 13) {
                        var state_12765__$1 = state_12765;
                        var statearr_12774_12801 = state_12765__$1;
                        statearr_12774_12801[2] = null;
                        statearr_12774_12801[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12766 === 6) {
                          var inst_12725 = state_12765[7];
                          var inst_12750 = inst_12725.length;
                          var inst_12751 = inst_12750 > 0;
                          var state_12765__$1 = state_12765;
                          if (cljs.core.truth_(inst_12751)) {
                            var statearr_12775_12802 = state_12765__$1;
                            statearr_12775_12802[1] = 12;
                          } else {
                            var statearr_12776_12803 = state_12765__$1;
                            statearr_12776_12803[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12766 === 3) {
                            var inst_12763 = state_12765[2];
                            var state_12765__$1 = state_12765;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12765__$1, inst_12763);
                          } else {
                            if (state_val_12766 === 12) {
                              var inst_12725 = state_12765[7];
                              var inst_12753 = cljs.core.vec.call(null, inst_12725);
                              var state_12765__$1 = state_12765;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12765__$1, 15, out, inst_12753);
                            } else {
                              if (state_val_12766 === 2) {
                                var state_12765__$1 = state_12765;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12765__$1, 4, ch);
                              } else {
                                if (state_val_12766 === 11) {
                                  var inst_12733 = state_12765[10];
                                  var inst_12729 = state_12765[9];
                                  var inst_12743 = state_12765[2];
                                  var inst_12744 = [];
                                  var inst_12745 = inst_12744.push(inst_12729);
                                  var inst_12725 = inst_12744;
                                  var inst_12726 = inst_12733;
                                  var state_12765__$1 = function() {
                                    var statearr_12777 = state_12765;
                                    statearr_12777[11] = inst_12745;
                                    statearr_12777[7] = inst_12725;
                                    statearr_12777[12] = inst_12743;
                                    statearr_12777[8] = inst_12726;
                                    return statearr_12777;
                                  }();
                                  var statearr_12778_12804 = state_12765__$1;
                                  statearr_12778_12804[2] = null;
                                  statearr_12778_12804[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12766 === 9) {
                                    var inst_12725 = state_12765[7];
                                    var inst_12741 = cljs.core.vec.call(null, inst_12725);
                                    var state_12765__$1 = state_12765;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12765__$1, 11, out, inst_12741);
                                  } else {
                                    if (state_val_12766 === 5) {
                                      var inst_12726 = state_12765[8];
                                      var inst_12733 = state_12765[10];
                                      var inst_12729 = state_12765[9];
                                      var inst_12733__$1 = f.call(null, inst_12729);
                                      var inst_12734 = cljs.core._EQ_.call(null, inst_12733__$1, inst_12726);
                                      var inst_12735 = cljs.core.keyword_identical_QMARK_.call(null, inst_12726, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_12736 = inst_12734 || inst_12735;
                                      var state_12765__$1 = function() {
                                        var statearr_12779 = state_12765;
                                        statearr_12779[10] = inst_12733__$1;
                                        return statearr_12779;
                                      }();
                                      if (cljs.core.truth_(inst_12736)) {
                                        var statearr_12780_12805 = state_12765__$1;
                                        statearr_12780_12805[1] = 8;
                                      } else {
                                        var statearr_12781_12806 = state_12765__$1;
                                        statearr_12781_12806[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12766 === 14) {
                                        var inst_12758 = state_12765[2];
                                        var inst_12759 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_12765__$1 = function() {
                                          var statearr_12783 = state_12765;
                                          statearr_12783[13] = inst_12758;
                                          return statearr_12783;
                                        }();
                                        var statearr_12784_12807 = state_12765__$1;
                                        statearr_12784_12807[2] = inst_12759;
                                        statearr_12784_12807[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12766 === 10) {
                                          var inst_12748 = state_12765[2];
                                          var state_12765__$1 = state_12765;
                                          var statearr_12785_12808 = state_12765__$1;
                                          statearr_12785_12808[2] = inst_12748;
                                          statearr_12785_12808[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12766 === 8) {
                                            var inst_12725 = state_12765[7];
                                            var inst_12733 = state_12765[10];
                                            var inst_12729 = state_12765[9];
                                            var inst_12738 = inst_12725.push(inst_12729);
                                            var tmp12782 = inst_12725;
                                            var inst_12725__$1 = tmp12782;
                                            var inst_12726 = inst_12733;
                                            var state_12765__$1 = function() {
                                              var statearr_12786 = state_12765;
                                              statearr_12786[7] = inst_12725__$1;
                                              statearr_12786[14] = inst_12738;
                                              statearr_12786[8] = inst_12726;
                                              return statearr_12786;
                                            }();
                                            var statearr_12787_12809 = state_12765__$1;
                                            statearr_12787_12809[2] = null;
                                            statearr_12787_12809[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__5809__auto___12795, out);
          return function(switch__5794__auto__, c__5809__auto___12795, out) {
            return function() {
              var state_machine__5795__auto__ = null;
              var state_machine__5795__auto____0 = function() {
                var statearr_12791 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12791[0] = state_machine__5795__auto__;
                statearr_12791[1] = 1;
                return statearr_12791;
              };
              var state_machine__5795__auto____1 = function(state_12765) {
                while (true) {
                  var ret_value__5796__auto__ = function() {
                    try {
                      while (true) {
                        var result__5797__auto__ = switch__5794__auto__.call(null, state_12765);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__5797__auto__;
                        }
                        break;
                      }
                    } catch (e12792) {
                      if (e12792 instanceof Object) {
                        var ex__5798__auto__ = e12792;
                        var statearr_12793_12810 = state_12765;
                        statearr_12793_12810[5] = ex__5798__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12765);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12792;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12811 = state_12765;
                    state_12765 = G__12811;
                    continue;
                  } else {
                    return ret_value__5796__auto__;
                  }
                  break;
                }
              };
              state_machine__5795__auto__ = function(state_12765) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5795__auto____0.call(this);
                  case 1:
                    return state_machine__5795__auto____1.call(this, state_12765);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
              state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
              return state_machine__5795__auto__;
            }();
          }(switch__5794__auto__, c__5809__auto___12795, out);
        }();
        var state__5811__auto__ = function() {
          var statearr_12794 = f__5810__auto__.call(null);
          statearr_12794[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto___12795;
          return statearr_12794;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
      };
    }(c__5809__auto___12795, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("ghoul.repository.item");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
ghoul.repository.item.database = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
ghoul.repository.item.database_name = "ghoul-reader";
ghoul.repository.item.database_version = 10;
ghoul.repository.item.feeds_storage_name = "feeds";
ghoul.repository.item.cb_error = function cb_error(e) {
  return console.log("error ", e);
};
ghoul.repository.item.init_database = function init_database() {
  var ret_chan = cljs.core.async.chan.call(null);
  var request = indexedDB.open(ghoul.repository.item.database_name, ghoul.repository.item.database_version);
  var cb_upgrade = function(ret_chan, request) {
    return function(e) {
      var db = e.target.result;
      if (cljs.core.truth_(db.objectStoreNames.contains(ghoul.repository.item.feeds_storage_name))) {
        db.deleteObjectStore(ghoul.repository.item.feeds_storage_name);
      } else {
      }
      var feeds_object_store = db.createObjectStore(ghoul.repository.item.feeds_storage_name, {"keyPath":["uid", "feeduid"]});
      feeds_object_store.createIndex("uid", "uid", {"unique":false});
      feeds_object_store.createIndex("feeduid", "feeduid", {"unique":false});
      return feeds_object_store.createIndex("pubDate", "pubDate", {"unique":false});
    };
  }(ret_chan, request);
  var cb_success = function(ret_chan, request, cb_upgrade) {
    return function(e) {
      cljs.core.swap_BANG_.call(null, ghoul.repository.item.database, cljs.core.assoc, new cljs.core.Keyword(null, "db", "db", 993250759), e.target.result);
      return cljs.core.async.put_BANG_.call(null, ret_chan, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "result", "result", 1415092211), "ok"], null));
    };
  }(ret_chan, request, cb_upgrade);
  request.onupgradeneeded = cb_upgrade;
  request.onsuccess = cb_success;
  request.onerror = ghoul.repository.item.cb_error;
  return ret_chan;
};
ghoul.repository.item.add_item = function add_item(feed) {
  var ret_chan = cljs.core.async.chan.call(null);
  var trans = (new cljs.core.Keyword(null, "db", "db", 993250759)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ghoul.repository.item.database)).transaction([ghoul.repository.item.feeds_storage_name], "readwrite");
  var store = trans.objectStore(ghoul.repository.item.feeds_storage_name);
  var request = store.put(cljs.core.clj__GT_js.call(null, feed));
  var cb_complete = function(ret_chan, trans, store, request) {
    return function(e) {
      return cljs.core.async.put_BANG_.call(null, ret_chan, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "result", "result", 1415092211), "ok"], null));
    };
  }(ret_chan, trans, store, request);
  trans.oncomplete = cb_complete;
  trans.onerror = ghoul.repository.item.cb_error;
  return ret_chan;
};
ghoul.repository.item.retrieve_all_items = function() {
  var retrieve_all_items__delegate = function(p__13293) {
    var map__13295 = p__13293;
    var map__13295__$1 = cljs.core.seq_QMARK_.call(null, map__13295) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13295) : map__13295;
    var feeduid_list = cljs.core.get.call(null, map__13295__$1, new cljs.core.Keyword(null, "feeduid-list", "feeduid-list", 1640476731));
    var ret_chan = cljs.core.async.chan.call(null);
    var temp_list = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
    var trans = (new cljs.core.Keyword(null, "db", "db", 993250759)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ghoul.repository.item.database)).transaction([ghoul.repository.item.feeds_storage_name], "readwrite");
    var store = trans.objectStore(ghoul.repository.item.feeds_storage_name);
    var date_index = store.index("pubDate");
    var cursor = date_index.openCursor(null, "prev");
    var cb_success = function(ret_chan, temp_list, trans, store, date_index, cursor, map__13295, map__13295__$1, feeduid_list) {
      return function(e) {
        var res = e.target.result;
        if (!(res == null)) {
          if (feeduid_list == null) {
            cljs.core.swap_BANG_.call(null, temp_list, cljs.core.conj, cljs.core.js__GT_clj.call(null, res.value, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true));
          } else {
            var feeduid_13296 = res.value["feeduid"];
            if (cljs.core.truth_(cljs.core.some.call(null, function(feeduid_13296, res, ret_chan, temp_list, trans, store, date_index, cursor, map__13295, map__13295__$1, feeduid_list) {
              return function(p1__13292_SHARP_) {
                return cljs.core._EQ_.call(null, feeduid_13296, p1__13292_SHARP_);
              };
            }(feeduid_13296, res, ret_chan, temp_list, trans, store, date_index, cursor, map__13295, map__13295__$1, feeduid_list), feeduid_list))) {
              cljs.core.swap_BANG_.call(null, temp_list, cljs.core.conj, cljs.core.js__GT_clj.call(null, res.value, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true));
            } else {
            }
          }
          return res.continue();
        } else {
          return cljs.core.async.put_BANG_.call(null, ret_chan, cljs.core.deref.call(null, temp_list));
        }
      };
    }(ret_chan, temp_list, trans, store, date_index, cursor, map__13295, map__13295__$1, feeduid_list);
    cursor.onsuccess = cb_success;
    cursor.onerror = ghoul.repository.item.cb_error;
    return ret_chan;
  };
  var retrieve_all_items = function(var_args) {
    var p__13293 = null;
    if (arguments.length > 0) {
      p__13293 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return retrieve_all_items__delegate.call(this, p__13293);
  };
  retrieve_all_items.cljs$lang$maxFixedArity = 0;
  retrieve_all_items.cljs$lang$applyTo = function(arglist__13297) {
    var p__13293 = cljs.core.seq(arglist__13297);
    return retrieve_all_items__delegate(p__13293);
  };
  retrieve_all_items.cljs$core$IFn$_invoke$arity$variadic = retrieve_all_items__delegate;
  return retrieve_all_items;
}();
ghoul.repository.item.retrieve_items_by_uid = function retrieve_items_by_uid(uid_list) {
  return ghoul.repository.item.retrieve_all_items.call(null, new cljs.core.Keyword(null, "feeduid-list", "feeduid-list", 1640476731), uid_list);
};
ghoul.repository.item.get_item = function get_item(feed_uid, uid) {
  var ret_chan = cljs.core.async.chan.call(null);
  var trans = (new cljs.core.Keyword(null, "db", "db", 993250759)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ghoul.repository.item.database)).transaction([ghoul.repository.item.feeds_storage_name], "readwrite");
  var store = trans.objectStore(ghoul.repository.item.feeds_storage_name);
  var key_range = IDBKeyRange.only([uid, feed_uid]);
  var cursor = store.openCursor(key_range);
  var cb_success = function(ret_chan, trans, store, key_range, cursor) {
    return function(e) {
      var res = e.target.result;
      if (!(res == null)) {
        return cljs.core.async.put_BANG_.call(null, ret_chan, cljs.core.js__GT_clj.call(null, res.value, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true));
      } else {
        return cljs.core.async.put_BANG_.call(null, ret_chan, new cljs.core.Keyword(null, "not-found", "not-found", -629079980));
      }
    };
  }(ret_chan, trans, store, key_range, cursor);
  cursor.onsuccess = cb_success;
  cursor.onerror = ghoul.repository.item.cb_error;
  return ret_chan;
};
ghoul.repository.item.clear = function clear() {
  var ret_chan = cljs.core.async.chan.call(null);
  var trans = (new cljs.core.Keyword(null, "db", "db", 993250759)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ghoul.repository.item.database)).transaction([ghoul.repository.item.feeds_storage_name], "readwrite");
  var store = trans.objectStore(ghoul.repository.item.feeds_storage_name);
  return store.clear();
};
goog.provide("goog.i18n.DateTimeSymbols");
goog.provide("goog.i18n.DateTimeSymbols_af");
goog.provide("goog.i18n.DateTimeSymbols_am");
goog.provide("goog.i18n.DateTimeSymbols_ar");
goog.provide("goog.i18n.DateTimeSymbols_az");
goog.provide("goog.i18n.DateTimeSymbols_bg");
goog.provide("goog.i18n.DateTimeSymbols_bn");
goog.provide("goog.i18n.DateTimeSymbols_br");
goog.provide("goog.i18n.DateTimeSymbols_ca");
goog.provide("goog.i18n.DateTimeSymbols_chr");
goog.provide("goog.i18n.DateTimeSymbols_cs");
goog.provide("goog.i18n.DateTimeSymbols_cy");
goog.provide("goog.i18n.DateTimeSymbols_da");
goog.provide("goog.i18n.DateTimeSymbols_de");
goog.provide("goog.i18n.DateTimeSymbols_de_AT");
goog.provide("goog.i18n.DateTimeSymbols_de_CH");
goog.provide("goog.i18n.DateTimeSymbols_el");
goog.provide("goog.i18n.DateTimeSymbols_en");
goog.provide("goog.i18n.DateTimeSymbols_en_AU");
goog.provide("goog.i18n.DateTimeSymbols_en_GB");
goog.provide("goog.i18n.DateTimeSymbols_en_IE");
goog.provide("goog.i18n.DateTimeSymbols_en_IN");
goog.provide("goog.i18n.DateTimeSymbols_en_ISO");
goog.provide("goog.i18n.DateTimeSymbols_en_SG");
goog.provide("goog.i18n.DateTimeSymbols_en_US");
goog.provide("goog.i18n.DateTimeSymbols_en_ZA");
goog.provide("goog.i18n.DateTimeSymbols_es");
goog.provide("goog.i18n.DateTimeSymbols_es_419");
goog.provide("goog.i18n.DateTimeSymbols_es_ES");
goog.provide("goog.i18n.DateTimeSymbols_et");
goog.provide("goog.i18n.DateTimeSymbols_eu");
goog.provide("goog.i18n.DateTimeSymbols_fa");
goog.provide("goog.i18n.DateTimeSymbols_fi");
goog.provide("goog.i18n.DateTimeSymbols_fil");
goog.provide("goog.i18n.DateTimeSymbols_fr");
goog.provide("goog.i18n.DateTimeSymbols_fr_CA");
goog.provide("goog.i18n.DateTimeSymbols_gl");
goog.provide("goog.i18n.DateTimeSymbols_gsw");
goog.provide("goog.i18n.DateTimeSymbols_gu");
goog.provide("goog.i18n.DateTimeSymbols_haw");
goog.provide("goog.i18n.DateTimeSymbols_he");
goog.provide("goog.i18n.DateTimeSymbols_hi");
goog.provide("goog.i18n.DateTimeSymbols_hr");
goog.provide("goog.i18n.DateTimeSymbols_hu");
goog.provide("goog.i18n.DateTimeSymbols_hy");
goog.provide("goog.i18n.DateTimeSymbols_id");
goog.provide("goog.i18n.DateTimeSymbols_in");
goog.provide("goog.i18n.DateTimeSymbols_is");
goog.provide("goog.i18n.DateTimeSymbols_it");
goog.provide("goog.i18n.DateTimeSymbols_iw");
goog.provide("goog.i18n.DateTimeSymbols_ja");
goog.provide("goog.i18n.DateTimeSymbols_ka");
goog.provide("goog.i18n.DateTimeSymbols_kk");
goog.provide("goog.i18n.DateTimeSymbols_km");
goog.provide("goog.i18n.DateTimeSymbols_kn");
goog.provide("goog.i18n.DateTimeSymbols_ko");
goog.provide("goog.i18n.DateTimeSymbols_ky");
goog.provide("goog.i18n.DateTimeSymbols_ln");
goog.provide("goog.i18n.DateTimeSymbols_lo");
goog.provide("goog.i18n.DateTimeSymbols_lt");
goog.provide("goog.i18n.DateTimeSymbols_lv");
goog.provide("goog.i18n.DateTimeSymbols_mk");
goog.provide("goog.i18n.DateTimeSymbols_ml");
goog.provide("goog.i18n.DateTimeSymbols_mn");
goog.provide("goog.i18n.DateTimeSymbols_mr");
goog.provide("goog.i18n.DateTimeSymbols_ms");
goog.provide("goog.i18n.DateTimeSymbols_mt");
goog.provide("goog.i18n.DateTimeSymbols_my");
goog.provide("goog.i18n.DateTimeSymbols_nb");
goog.provide("goog.i18n.DateTimeSymbols_ne");
goog.provide("goog.i18n.DateTimeSymbols_nl");
goog.provide("goog.i18n.DateTimeSymbols_no");
goog.provide("goog.i18n.DateTimeSymbols_no_NO");
goog.provide("goog.i18n.DateTimeSymbols_or");
goog.provide("goog.i18n.DateTimeSymbols_pa");
goog.provide("goog.i18n.DateTimeSymbols_pl");
goog.provide("goog.i18n.DateTimeSymbols_pt");
goog.provide("goog.i18n.DateTimeSymbols_pt_BR");
goog.provide("goog.i18n.DateTimeSymbols_pt_PT");
goog.provide("goog.i18n.DateTimeSymbols_ro");
goog.provide("goog.i18n.DateTimeSymbols_ru");
goog.provide("goog.i18n.DateTimeSymbols_si");
goog.provide("goog.i18n.DateTimeSymbols_sk");
goog.provide("goog.i18n.DateTimeSymbols_sl");
goog.provide("goog.i18n.DateTimeSymbols_sq");
goog.provide("goog.i18n.DateTimeSymbols_sr");
goog.provide("goog.i18n.DateTimeSymbols_sv");
goog.provide("goog.i18n.DateTimeSymbols_sw");
goog.provide("goog.i18n.DateTimeSymbols_ta");
goog.provide("goog.i18n.DateTimeSymbols_te");
goog.provide("goog.i18n.DateTimeSymbols_th");
goog.provide("goog.i18n.DateTimeSymbols_tl");
goog.provide("goog.i18n.DateTimeSymbols_tr");
goog.provide("goog.i18n.DateTimeSymbols_uk");
goog.provide("goog.i18n.DateTimeSymbols_ur");
goog.provide("goog.i18n.DateTimeSymbols_uz");
goog.provide("goog.i18n.DateTimeSymbols_vi");
goog.provide("goog.i18n.DateTimeSymbols_zh");
goog.provide("goog.i18n.DateTimeSymbols_zh_CN");
goog.provide("goog.i18n.DateTimeSymbols_zh_HK");
goog.provide("goog.i18n.DateTimeSymbols_zh_TW");
goog.provide("goog.i18n.DateTimeSymbols_zu");
goog.i18n.DateTimeSymbols_en_ISO = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss v", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], AVAILABLEFORMATS:{"Md":"M/d", 
"MMMMd":"MMMM d", "MMMd":"MMM d"}, FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_af = {ERAS:["v.C.", "n.C."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", 
"Oktober", "November", "Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], STANDALONEWEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], SHORTWEEKDAYS:["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"], STANDALONESHORTWEEKDAYS:["So", 
"Ma", "Di", "Wo", "Do", "Vr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], AMPMS:["vm.", "nm."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_am = {ERAS:["\u12d3/\u12d3", "\u12d3/\u121d"], ERANAMES:["\u12d3\u1218\u1270 \u12d3\u1208\u121d", "\u12d3\u1218\u1270 \u121d\u1215\u1228\u1275"], NARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], STANDALONENARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], MONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", 
"\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", "\u12a6\u12ad\u1270\u12cd\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], STANDALONEMONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", "\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", 
"\u12a6\u12ad\u1276\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], SHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1270", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], STANDALONESHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", 
"\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1276", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], WEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONEWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], SHORTWEEKDAYS:["\u12a5\u1211\u12f5", 
"\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONESHORTWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], NARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], STANDALONENARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], SHORTQUARTERS:["\u1229\u12651", 
"\u1229\u12652", "\u1229\u12653", "\u1229\u12654"], QUARTERS:["1\u129b\u12cd \u1229\u1265", "\u1201\u1208\u1270\u129b\u12cd \u1229\u1265", "3\u129b\u12cd \u1229\u1265", "4\u129b\u12cd \u1229\u1265"], AMPMS:["\u1325\u12cb\u1275", "\u12a8\u1230\u12d3\u1275"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ar = {ZERODIGIT:1632, ERAS:["\u0642.\u0645", "\u0645"], ERANAMES:["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0645\u064a\u0644\u0627\u062f\u064a"], NARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], STANDALONENARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], MONTHS:["\u064a\u0646\u0627\u064a\u0631", 
"\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", 
"\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", 
"\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", 
"\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], 
STANDALONEWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], SHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", 
"\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], STANDALONESHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], NARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", 
"\u062c", "\u0633"], STANDALONENARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"], SHORTQUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], QUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", 
"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], AMPMS:["\u0635", "\u0645"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "dd\u200f/MM\u200f/y", "d\u200f/M\u200f/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_az = {ERAS:["e.\u0259.", "b.e."], ERANAMES:["eram\u0131zdan \u0259vv\u0259l", "bizim eram\u0131z\u0131n"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avqust", "sentyabr", "oktyabr", "noyabr", "dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "\u0130yun", "\u0130yul", 
"Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], SHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], STANDALONESHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], WEEKDAYS:["bazar", "bazar ert\u0259si", "\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], STANDALONEWEEKDAYS:["bazar", "bazar ert\u0259si", 
"\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], SHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C", "\u015e."], STANDALONESHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C", "\u015e."], NARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], STANDALONENARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], SHORTQUARTERS:["1-ci kv.", "2-ci kv.", "3-c\u00fc kv.", 
"4-c\u00fc kv."], QUARTERS:["1-ci kvartal", "2-ci kvartal", "3-c\u00fc kvartal", "4-c\u00fc kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_bg = {ERAS:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], ERANAMES:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], NARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", 
"\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", 
"\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", 
"\u043f", "\u0441"], SHORTQUARTERS:["1 \u0442\u0440\u0438\u043c.", "2 \u0442\u0440\u0438\u043c.", "3 \u0442\u0440\u0438\u043c.", "4 \u0442\u0440\u0438\u043c."], QUARTERS:["1-\u0432\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "2-\u0440\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "3-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "4-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435"], AMPMS:["\u043f\u0440.\u043e\u0431.", 
"\u0441\u043b.\u043e\u0431."], DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d.MM.y '\u0433'.", "d.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bn = {ZERODIGIT:2534, ERAS:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], ERANAMES:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], NARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", 
"\u09a1\u09bf"], STANDALONENARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", "\u09a1\u09bf"], MONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", 
"\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONEMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], SHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONESHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", 
"\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], WEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", 
"\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], STANDALONEWEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], SHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", 
"\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], STANDALONESHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], NARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], 
STANDALONENARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], SHORTQUARTERS:["\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e7", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e8", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e9", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09ea"], QUARTERS:["\u09aa\u09cd\u09b0\u09a5\u09ae \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u09a6\u09cd\u09ac\u09bf\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", 
"\u09a4\u09c3\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5 \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:4, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_br = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], STANDALONEMONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], 
SHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], STANDALONESHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], WEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], STANDALONEWEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], SHORTWEEKDAYS:["sul", "lun", "meu.", "mer.", "yaou", "gwe.", "sad."], STANDALONESHORTWEEKDAYS:["sul", 
"lun", "meu.", "mer.", "yaou", "gwe.", "sad."], NARROWWEEKDAYS:["su", "lu", "mz", "mc", "ya", "gw", "sa"], STANDALONENARROWWEEKDAYS:["su", "lu", "mz", "mc", "ya", "gw", "sa"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], 
FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ca = {ERAS:["aC", "dC"], ERANAMES:["abans de Crist", "despr\u00e9s de Crist"], NARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], STANDALONENARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], MONTHS:["gener", "febrer", "mar\u00e7", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"], STANDALONEMONTHS:["gener", "febrer", "mar\u00e7", "abril", "maig", "juny", 
"juliol", "agost", "setembre", "octubre", "novembre", "desembre"], SHORTMONTHS:["gen.", "feb.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], STANDALONESHORTMONTHS:["gen.", "feb.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], WEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], STANDALONEWEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], SHORTWEEKDAYS:["dg.", 
"dl.", "dt.", "dc.", "dj.", "dv.", "ds."], STANDALONESHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], NARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], STANDALONENARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], SHORTQUARTERS:["1T", "2T", "3T", "4T"], QUARTERS:["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d MMMM 'de' y", "d MMMM 'de' y", "dd/MM/y", "d/M/yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", 
"H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_chr = {ERAS:["\u13a4\u13d3\u13b7\u13b8", "\u13a4\u13b6\u13d0\u13c5"], ERANAMES:["\u13cf \u13e5\u13cc \u13be\u13d5\u13b2\u13cd\u13ac\u13be", "\u13a0\u13a9\u13c3\u13ae\u13b5\u13d3\u13cd\u13d7\u13f1 \u13a0\u13d5\u13d8\u13f1\u13cd\u13ac \u13f1\u13b0\u13e9 \u13e7\u13d3\u13c2\u13b8\u13a2\u13cd\u13d7"], NARROWMONTHS:["\u13a4", "\u13a7", "\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], STANDALONENARROWMONTHS:["\u13a4", "\u13a7", 
"\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], MONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", "\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], STANDALONEMONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", 
"\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], SHORTMONTHS:["\u13a4\u13c3", "\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], STANDALONESHORTMONTHS:["\u13a4\u13c3", 
"\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], WEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", "\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], STANDALONEWEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", 
"\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], SHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", "\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], STANDALONESHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", 
"\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], NARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], STANDALONENARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["\u13cc\u13be\u13b4", "\u13d2\u13af\u13f1\u13a2\u13d7\u13e2"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_cs = {ERAS:["p\u0159. n. l.", "n. l."], ERANAMES:["p\u0159. n. l.", "n. l."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["l", "\u00fa", "b", "d", "k", "\u010d", "\u010d", "s", "z", "\u0159", "l", "p"], MONTHS:["ledna", "\u00fanora", "b\u0159ezna", "dubna", "kv\u011btna", "\u010dervna", "\u010dervence", "srpna", "z\u00e1\u0159\u00ed", "\u0159\u00edjna", "listopadu", "prosince"], STANDALONEMONTHS:["leden", "\u00fanor", 
"b\u0159ezen", "duben", "kv\u011bten", "\u010derven", "\u010dervenec", "srpen", "z\u00e1\u0159\u00ed", "\u0159\u00edjen", "listopad", "prosinec"], SHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], STANDALONESHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], WEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", 
"st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], STANDALONEWEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], SHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], NARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], SHORTQUARTERS:["Q1", "Q2", 
"Q3", "Q4"], QUARTERS:["1. \u010dtvrtlet\u00ed", "2. \u010dtvrtlet\u00ed", "3. \u010dtvrtlet\u00ed", "4. \u010dtvrtlet\u00ed"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. M. y", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_cy = {ERAS:["CC", "OC"], ERANAMES:["Cyn Crist", "Oed Crist"], NARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], STANDALONENARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], MONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"], STANDALONEMONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", 
"Tachwedd", "Rhagfyr"], SHORTMONTHS:["Ion", "Chwef", "Mawrth", "Ebrill", "Mai", "Meh", "Gorff", "Awst", "Medi", "Hyd", "Tach", "Rhag"], STANDALONESHORTMONTHS:["Ion", "Chw", "Maw", "Ebr", "Mai", "Meh", "Gor", "Awst", "Medi", "Hyd", "Tach", "Rhag"], WEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], STANDALONEWEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], SHORTWEEKDAYS:["Sul", "Llun", 
"Maw", "Mer", "Iau", "Gwen", "Sad"], STANDALONESHORTWEEKDAYS:["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"], NARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], STANDALONENARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], SHORTQUARTERS:["Ch1", "Ch2", "Ch3", "Ch4"], QUARTERS:["Chwarter 1af", "2il chwarter", "3ydd chwarter", "4ydd chwarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} 'am' {0}", "{1} 'am' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_da = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", 
"december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], 
STANDALONESHORTWEEKDAYS:["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE 'den' d. MMMM y", "d. MMM y", "dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", "{1} 'kl.' {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", 
"November", "Dezember"], SHORTMONTHS:["Jan.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", 
"Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", 
"{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_AT = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", 
"Oktober", "November", "Dezember"], SHORTMONTHS:["J\u00e4n.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["J\u00e4n", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", 
"Mi.", "Do.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_CH = goog.i18n.DateTimeSymbols_de;
goog.i18n.DateTimeSymbols_el = {ERAS:["\u03c0.\u03a7.", "\u03bc.\u03a7."], ERANAMES:["\u03c0.\u03a7.", "\u03bc.\u03a7."], NARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], STANDALONENARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], MONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", 
"\u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5", "\u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5", "\u039c\u03b1\u0390\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5", "\u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5", "\u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5", "\u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5"], 
STANDALONEMONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2", "\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2", "\u039c\u03ac\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2", "\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2", "\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", 
"\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2"], SHORTMONTHS:["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03b1\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03b1\u0390", "\u0399\u03bf\u03c5\u03bd", "\u0399\u03bf\u03c5\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03b5", "\u0394\u03b5\u03ba"], STANDALONESHORTMONTHS:["\u0399\u03b1\u03bd", 
"\u03a6\u03b5\u03b2", "\u039c\u03ac\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03ac\u03b9", "\u0399\u03bf\u03cd\u03bd", "\u0399\u03bf\u03cd\u03bb", "\u0391\u03cd\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03ad", "\u0394\u03b5\u03ba"], WEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", 
"\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], STANDALONEWEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], SHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", 
"\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], STANDALONESHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], NARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], STANDALONENARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], SHORTQUARTERS:["\u03a41", "\u03a42", "\u03a43", "\u03a44"], QUARTERS:["1\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", 
"2\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "3\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "4\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf"], AMPMS:["\u03c0.\u03bc.", "\u03bc.\u03bc."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} - {0}", "{1} - {0}", "{1} - {0}", "{1} - {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_AU = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_GB = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IE = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:2};
goog.i18n.DateTimeSymbols_en_IN = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_SG = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_US = goog.i18n.DateTimeSymbols_en;
goog.i18n.DateTimeSymbols_en_ZA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "y/MM/dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", 
"Octubre", "Noviembre", "Diciembre"], SHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic."], STANDALONESHORTMONTHS:["Ene.", "Feb.", "Mar.", "Abr.", "May.", "Jun.", "Jul.", "Ago.", "Sept.", "Oct.", "Nov.", "Dic."], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Lunes", "Martes", "Mi\u00e9rcoles", "Jueves", "Viernes", "S\u00e1bado"], SHORTWEEKDAYS:["dom.", "lun.", 
"mar.", "mi\u00e9.", "jue.", "vie.", "s\u00e1b."], STANDALONESHORTWEEKDAYS:["Dom.", "Lun.", "Mar.", "Mi\u00e9.", "Jue.", "Vie.", "S\u00e1b."], NARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.er trimestre", "2.\u00ba trimestre", "3.er trimestre", "4.\u00ba trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d/M/y", "d/M/yy"], TIMEFORMATS:["H:mm:ss (zzzz)", 
"H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_es_419 = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_es_ES = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_et = {ERAS:["e.m.a.", "m.a.j."], ERANAMES:["enne meie aega", "meie aja j\u00e4rgi"], NARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], STANDALONEMONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", 
"august", "september", "oktoober", "november", "detsember"], SHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], STANDALONESHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], WEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", "kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], STANDALONEWEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", 
"kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], SHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONESHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], NARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONENARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["H:mm.ss zzzz", 
"H:mm.ss z", "H:mm.ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_eu = {ERAS:["K.a.", "K.o."], ERANAMES:["K.a.", "K.o."], NARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], STANDALONENARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], MONTHS:["urtarrilak", "otsailak", "martxoak", "apirilak", "maiatzak", "ekainak", "uztailak", "abuztuak", "irailak", "urriak", "azaroak", "abenduak"], STANDALONEMONTHS:["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", 
"urria", "azaroa", "abendua"], SHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], STANDALONESHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], WEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], STANDALONEWEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], SHORTWEEKDAYS:["ig.", "al.", "ar.", 
"az.", "og.", "or.", "lr."], STANDALONESHORTWEEKDAYS:["ig.", "al.", "ar.", "az.", "og.", "or.", "lr."], NARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], STANDALONENARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], SHORTQUARTERS:["1Hh", "2Hh", "3Hh", "4Hh"], QUARTERS:["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], AMPMS:["AM", "PM"], DATEFORMATS:["y('e')'ko' MMMM d, EEEE", "y('e')'ko' MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fa = {ZERODIGIT:1776, ERAS:["\u0642.\u0645.", "\u0645."], ERANAMES:["\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f", "\u0645\u06cc\u0644\u0627\u062f\u06cc"], NARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], STANDALONENARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], MONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", 
"\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONEMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", 
"\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], SHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", "\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", 
"\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", 
"\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], WEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONEWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", 
"\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], SHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONESHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", 
"\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], NARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], STANDALONENARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], SHORTQUARTERS:["\u0633\u200c\u0645\u06f1", "\u0633\u200c\u0645\u06f2", "\u0633\u200c\u0645\u06f3", 
"\u0633\u200c\u0645\u06f4"], QUARTERS:["\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0627\u0648\u0644", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u062f\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0633\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0686\u0647\u0627\u0631\u0645"], AMPMS:["\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631", "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", 
"y/M/d"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c\u200f {0}", "{1}\u060c\u200f {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[3, 4], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_fi = {ERAS:["eKr.", "jKr."], ERANAMES:["ennen Kristuksen syntym\u00e4\u00e4", "j\u00e4lkeen Kristuksen syntym\u00e4n"], NARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], STANDALONENARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], MONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONEMONTHS:["tammikuu", 
"helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kes\u00e4kuu", "hein\u00e4kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], SHORTMONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONESHORTMONTHS:["tammi", "helmi", "maalis", "huhti", "touko", "kes\u00e4", "hein\u00e4", "elo", "syys", "loka", "marras", "joulu"], WEEKDAYS:["sunnuntaina", "maanantaina", 
"tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"], STANDALONEWEEKDAYS:["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], SHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], STANDALONESHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], NARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], SHORTQUARTERS:["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], QUARTERS:["1. nelj\u00e4nnes", 
"2. nelj\u00e4nnes", "3. nelj\u00e4nnes", "4. nelj\u00e4nnes"], AMPMS:["ap.", "ip."], DATEFORMATS:["cccc d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fil = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'ng' {0}", "{1} 'ng' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_fr = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fr_CA = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "y-MM-dd", "yy-MM-dd"], 
TIMEFORMATS:["HH 'h' mm 'min' ss 's' zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_gl = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "despois de Cristo"], NARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], MONTHS:["xaneiro", "febreiro", "marzo", "abril", "maio", "xu\u00f1o", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"], STANDALONEMONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xu\u00f1o", "Xullo", "Agosto", 
"Setembro", "Outubro", "Novembro", "Decembro"], SHORTMONTHS:["xan", "feb", "mar", "abr", "mai", "xu\u00f1", "xul", "ago", "set", "out", "nov", "dec"], STANDALONESHORTMONTHS:["Xan", "Feb", "Mar", "Abr", "Mai", "Xu\u00f1", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], WEEKDAYS:["domingo", "luns", "martes", "m\u00e9rcores", "xoves", "venres", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Luns", "Martes", "M\u00e9rcores", "Xoves", "Venres", "S\u00e1bado"], SHORTWEEKDAYS:["dom", "lun", "mar", "m\u00e9r", 
"xov", "ven", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["Dom", "Lun", "Mar", "M\u00e9r", "Xov", "Ven", "S\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "d MMM, y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gsw = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", "Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", 
"Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], SHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], STANDALONEWEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], 
SHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nam."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gu = {ERAS:["\u0a88\u0ab8\u0ac1\u0aa8\u0abe \u0a9c\u0aa8\u0acd\u0aae \u0aaa\u0ab9\u0ac7\u0ab2\u0abe", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], ERANAMES:["\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8 \u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], NARROWMONTHS:["\u0a9c\u0abe", "\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], STANDALONENARROWMONTHS:["\u0a9c\u0abe", 
"\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], MONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], STANDALONEMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], SHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", 
"\u0aa1\u0abf\u0ab8\u0ac7"], STANDALONESHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", "\u0aa1\u0abf\u0ab8\u0ac7"], WEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", 
"\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", "\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], STANDALONEWEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", "\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", 
"\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], SHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], STANDALONESHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], NARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", 
"\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], STANDALONENARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0aaa\u0ab9\u0ac7\u0ab2\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aac\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aa4\u0acd\u0ab0\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0a9a\u0acb\u0aa5\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8"], 
AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-MM-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_haw = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", "Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], STANDALONEMONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", 
"Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], SHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], STANDALONESHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], WEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", "Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], STANDALONEWEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", 
"Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], SHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], STANDALONESHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_he = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", 
"\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", 
"\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", 
"\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hi = {ERAS:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"], ERANAMES:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"], NARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", "\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], STANDALONENARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", 
"\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u091f\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u091f\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u0928", "\u092b\u093c\u0930", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948", "\u092e\u0908", 
"\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e", "\u0905\u0917", "\u0938\u093f\u0924\u0902", "\u0905\u0915\u094d\u091f\u0942", "\u0928\u0935\u0902", "\u0926\u093f\u0938\u0902"], STANDALONESHORTMONTHS:["\u091c\u0928", "\u092b\u093c\u0930", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e", "\u0905\u0917", "\u0938\u093f\u0924\u0902", "\u0905\u0915\u094d\u091f\u0942", "\u0928\u0935\u0902", "\u0926\u093f\u0938\u0902"], 
WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", 
"\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"], QUARTERS:["\u092a\u0939\u0932\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", 
"\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd-MM-y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} \u0915\u094b {0}", "{1} \u0915\u094b {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hr = {ERAS:["pr. Kr.", "p. Kr."], ERANAMES:["Prije Krista", "Poslije Krista"], NARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], STANDALONENARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], MONTHS:["sije\u010dnja", "velja\u010de", "o\u017eujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenoga", "prosinca"], STANDALONEMONTHS:["sije\u010danj", "velja\u010da", 
"o\u017eujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"], SHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], STANDALONESHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], WEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", 
"petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "\u010d", "p", "s"], SHORTQUARTERS:["1kv", "2kv", "3kv", "4kv"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. MMM y.", "d.M.yy."], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'u' {0}", "{1} 'u' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_hu = {ERAS:["i. e.", "i. sz."], ERANAMES:["id\u0151sz\u00e1m\u00edt\u00e1sunk el\u0151tt", "id\u0151sz\u00e1m\u00edt\u00e1sunk szerint"], NARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], MONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", 
"december"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], WEEKDAYS:["vas\u00e1rnap", 
"h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], STANDALONEWEEKDAYS:["vas\u00e1rnap", "h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], SHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], STANDALONESHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], NARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], STANDALONENARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], SHORTQUARTERS:["N1", "N2", "N3", "N4"], 
QUARTERS:["I. negyed\u00e9v", "II. negyed\u00e9v", "III. negyed\u00e9v", "IV. negyed\u00e9v"], AMPMS:["de.", "du."], DATEFORMATS:["y. MMMM d., EEEE", "y. MMMM d.", "y. MMM d.", "y. MM. dd."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_hy = {ERAS:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], ERANAMES:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], NARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], STANDALONENARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], MONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580\u056b", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580\u056b", 
"\u0574\u0561\u0580\u057f\u056b", "\u0561\u057a\u0580\u056b\u056c\u056b", "\u0574\u0561\u0575\u056b\u057d\u056b", "\u0570\u0578\u0582\u0576\u056b\u057d\u056b", "\u0570\u0578\u0582\u056c\u056b\u057d\u056b", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d\u056b", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580\u056b", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b"], 
STANDALONEMONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580", "\u0574\u0561\u0580\u057f", "\u0561\u057a\u0580\u056b\u056c", "\u0574\u0561\u0575\u056b\u057d", "\u0570\u0578\u0582\u0576\u056b\u057d", "\u0570\u0578\u0582\u056c\u056b\u057d", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580"], 
SHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u057a\u057f", "\u0570\u056f\u057f", "\u0576\u0575\u0574", "\u0564\u056f\u057f"], STANDALONESHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u057a\u057f", "\u0570\u056f\u057f", 
"\u0576\u0575\u0574", "\u0564\u056f\u057f"], WEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", "\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], STANDALONEWEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", 
"\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], SHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", "\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], STANDALONESHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", 
"\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], NARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], STANDALONENARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], SHORTQUARTERS:["1-\u056b\u0576 \u0565\u057c\u0574\u057d.", "2-\u0580\u0564 \u0565\u057c\u0574\u057d.", "3-\u0580\u0564 \u0565\u057c\u0574\u057d.", "4-\u0580\u0564 \u0565\u057c\u0574\u057d."], QUARTERS:["1-\u056b\u0576 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", 
"2-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "3-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "4-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f"], AMPMS:["\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0561\u057c\u0561\u057b", "\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0570\u0565\u057f\u0578"], DATEFORMATS:["y\u0569. MMMM d, EEEE", "dd MMMM, y\u0569.", "dd MMM, y \u0569.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss, zzzz", "H:mm:ss, z", "H:mm:ss", "H:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_id = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_in = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_is = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["fyrir Krist", "eftir Krist"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], MONTHS:["jan\u00faar", "febr\u00faar", "mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], STANDALONEMONTHS:["jan\u00faar", "febr\u00faar", 
"mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], STANDALONESHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], WEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", 
"mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], STANDALONEWEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", "mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], SHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], STANDALONESHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], NARROWWEEKDAYS:["S", "M", "\u00de", "M", "F", "F", "L"], STANDALONENARROWWEEKDAYS:["S", 
"M", "\u00de", "M", "F", "F", "L"], SHORTQUARTERS:["F1", "F2", "F3", "F4"], QUARTERS:["1. fj\u00f3r\u00f0ungur", "2. fj\u00f3r\u00f0ungur", "3. fj\u00f3r\u00f0ungur", "4. fj\u00f3r\u00f0ungur"], AMPMS:["f.h.", "e.h."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "d.M.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_it = {ERAS:["aC", "dC"], ERANAMES:["a.C.", "d.C."], NARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], MONTHS:["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], STANDALONEMONTHS:["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", 
"Novembre", "Dicembre"], SHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], STANDALONESHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], WEEKDAYS:["domenica", "luned\u00ec", "marted\u00ec", "mercoled\u00ec", "gioved\u00ec", "venerd\u00ec", "sabato"], STANDALONEWEEKDAYS:["Domenica", "Luned\u00ec", "Marted\u00ec", "Mercoled\u00ec", "Gioved\u00ec", "Venerd\u00ec", "Sabato"], SHORTWEEKDAYS:["dom", "lun", "mar", 
"mer", "gio", "ven", "sab"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", "ven", "sab"], NARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "dd MMMM y", "dd/MMM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_iw = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", 
"\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", 
"\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", 
"\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ja = {ERAS:["\u7d00\u5143\u524d", "\u897f\u66a6"], ERANAMES:["\u7d00\u5143\u524d", "\u897f\u66a6"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", 
"6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", 
"\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], STANDALONEWEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", "\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], SHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONESHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], NARROWWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONENARROWWEEKDAYS:["\u65e5", 
"\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u7b2c1\u56db\u534a\u671f", "\u7b2c2\u56db\u534a\u671f", "\u7b2c3\u56db\u534a\u671f", "\u7b2c4\u56db\u534a\u671f"], AMPMS:["\u5348\u524d", "\u5348\u5f8c"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y/MM/dd", "y/MM/dd"], TIMEFORMATS:["H\u6642mm\u5206ss\u79d2 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ka = {ERAS:["\u10eb\u10d5. \u10ec.", "\u10d0\u10ee. \u10ec."], ERANAMES:["\u10eb\u10d5\u10d4\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7", "\u10d0\u10ee\u10d0\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7"], NARROWMONTHS:["\u10d8", "\u10d7", "\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], STANDALONENARROWMONTHS:["\u10d8", "\u10d7", 
"\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], MONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", "\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", 
"\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], STANDALONEMONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", 
"\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], SHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], 
STANDALONESHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], WEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", 
"\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], STANDALONEWEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], SHORTWEEKDAYS:["\u10d9\u10d5\u10d8", 
"\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], STANDALONESHORTWEEKDAYS:["\u10d9\u10d5\u10d8", "\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], NARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], STANDALONENARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], SHORTQUARTERS:["I \u10d9\u10d5.", 
"II \u10d9\u10d5.", "III \u10d9\u10d5.", "IV \u10d9\u10d5."], QUARTERS:["I \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "II \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "III \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "IV \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8"], AMPMS:["\u10d3\u10d8\u10da\u10d8\u10e1", "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd\u10e1"], DATEFORMATS:["EEEE, dd MMMM, y", "d MMMM, y", "d MMM, y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1}, {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_kk = {ERAS:["\u0431.\u0437.\u0434.", "\u0431.\u0437."], ERANAMES:["\u0431.\u0437.\u0434.", "\u0431.\u0437."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", 
"\u0448\u0456\u043b\u0434\u0435", "\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], STANDALONEMONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", "\u0448\u0456\u043b\u0434\u0435", 
"\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], SHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", "\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], 
STANDALONESHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", "\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], WEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", 
"\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], STANDALONEWEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", "\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], SHORTWEEKDAYS:["\u0436\u0441.", "\u0434\u0441.", 
"\u0441\u0441.", "\u0441\u0440.", "\u0431\u0441.", "\u0436\u043c.", "\u0441\u0431."], STANDALONESHORTWEEKDAYS:["\u0436\u0441.", "\u0434\u0441.", "\u0441\u0441.", "\u0441\u0440.", "\u0431\u0441.", "\u0436\u043c.", "\u0441\u0431."], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], SHORTQUARTERS:["1-\u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0442\u043e\u049b\u0441\u0430\u043d", 
"3-\u0442\u043e\u049b\u0441\u0430\u043d", "4-\u0442\u043e\u049b\u0441\u0430\u043d"], QUARTERS:["1-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "3-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "4-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d"], AMPMS:["\u0442\u04af\u0441\u043a\u0435 \u0434\u0435\u0439\u0456\u043d", "\u0442\u04af\u0441\u0442\u0435\u043d \u043a\u0435\u0439\u0456\u043d"], 
DATEFORMATS:["EEEE, d MMMM y '\u0436'.", "d MMMM y '\u0436'.", "dd.MM.y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_km = {ERAS:["\u1798\u17bb\u1793 \u1782.\u179f.", "\u1782.\u179f."], ERANAMES:["\u1798\u17bb\u1793\u200b\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787", "\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", 
"\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONEMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", 
"\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], SHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", 
"\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONESHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", 
"\u1792\u17d2\u1793\u17bc"], WEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONEWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", 
"\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], SHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONESHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", 
"\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e1", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f \u17e4"], QUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e1", 
"\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e4"], AMPMS:["\u1796\u17d2\u179a\u17b9\u1780", "\u179b\u17d2\u1784\u17b6\u1785"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_kn = {ERAS:["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c9c\u0cbe\u0cb9\u0cc0"], ERANAMES:["\u0c88\u0cb8\u0caa\u0cc2\u0cb5\u0cef.", "\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95"], NARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], STANDALONENARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", 
"\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], MONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], STANDALONEMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], SHORTMONTHS:["\u0c9c\u0ca8.", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1.", "\u0cae\u0cbe", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf.", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1.", "\u0c86\u0c97.", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82.", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb.", "\u0ca8\u0cb5\u0cc6\u0c82.", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82."], STANDALONESHORTMONTHS:["\u0c9c\u0ca8.", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cc1.", "\u0cae\u0cbe", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf.", 
"\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1.", "\u0c86\u0c97.", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82.", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb.", "\u0ca8\u0cb5\u0cc6\u0c82.", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82."], WEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], 
STANDALONEWEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], SHORTWEEKDAYS:["\u0cb0.", "\u0cb8\u0ccb.", "\u0cae\u0c82.", "\u0cac\u0cc1.", "\u0c97\u0cc1.", "\u0cb6\u0cc1.", "\u0cb6\u0ca8\u0cbf."], STANDALONESHORTWEEKDAYS:["\u0cb0\u0cb5\u0cbf", 
"\u0cb8\u0ccb\u0cae", "\u0cae\u0c82\u0c97\u0cb3", "\u0cac\u0cc1\u0ca7", "\u0c97\u0cc1\u0cb0\u0cc1", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0", "\u0cb6\u0ca8\u0cbf"], NARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], STANDALONENARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], SHORTQUARTERS:["\u0ca4\u0ccd\u0cb0\u0cc8 1", "\u0ca4\u0ccd\u0cb0\u0cc8 2", "\u0ca4\u0ccd\u0cb0\u0cc8 3", 
"\u0ca4\u0ccd\u0cb0\u0cc8 4"], QUARTERS:["1 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "2\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "3 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "4 \u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ko = {ERAS:["\uae30\uc6d0\uc804", "\uc11c\uae30"], ERANAMES:["\uc11c\ub825\uae30\uc6d0\uc804", "\uc11c\ub825\uae30\uc6d0"], NARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONENARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], MONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", 
"4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONEMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], SHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONESHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", 
"8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], WEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], STANDALONEWEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], SHORTWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONESHORTWEEKDAYS:["\uc77c", 
"\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], NARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONENARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], SHORTQUARTERS:["1\ubd84\uae30", "2\ubd84\uae30", "3\ubd84\uae30", "4\ubd84\uae30"], QUARTERS:["\uc81c 1/4\ubd84\uae30", "\uc81c 2/4\ubd84\uae30", "\uc81c 3/4\ubd84\uae30", "\uc81c 4/4\ubd84\uae30"], AMPMS:["\uc624\uc804", "\uc624\ud6c4"], DATEFORMATS:["y\ub144 M\uc6d4 d\uc77c EEEE", 
"y\ub144 M\uc6d4 d\uc77c", "y. M. d.", "yy. M. d."], TIMEFORMATS:["a h\uc2dc m\ubd84 s\ucd08 zzzz", "a h\uc2dc m\ubd84 s\ucd08 z", "a h:mm:ss", "a h:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ky = {ERAS:["\u0431.\u0437. \u0447.", "\u0431.\u0437."], ERANAMES:["\u0431.\u0437. \u0447\u0435\u0439\u0438\u043d", "\u0431.\u0437."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], STANDALONEMONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", 
"\u0430\u0432\u0433.", "\u0441\u0435\u043d.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043d.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f.", "\u0434\u0435\u043a."], WEEKDAYS:["\u0416\u0435\u043a", "\u0414\u04af\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", 
"\u0411\u0435\u0439", "\u0416\u0443\u043c", "\u0418\u0448\u043c"], STANDALONEWEEKDAYS:["\u0416\u0435\u043a\u0448\u0435\u043c\u0431\u0438", "\u0414\u04af\u0439\u0448\u04e9\u043c\u0431\u04af", "\u0428\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0428\u0430\u0440\u0448\u0435\u043c\u0431\u0438", "\u0411\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0416\u0443\u043c\u0430", "\u0418\u0448\u0435\u043c\u0431\u0438"], SHORTWEEKDAYS:["\u0416\u043a", "\u0414\u0448", "\u0428\u0435", "\u0428\u0430", "\u0411\u0448", 
"\u0416\u043c", "\u0418\u0448"], STANDALONESHORTWEEKDAYS:["\u0416\u0435\u043a", "\u0414\u04af\u0439", "\u0428\u0435\u0439", "\u0428\u0430\u0440", "\u0411\u0435\u0439", "\u0416\u0443\u043c", "\u0418\u0448\u043c"], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], SHORTQUARTERS:["1-\u0447\u0435\u0439.", "2-\u0447\u0435\u0439.", "3-\u0447\u0435\u0439.", "4-\u0447\u0435\u0439."], 
QUARTERS:["1-\u0447\u0435\u0439\u0440\u0435\u043a", "2-\u0447\u0435\u0439\u0440\u0435\u043a", "3-\u0447\u0435\u0439\u0440\u0435\u043a", "4-\u0447\u0435\u0439\u0440\u0435\u043a"], AMPMS:["\u0442\u04af\u0448\u043a\u04e9 \u0447\u0435\u0439\u0438\u043d\u043a\u0438", "\u0442\u04af\u0448\u0442\u04e9\u043d \u043a\u0438\u0439\u0438\u043d\u043a\u0438"], DATEFORMATS:["EEEE, d-MMMM, y-'\u0436'.", "d-MMMM, y-'\u0436'.", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ln = {ERAS:["lib\u00f3so ya", "nsima ya Y"], ERANAMES:["Yambo ya Y\u00e9zu Kr\u00eds", "Nsima ya Y\u00e9zu Kr\u00eds"], NARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], STANDALONENARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], MONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", 
"s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", "s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], STANDALONEMONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", "s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", 
"s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], SHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], STANDALONESHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], WEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", 
"mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], STANDALONEWEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", "mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], SHORTWEEKDAYS:["eye", "ybo", "mbl", "mst", "min", "mtn", "mps"], STANDALONESHORTWEEKDAYS:["eye", "ybo", "mbl", 
"mst", "min", "mtn", "mps"], NARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], STANDALONENARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], SHORTQUARTERS:["SM1", "SM2", "SM3", "SM4"], QUARTERS:["s\u00e1nz\u00e1 m\u00eds\u00e1to ya yambo", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00ednei"], AMPMS:["nt\u0254\u0301ng\u0254\u0301", "mp\u00f3kwa"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", 
"d MMM y", "d/M/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_lo = {ERAS:["\u0e81\u0ec8\u0ead\u0e99 \u0e84.\u0eaa.", "\u0e84.\u0eaa."], ERANAMES:["\u0e81\u0ec8\u0ead\u0e99 \u0e84.\u0eaa.", "\u0e84.\u0eaa."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", "\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", "\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", 
"\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", "\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], STANDALONEMONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", "\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", "\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", "\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", 
"\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], SHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", "\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", "\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], STANDALONESHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", 
"\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", "\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], WEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONEWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", 
"\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], SHORTWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", 
"\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONESHORTWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["\u0e97", 
"\u0e88", "\u0e84", "\u200b\u0e9e\u0eb8", "\u0e9e", "\u200b\u0eaa\u0eb8", "\u0eaa"], SHORTQUARTERS:["\u0e95\u0ea11", "\u0e95\u0ea12", "\u0e95\u0ea13", "\u0e95\u0ea14"], QUARTERS:["\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 1", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 2", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 3", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 4"], AMPMS:["\u0e81\u0ec8\u0ead\u0e99\u0e97\u0ec8\u0ebd\u0e87", "\u0eab\u0ebc\u0eb1\u0e87\u0e97\u0ec8\u0ebd\u0e87"], DATEFORMATS:["EEEE \u0e97\u0eb5 d MMMM G y", 
"d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 zzzz", "H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_lt = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["prie\u0161 Krist\u0173", "po Kristaus"], NARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], STANDALONENARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], MONTHS:["sausis", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", "bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], STANDALONEMONTHS:["sausis", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", 
"bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], SHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], STANDALONESHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], WEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], STANDALONEWEEKDAYS:["sekmadienis", 
"pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], SHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], STANDALONESHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], NARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], STANDALONENARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], SHORTQUARTERS:["I k.", "II k.", "III k.", "IV k."], QUARTERS:["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"], AMPMS:["prie\u0161piet", 
"popiet"], DATEFORMATS:["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_lv = {ERAS:["p.m.\u0113.", "m.\u0113."], ERANAMES:["pirms m\u016bsu \u0113ras", "m\u016bsu \u0113r\u0101"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janv\u0101ris", "febru\u0101ris", "marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], STANDALONEMONTHS:["Janv\u0101ris", "Febru\u0101ris", 
"Marts", "Apr\u012blis", "Maijs", "J\u016bnijs", "J\u016blijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"], SHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["Janv.", "Febr.", "Marts", "Apr.", "Maijs", "J\u016bn.", "J\u016bl.", "Aug.", "Sept.", "Okt.", "Nov.", "Dec."], WEEKDAYS:["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"], 
STANDALONEWEEKDAYS:["Sv\u0113tdiena", "Pirmdiena", "Otrdiena", "Tre\u0161diena", "Ceturtdiena", "Piektdiena", "Sestdiena"], SHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], STANDALONESHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], NARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], SHORTQUARTERS:["C1", "C2", "C3", "C4"], QUARTERS:["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", "4. ceturksnis"], AMPMS:["priek\u0161pusdien\u0101", 
"p\u0113cpusdien\u0101"], DATEFORMATS:["EEEE, y. 'gada' d. MMMM", "y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mk = {ERAS:["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", 
"\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", "\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", "\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", 
"\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", "\u043f\u0435\u0442.", "\u0441\u0430\u0431."], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", "\u043f\u0435\u0442.", "\u0441\u0430\u0431."], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", 
"\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u043f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0432\u0442\u043e\u0440\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0442\u0440\u0435\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], 
AMPMS:["\u043f\u0440\u0435\u0442\u043f\u043b\u0430\u0434\u043d\u0435", "\u043f\u043e\u043f\u043b\u0430\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd MMMM y '\u0433'.", "dd MMMM y '\u0433'.", "dd.M.y", "dd.M.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ml = {ERAS:["\u0d15\u0d4d\u0d30\u0d3f.\u0d2e\u0d42", "\u0d0e\u0d21\u0d3f"], ERANAMES:["\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d41\u0d4d \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d\u200c", "\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d4d \u0d2a\u0d3f\u0d7b\u0d2a\u0d4d"], NARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", 
"\u0d21\u0d3f"], STANDALONENARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", "\u0d21\u0d3f"], MONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", "\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], STANDALONEMONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", "\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], SHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", 
"\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], STANDALONESHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], WEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", 
"\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a", "\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], STANDALONEWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u200c\u0d1a", 
"\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], SHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], 
STANDALONESHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], NARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", "\u0d35\u0d46", "\u0d36"], STANDALONENARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", 
"\u0d35\u0d46", "\u0d36"], SHORTQUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], QUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", 
"\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], AMPMS:["AM", "PM"], DATEFORMATS:["y, MMMM d, EEEE", "y, MMMM d", "y, MMM d", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mn = {ERAS:["\u041c\u042d\u04e8", "\u041c\u042d"], ERANAMES:["\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439 \u04e9\u043c\u043d\u04e9\u0445", "\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], STANDALONEMONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], SHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", 
"2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", "6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], STANDALONESHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", "2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", 
"6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], WEEKDAYS:["\u043d\u044f\u043c", "\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], STANDALONEWEEKDAYS:["\u043d\u044f\u043c", 
"\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], SHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], STANDALONESHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], NARROWWEEKDAYS:["1", 
"2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u04231", "\u04232", "\u04233", "\u04234"], QUARTERS:["1-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "2-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "3-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "4-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b"], AMPMS:["\u04ae\u04e8", "\u04ae\u0425"], DATEFORMATS:["EEEE, y '\u043e\u043d\u044b' MMMM '\u0441\u0430\u0440\u044b\u043d' dd", "y '\u043e\u043d\u044b' MMMM '\u0441\u0430\u0440\u044b\u043d' d", 
"y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mr = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u0935\u0940\u0938\u0928\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940\u0938\u0928"], NARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], STANDALONENARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", 
"\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], MONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", 
"\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", "\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", 
"\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", "\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u093e\u0928\u0947", "\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], STANDALONESHORTMONTHS:["\u091c\u093e\u0928\u0947", 
"\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", 
"\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", 
"\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"], QUARTERS:["\u092a\u094d\u0930\u0925\u092e \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0943\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u0924\u0941\u0930\u094d\u0925 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["[AM]", 
"[PM]"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} '\u0930\u094b\u091c\u0940' {0}", "{1} '\u0930\u094b\u091c\u0940' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ms = {ERAS:["S.M.", "TM"], ERANAMES:["S.M.", "TM"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], STANDALONEMONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], 
SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], STANDALONEWEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], SHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], 
NARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], SHORTQUARTERS:["S1", "S2", "S3", "S4"], QUARTERS:["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], AMPMS:["PG", "PTG"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mt = {ERAS:["QK", "WK"], ERANAMES:["Qabel Kristu", "Wara Kristu"], NARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], MONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Di\u010bembru"], STANDALONEMONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", 
"Settembru", "Ottubru", "Novembru", "Di\u010bembru"], SHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], STANDALONESHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], WEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", "Is-Sibt"], STANDALONEWEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", 
"Is-Sibt"], SHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], STANDALONESHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], NARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], STANDALONENARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["K1", "K2", "K3", "K4"], AMPMS:["QN", "WN"], DATEFORMATS:["EEEE, d 'ta'\u2019 MMMM y", "d 'ta'\u2019 MMMM y", "dd MMM y", "dd/MM/y"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_my = {ZERODIGIT:4160, ERAS:["\u1018\u102e\u1005\u102e", "\u1021\u1031\u1012\u102e"], ERANAMES:["\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1019\u1015\u1031\u102b\u103a\u1019\u102e\u1000\u102c\u101c", "\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1015\u1031\u102b\u103a\u1011\u103d\u1014\u103a\u1038\u1015\u103c\u102e\u1038\u1000\u102c\u101c"], NARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", 
"\u1012"], STANDALONENARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", "\u1012"], MONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], STANDALONEMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], SHORTMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], STANDALONESHORTMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], WEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], STANDALONEWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", 
"\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], SHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", 
"\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], STANDALONESHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], NARROWWEEKDAYS:["\u1010", "\u1010", "\u1021", "\u1017", "\u1000", "\u101e", "\u1005"], STANDALONENARROWWEEKDAYS:["\u1010", 
"\u1010", "\u1021", "\u1017", "\u1000", "\u101e", "\u1005"], SHORTQUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], QUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", 
"\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], AMPMS:["\u1014\u1036\u1014\u1000\u103a", "\u100a\u1014\u1031"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yy/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}\u1019\u103e\u102c {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nb = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ne = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], ERANAMES:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], NARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", "\u0967\u0968"], STANDALONENARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", 
"\u0967\u0968"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
SHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], STANDALONESHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], WEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", 
"\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u0940\u092c\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], STANDALONEWEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", "\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u0940\u092c\u093e\u0930", 
"\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], SHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], 
NARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", "\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], QUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", 
"\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], AMPMS:["\u092a\u0942\u0930\u094d\u0935 \u092e\u0927\u094d\u092f\u093e\u0928\u094d\u0939", "\u0909\u0924\u094d\u0924\u0930 \u092e\u0927\u094d\u092f\u093e\u0928\u094d\u0939"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nl = {ERAS:["v.Chr.", "n.Chr."], ERANAMES:["Voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", 
"oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], STANDALONEWEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], SHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], 
STANDALONESHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], NARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], STANDALONENARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no_NO = goog.i18n.DateTimeSymbols_no;
goog.i18n.DateTimeSymbols_or = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], STANDALONENARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], MONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONEMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], SHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONESHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], WEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", 
"\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", "\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], STANDALONEWEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", "\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", 
"\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], SHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], STANDALONESHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], 
NARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], STANDALONENARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pa = {ERAS:["\u0a08. \u0a2a\u0a42.", "\u0a38\u0a70\u0a28"], ERANAMES:["\u0a08. \u0a2a\u0a42.", "\u0a38\u0a70\u0a28"], NARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", "\u0a28", "\u0a26"], STANDALONENARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", "\u0a28", "\u0a26"], MONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", 
"\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], STANDALONEMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", 
"\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], SHORTMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", 
"\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], STANDALONESHORTMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], 
WEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", "\u0a2c\u0a41\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a40\u0a35\u0a3e\u0a30"], STANDALONEWEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", "\u0a2c\u0a41\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", 
"\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a40\u0a35\u0a3e\u0a30"], SHORTWEEKDAYS:["\u0a10\u0a24.", "\u0a38\u0a4b\u0a2e.", "\u0a2e\u0a70\u0a17\u0a32.", "\u0a2c\u0a41\u0a27.", "\u0a35\u0a40\u0a30.", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30.", "\u0a38\u0a3c\u0a28\u0a40."], STANDALONESHORTWEEKDAYS:["\u0a10\u0a24.", "\u0a38\u0a4b\u0a2e.", "\u0a2e\u0a70\u0a17\u0a32.", "\u0a2c\u0a41\u0a27.", "\u0a35\u0a40\u0a30.", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30.", "\u0a38\u0a3c\u0a28\u0a40."], 
NARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", "\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], STANDALONENARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", "\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], SHORTQUARTERS:["\u0a2a\u0a0a\u0a06", "\u0a05\u0a71\u0a27\u0a3e", "\u0a2a\u0a4c\u0a23\u0a3e", "\u0a2a\u0a42\u0a30\u0a3e"], QUARTERS:["\u0a2a\u0a0a\u0a06", "\u0a05\u0a71\u0a27\u0a3e", "\u0a2a\u0a4c\u0a23\u0a3e", 
"\u0a2a\u0a42\u0a30\u0a3e"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pl = {ERAS:["p.n.e.", "n.e."], ERANAMES:["p.n.e.", "n.e."], NARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], STANDALONENARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], MONTHS:["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "wrze\u015bnia", "pa\u017adziernika", "listopada", "grudnia"], STANDALONEMONTHS:["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", 
"wrzesie\u0144", "pa\u017adziernik", "listopad", "grudzie\u0144"], SHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], STANDALONESHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], WEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], STANDALONEWEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], 
SHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], STANDALONESHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], NARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["I kwarta\u0142", "II kwarta\u0142", "III kwarta\u0142", "IV kwarta\u0142"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_pt = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", 
"setembro", "outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pt_BR = goog.i18n.DateTimeSymbols_pt;
goog.i18n.DateTimeSymbols_pt_PT = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], STANDALONEMONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", 
"Setembro", "Outubro", "Novembro", "Dezembro"], SHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.\u00ba trimestre", "2.\u00ba trimestre", "3.\u00ba trimestre", "4.\u00ba trimestre"], AMPMS:["da manh\u00e3", "da tarde"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", 
"dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} '\u00e0s' {0}", "{1} '\u00e0s' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ro = {ERAS:["\u00ee.Hr.", "d.Hr."], ERANAMES:["\u00eenainte de Hristos", "dup\u0103 Hristos"], NARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], STANDALONEMONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", 
"iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], SHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], STANDALONESHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], WEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], STANDALONEWEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], 
SHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], STANDALONESHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["trim. I", "trim. II", "trim. III", "trim. IV"], QUARTERS:["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", 
"dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ru = {ERAS:["\u0434\u043e \u043d. \u044d.", "\u043d. \u044d."], ERANAMES:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044f", "\u0444\u0435\u0432\u0440\u0430\u043b\u044f", 
"\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440\u0435\u043b\u044f", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", "\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433\u0443\u0441\u0442\u0430", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f", "\u043e\u043a\u0442\u044f\u0431\u0440\u044f", "\u043d\u043e\u044f\u0431\u0440\u044f", "\u0434\u0435\u043a\u0430\u0431\u0440\u044f"], STANDALONEMONTHS:["\u042f\u043d\u0432\u0430\u0440\u044c", "\u0424\u0435\u0432\u0440\u0430\u043b\u044c", "\u041c\u0430\u0440\u0442", 
"\u0410\u043f\u0440\u0435\u043b\u044c", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u041e\u043a\u0442\u044f\u0431\u0440\u044c", "\u041d\u043e\u044f\u0431\u0440\u044c", "\u0414\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440.", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", 
"\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u042f\u043d\u0432.", "\u0424\u0435\u0432\u0440.", "\u041c\u0430\u0440\u0442", "\u0410\u043f\u0440.", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433.", "\u0421\u0435\u043d\u0442.", "\u041e\u043a\u0442.", "\u041d\u043e\u044f\u0431.", "\u0414\u0435\u043a."], WEEKDAYS:["\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0441\u0443\u0431\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u0435\u0434\u0430", 
"\u0427\u0435\u0442\u0432\u0435\u0440\u0433", "\u041f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0421\u0443\u0431\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u0412\u0441", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", 
"\u043f\u0442", "\u0441\u0431"], STANDALONENARROWWEEKDAYS:["\u0412", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."], QUARTERS:["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d MMM y '\u0433'.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_si = {ERAS:["\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0db4\u0dd6.", "\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0dc0."], ERANAMES:["\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0db4\u0dd6\u0dbb\u0dca\u200d\u0dc0", "\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0dc0\u0dbb\u0dca\u200d\u0dc2"], NARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], 
STANDALONENARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], MONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", 
"\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], STANDALONEMONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", "\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], SHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], STANDALONESHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], WEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", 
"\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], STANDALONEWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", 
"\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], SHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], STANDALONESHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", 
"\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], NARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], STANDALONENARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], SHORTQUARTERS:["\u0d9a\u0dcf\u0dbb\u0dca:1", "\u0d9a\u0dcf\u0dbb\u0dca:2", "\u0d9a\u0dcf\u0dbb\u0dca:3", 
"\u0d9a\u0dcf\u0dbb\u0dca:4"], QUARTERS:["1 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "2 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "3 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "4 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0"], AMPMS:["\u0db4\u0dd9.\u0dc0.", "\u0db4.\u0dc0."], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["a h.mm.ss zzzz", "a h.mm.ss z", "a h.mm.ss", "a h.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sk = {ERAS:["pred n.l.", "n.l."], ERANAMES:["pred n.l.", "n.l."], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["janu\u00e1ra", "febru\u00e1ra", "marca", "apr\u00edla", "m\u00e1ja", "j\u00fana", "j\u00fala", "augusta", "septembra", "okt\u00f3bra", "novembra", "decembra"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "marec", "apr\u00edl", "m\u00e1j", 
"j\u00fan", "j\u00fal", "august", "september", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", "piatok", "sobota"], STANDALONEWEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", 
"piatok", "sobota"], SHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u0161tvr\u0165rok", "2. \u0161tvr\u0165rok", "3. \u0161tvr\u0165rok", "4. \u0161tvr\u0165rok"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d.M.y", 
"d.M.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sl = {ERAS:["pr. n. \u0161t.", "po Kr."], ERANAMES:["pred na\u0161im \u0161tetjem", "na\u0161e \u0161tetje"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", 
"avgust", "september", "oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], SHORTWEEKDAYS:["ned.", "pon.", "tor.", 
"sre.", "\u010det.", "pet.", "sob."], STANDALONESHORTWEEKDAYS:["ned", "pon", "tor", "sre", "\u010det", "pet", "sob"], NARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010detrtletje", "2. \u010detrtletje", "3. \u010detrtletje", "4. \u010detrtletje"], AMPMS:["dop.", "pop."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM y", "d. MM. yy"], TIMEFORMATS:["HH.mm.ss zzzz", 
"HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sq = {ERAS:["p.e.r.", "e.r."], ERANAMES:["para er\u00ebs s\u00eb re", "er\u00ebs s\u00eb re"], NARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], STANDALONENARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], MONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "n\u00ebntor", "dhjetor"], STANDALONEMONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", 
"tetor", "n\u00ebntor", "dhjetor"], SHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], STANDALONESHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], WEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], STANDALONEWEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], 
SHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], STANDALONESHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], NARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], STANDALONENARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["tremujori i par\u00eb", "tremujori i dyt\u00eb", "tremujori i tret\u00eb", "tremujori i kat\u00ebrt"], AMPMS:["paradite", "pasdite"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", 
"dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'n\u00eb' {0}", "{1} 'n\u00eb' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr = {ERAS:["\u043f. \u043d. \u0435.", "\u043d. \u0435."], ERANAMES:["\u041f\u0440\u0435 \u043d\u043e\u0432\u0435 \u0435\u0440\u0435", "\u041d\u043e\u0432\u0435 \u0435\u0440\u0435"], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", 
"\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], SHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", 
"\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], STANDALONESHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], WEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", 
"\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", "\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], 
SHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", 
"\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["\u041a1", "\u041a2", "\u041a3", "\u041a4"], QUARTERS:["\u041f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0414\u0440\u0443\u0433\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0422\u0440\u0435\u045b\u0435 \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0427\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], AMPMS:["\u043f\u0440\u0435 \u043f\u043e\u0434\u043d\u0435", 
"\u043f\u043e\u043f\u043e\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sv = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f\u00f6re Kristus", "efter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], STANDALONEMONTHS:["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", 
"Oktober", "November", "December"], SHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"], WEEKDAYS:["s\u00f6ndag", "m\u00e5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\u00f6rdag"], STANDALONEWEEKDAYS:["S\u00f6ndag", "M\u00e5ndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "L\u00f6rdag"], SHORTWEEKDAYS:["s\u00f6n", "m\u00e5n", "tis", "ons", "tors", 
"fre", "l\u00f6r"], STANDALONESHORTWEEKDAYS:["S\u00f6n", "M\u00e5n", "Tis", "Ons", "Tor", "Fre", "L\u00f6r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"], AMPMS:["fm", "em"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sw = {ERAS:["KK", "BK"], ERANAMES:["Kabla ya Kristo", "Baada ya Kristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"], STANDALONEMONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", 
"Novemba", "Desemba"], SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], STANDALONEWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], SHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", 
"Jumamosi"], STANDALONESHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], NARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], STANDALONENARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Robo 1", "Robo 2", "Robo 3", "Robo 4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ta = {ERAS:["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."], ERANAMES:["\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd", "\u0b85\u0ba9\u0bcb \u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf"], NARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", "\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], STANDALONENARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", 
"\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], MONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], STANDALONEMONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bc1", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], SHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], STANDALONESHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", 
"\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], WEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", "\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], STANDALONEWEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", 
"\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], SHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONESHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], NARROWWEEKDAYS:["\u0b9e\u0bbe", 
"\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONENARROWWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], SHORTQUARTERS:["\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc11", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc12", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc13", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc14"], QUARTERS:["\u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", 
"\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1"], AMPMS:["\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd", "\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_te = {ERAS:["\u0c15\u0c4d\u0c30\u0c40\u0c2a\u0c42", "\u0c15\u0c4d\u0c30\u0c40\u0c36"], ERANAMES:["\u0c08\u0c38\u0c3e\u0c2a\u0c42\u0c30\u0c4d\u0c35.", "\u0c38\u0c28\u0c4d."], NARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", "\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], STANDALONENARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", 
"\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], MONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], STANDALONEMONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], SHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], STANDALONESHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", 
"\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], WEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", 
"\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], STANDALONEWEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], SHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", 
"\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], STANDALONESHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], NARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], STANDALONENARROWWEEKDAYS:["\u0c06", 
"\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], SHORTQUARTERS:["\u0c24\u0c4d\u0c30\u0c481", "\u0c24\u0c4d\u0c30\u0c482", "\u0c24\u0c4d\u0c30\u0c483", "\u0c24\u0c4d\u0c30\u0c484"], QUARTERS:["1\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "2\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "3\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "4\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y EEEE", 
"d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_th = {ERAS:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19 \u0e04.\u0e28.", "\u0e04.\u0e28."], ERANAMES:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a", "\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a"], NARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", 
"\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONENARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], MONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", "\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", 
"\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], STANDALONEMONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", 
"\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", "\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], SHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", 
"\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONESHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], WEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", 
"\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", "\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], STANDALONEWEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", "\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", 
"\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], SHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], STANDALONESHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], NARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", 
"\u0e28", "\u0e2a"], STANDALONENARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", "\u0e28", "\u0e2a"], SHORTQUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], QUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], AMPMS:["\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07", 
"\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07"], DATEFORMATS:["EEEE\u0e17\u0e35\u0e48 d MMMM G y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 zzzz", "H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tl = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'ng' {0}", "{1} 'ng' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tr = {ERAS:["M\u00d6", "MS"], ERANAMES:["Milattan \u00d6nce", "Milattan Sonra"], NARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], STANDALONENARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], MONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], STANDALONEMONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", 
"Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], SHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], STANDALONESHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], WEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", "Cuma", "Cumartesi"], STANDALONEWEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", 
"Cuma", "Cumartesi"], SHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], STANDALONESHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], NARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], STANDALONENARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], SHORTQUARTERS:["\u00c71", "\u00c72", "\u00c73", "\u00c74"], QUARTERS:["1. \u00e7eyrek", "2. \u00e7eyrek", "3. \u00e7eyrek", "4. \u00e7eyrek"], AMPMS:["\u00d6\u00d6", "\u00d6S"], DATEFORMATS:["d MMMM y EEEE", 
"d MMMM y", "d MMM y", "d MM y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_uk = {ERAS:["\u0434\u043e \u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438", "\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438"], NARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], STANDALONENARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], MONTHS:["\u0441\u0456\u0447\u043d\u044f", 
"\u043b\u044e\u0442\u043e\u0433\u043e", "\u0431\u0435\u0440\u0435\u0437\u043d\u044f", "\u043a\u0432\u0456\u0442\u043d\u044f", "\u0442\u0440\u0430\u0432\u043d\u044f", "\u0447\u0435\u0440\u0432\u043d\u044f", "\u043b\u0438\u043f\u043d\u044f", "\u0441\u0435\u0440\u043f\u043d\u044f", "\u0432\u0435\u0440\u0435\u0441\u043d\u044f", "\u0436\u043e\u0432\u0442\u043d\u044f", "\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430", "\u0433\u0440\u0443\u0434\u043d\u044f"], STANDALONEMONTHS:["\u0421\u0456\u0447\u0435\u043d\u044c", 
"\u041b\u044e\u0442\u0438\u0439", "\u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c", "\u041a\u0432\u0456\u0442\u0435\u043d\u044c", "\u0422\u0440\u0430\u0432\u0435\u043d\u044c", "\u0427\u0435\u0440\u0432\u0435\u043d\u044c", "\u041b\u0438\u043f\u0435\u043d\u044c", "\u0421\u0435\u0440\u043f\u0435\u043d\u044c", "\u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c", "\u0416\u043e\u0432\u0442\u0435\u043d\u044c", "\u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434", "\u0413\u0440\u0443\u0434\u0435\u043d\u044c"], 
SHORTMONTHS:["\u0441\u0456\u0447.", "\u043b\u044e\u0442.", "\u0431\u0435\u0440.", "\u043a\u0432\u0456\u0442.", "\u0442\u0440\u0430\u0432.", "\u0447\u0435\u0440\u0432.", "\u043b\u0438\u043f.", "\u0441\u0435\u0440\u043f.", "\u0432\u0435\u0440.", "\u0436\u043e\u0432\u0442.", "\u043b\u0438\u0441\u0442.", "\u0433\u0440\u0443\u0434."], STANDALONESHORTMONTHS:["\u0421\u0456\u0447", "\u041b\u044e\u0442", "\u0411\u0435\u0440", "\u041a\u0432\u0456", "\u0422\u0440\u0430", "\u0427\u0435\u0440", "\u041b\u0438\u043f", 
"\u0421\u0435\u0440", "\u0412\u0435\u0440", "\u0416\u043e\u0432", "\u041b\u0438\u0441", "\u0413\u0440\u0443"], WEEKDAYS:["\u043d\u0435\u0434\u0456\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0441\u0435\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440", "\u043f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u041d\u0435\u0434\u0456\u043b\u044f", 
"\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], STANDALONESHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", 
"\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], STANDALONENARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["I \u043a\u0432.", "II \u043a\u0432.", "III \u043a\u0432.", "IV \u043a\u0432."], QUARTERS:["I \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "II \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "III \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "IV \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], 
AMPMS:["\u0434\u043f", "\u043f\u043f"], DATEFORMATS:["EEEE, d MMMM y '\u0440'.", "d MMMM y '\u0440'.", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ur = {ERAS:["\u0642 \u0645", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], ERANAMES:["\u0642\u0628\u0644 \u0645\u0633\u06cc\u062d", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", 
"\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", 
"\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", 
"\u062f\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", 
"\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONEWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], SHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", 
"\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONESHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", 
"\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], QUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], 
AMPMS:["\u0642\u0628\u0644 \u062f\u0648\u067e\u06c1\u0631", "\u0628\u0639\u062f \u062f\u0648\u067e\u06c1\u0631"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "d MMM\u060c y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_uz = {ERAS:["M.A.", "E"], ERANAMES:["M.A.", "E"], NARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], SHORTMONTHS:["Yanv", 
"Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], STANDALONESHORTMONTHS:["Yanv", "Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], WEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], STANDALONEWEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], SHORTWEEKDAYS:["Yaksh", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"], STANDALONESHORTWEEKDAYS:["Yaksh", "Dush", 
"Sesh", "Chor", "Pay", "Jum", "Shan"], NARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], STANDALONENARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], SHORTQUARTERS:["1-ch", "2-ch", "3-ch", "4-ch"], QUARTERS:["1-chorak", "2-chorak", "3-chorak", "4-chorak"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yy/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_vi = {ERAS:["tr. CN", "sau CN"], ERANAMES:["tr. CN", "sau CN"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["th\u00e1ng 1", "th\u00e1ng 2", "th\u00e1ng 3", "th\u00e1ng 4", "th\u00e1ng 5", "th\u00e1ng 6", "th\u00e1ng 7", "th\u00e1ng 8", "th\u00e1ng 9", "th\u00e1ng 10", "th\u00e1ng 11", "th\u00e1ng 12"], STANDALONEMONTHS:["Th\u00e1ng 1", "Th\u00e1ng 2", 
"Th\u00e1ng 3", "Th\u00e1ng 4", "Th\u00e1ng 5", "Th\u00e1ng 6", "Th\u00e1ng 7", "Th\u00e1ng 8", "Th\u00e1ng 9", "Th\u00e1ng 10", "Th\u00e1ng 11", "Th\u00e1ng 12"], SHORTMONTHS:["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], STANDALONESHORTMONTHS:["Thg 1", "Thg 2", "Thg 3", "Thg 4", "Thg 5", "Thg 6", "Thg 7", "Thg 8", "Thg 9", "Thg 10", "Thg 11", "Thg 12"], WEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", 
"Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], STANDALONEWEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", "Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], SHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], STANDALONESHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], NARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], STANDALONENARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["Qu\u00fd 1", "Qu\u00fd 2", "Qu\u00fd 3", "Qu\u00fd 4"], AMPMS:["SA", "CH"], DATEFORMATS:["EEEE, 'ng\u00e0y' dd MMMM 'n\u0103m' y", "'Ng\u00e0y' dd 'th\u00e1ng' MM 'n\u0103m' y", "dd-MM-y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{0} {1}", "{0} {1}", "{0} {1}", "{0} {1}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_zh = {ERAS:["\u516c\u5143\u524d", "\u516c\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], 
STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", 
"11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", 
"\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63\u5ea6", "2\u5b63\u5ea6", "3\u5b63\u5ea6", "4\u5b63\u5ea6"], QUARTERS:["\u7b2c\u4e00\u5b63\u5ea6", "\u7b2c\u4e8c\u5b63\u5ea6", "\u7b2c\u4e09\u5b63\u5ea6", "\u7b2c\u56db\u5b63\u5ea6"], AMPMS:["\u4e0a\u5348", 
"\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "yy/M/d"], TIMEFORMATS:["zzzzah:mm:ss", "zah:mm:ss", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_CN = goog.i18n.DateTimeSymbols_zh;
goog.i18n.DateTimeSymbols_zh_HK = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", 
"5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", 
"\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", 
"\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "d/M/yy"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ah:mm:ss", "ah:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}{0}", "{1}{0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_TW = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", 
"5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", 
"\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", 
"\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "y/M/d"], TIMEFORMATS:["zzzzah\u6642mm\u5206ss\u79d2", "zah\u6642mm\u5206ss\u79d2", 
"ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1}{0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zu = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januwari", "Februwari", "Mashi", "Apreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", "Disemba"], STANDALONEMONTHS:["uJanuwari", "uFebruwari", "uMashi", "u-Apreli", "uMeyi", "uJuni", "uJulayi", "uAgasti", "uSepthemba", "u-Okthoba", 
"uNovemba", "uDisemba"], SHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], STANDALONEWEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], SHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], 
STANDALONESHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], NARROWWEEKDAYS:["S", "M", "T", "T", "S", "H", "M"], STANDALONENARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ikota engu-1", "ikota engu-2", "ikota engu-3", "ikota engu-4"], AMPMS:["Ekuseni", "Ntambama"], DATEFORMATS:["EEEE dd MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
if (goog.LOCALE == "af") {
  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_af;
} else {
  if (goog.LOCALE == "am") {
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_am;
  } else {
    if (goog.LOCALE == "ar") {
      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ar;
    } else {
      if (goog.LOCALE == "az") {
        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_az;
      } else {
        if (goog.LOCALE == "bg") {
          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bg;
        } else {
          if (goog.LOCALE == "bn") {
            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bn;
          } else {
            if (goog.LOCALE == "br") {
              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_br;
            } else {
              if (goog.LOCALE == "ca") {
                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ca;
              } else {
                if (goog.LOCALE == "chr") {
                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_chr;
                } else {
                  if (goog.LOCALE == "cs") {
                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cs;
                  } else {
                    if (goog.LOCALE == "cy") {
                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cy;
                    } else {
                      if (goog.LOCALE == "da") {
                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_da;
                      } else {
                        if (goog.LOCALE == "de") {
                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                        } else {
                          if (goog.LOCALE == "de_AT" || goog.LOCALE == "de-AT") {
                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de_AT;
                          } else {
                            if (goog.LOCALE == "de_CH" || goog.LOCALE == "de-CH") {
                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                            } else {
                              if (goog.LOCALE == "el") {
                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_el;
                              } else {
                                if (goog.LOCALE == "en") {
                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                } else {
                                  if (goog.LOCALE == "en_AU" || goog.LOCALE == "en-AU") {
                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_AU;
                                  } else {
                                    if (goog.LOCALE == "en_GB" || goog.LOCALE == "en-GB") {
                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_GB;
                                    } else {
                                      if (goog.LOCALE == "en_IE" || goog.LOCALE == "en-IE") {
                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IE;
                                      } else {
                                        if (goog.LOCALE == "en_IN" || goog.LOCALE == "en-IN") {
                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IN;
                                        } else {
                                          if (goog.LOCALE == "en_SG" || goog.LOCALE == "en-SG") {
                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_SG;
                                          } else {
                                            if (goog.LOCALE == "en_US" || goog.LOCALE == "en-US") {
                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                            } else {
                                              if (goog.LOCALE == "en_ZA" || goog.LOCALE == "en-ZA") {
                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_ZA;
                                              } else {
                                                if (goog.LOCALE == "es") {
                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                } else {
                                                  if (goog.LOCALE == "es_419" || goog.LOCALE == "es-419") {
                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                  } else {
                                                    if (goog.LOCALE == "es_ES" || goog.LOCALE == "es-ES") {
                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                    } else {
                                                      if (goog.LOCALE == "et") {
                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_et;
                                                      } else {
                                                        if (goog.LOCALE == "eu") {
                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_eu;
                                                        } else {
                                                          if (goog.LOCALE == "fa") {
                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fa;
                                                          } else {
                                                            if (goog.LOCALE == "fi") {
                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fi;
                                                            } else {
                                                              if (goog.LOCALE == "fil") {
                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fil;
                                                              } else {
                                                                if (goog.LOCALE == "fr") {
                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr;
                                                                } else {
                                                                  if (goog.LOCALE == "fr_CA" || goog.LOCALE == "fr-CA") {
                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr_CA;
                                                                  } else {
                                                                    if (goog.LOCALE == "gl") {
                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gl;
                                                                    } else {
                                                                      if (goog.LOCALE == "gsw") {
                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gsw;
                                                                      } else {
                                                                        if (goog.LOCALE == "gu") {
                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gu;
                                                                        } else {
                                                                          if (goog.LOCALE == "haw") {
                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_haw;
                                                                          } else {
                                                                            if (goog.LOCALE == "he") {
                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_he;
                                                                            } else {
                                                                              if (goog.LOCALE == "hi") {
                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hi;
                                                                              } else {
                                                                                if (goog.LOCALE == "hr") {
                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hr;
                                                                                } else {
                                                                                  if (goog.LOCALE == "hu") {
                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hu;
                                                                                  } else {
                                                                                    if (goog.LOCALE == "hy") {
                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hy;
                                                                                    } else {
                                                                                      if (goog.LOCALE == "id") {
                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_id;
                                                                                      } else {
                                                                                        if (goog.LOCALE == "in") {
                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_in;
                                                                                        } else {
                                                                                          if (goog.LOCALE == "is") {
                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_is;
                                                                                          } else {
                                                                                            if (goog.LOCALE == "it") {
                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_it;
                                                                                            } else {
                                                                                              if (goog.LOCALE == "iw") {
                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_iw;
                                                                                              } else {
                                                                                                if (goog.LOCALE == "ja") {
                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ja;
                                                                                                } else {
                                                                                                  if (goog.LOCALE == "ka") {
                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ka;
                                                                                                  } else {
                                                                                                    if (goog.LOCALE == "kk") {
                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kk;
                                                                                                    } else {
                                                                                                      if (goog.LOCALE == "km") {
                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_km;
                                                                                                      } else {
                                                                                                        if (goog.LOCALE == "kn") {
                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kn;
                                                                                                        } else {
                                                                                                          if (goog.LOCALE == "ko") {
                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ko;
                                                                                                          } else {
                                                                                                            if (goog.LOCALE == "ky") {
                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ky;
                                                                                                            } else {
                                                                                                              if (goog.LOCALE == "ln") {
                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ln;
                                                                                                              } else {
                                                                                                                if (goog.LOCALE == "lo") {
                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lo;
                                                                                                                } else {
                                                                                                                  if (goog.LOCALE == "lt") {
                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lt;
                                                                                                                  } else {
                                                                                                                    if (goog.LOCALE == "lv") {
                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lv;
                                                                                                                    } else {
                                                                                                                      if (goog.LOCALE == "mk") {
                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mk;
                                                                                                                      } else {
                                                                                                                        if (goog.LOCALE == "ml") {
                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ml;
                                                                                                                        } else {
                                                                                                                          if (goog.LOCALE == "mn") {
                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mn;
                                                                                                                          } else {
                                                                                                                            if (goog.LOCALE == "mr") {
                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mr;
                                                                                                                            } else {
                                                                                                                              if (goog.LOCALE == "ms") {
                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ms;
                                                                                                                              } else {
                                                                                                                                if (goog.LOCALE == "mt") {
                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mt;
                                                                                                                                } else {
                                                                                                                                  if (goog.LOCALE == "my") {
                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_my;
                                                                                                                                  } else {
                                                                                                                                    if (goog.LOCALE == "nb") {
                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nb;
                                                                                                                                    } else {
                                                                                                                                      if (goog.LOCALE == "ne") {
                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ne;
                                                                                                                                      } else {
                                                                                                                                        if (goog.LOCALE == "nl") {
                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nl;
                                                                                                                                        } else {
                                                                                                                                          if (goog.LOCALE == "no") {
                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                          } else {
                                                                                                                                            if (goog.LOCALE == "no_NO" || goog.LOCALE == "no-NO") {
                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                            } else {
                                                                                                                                              if (goog.LOCALE == "or") {
                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_or;
                                                                                                                                              } else {
                                                                                                                                                if (goog.LOCALE == "pa") {
                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pa;
                                                                                                                                                } else {
                                                                                                                                                  if (goog.LOCALE == "pl") {
                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pl;
                                                                                                                                                  } else {
                                                                                                                                                    if (goog.LOCALE == "pt") {
                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                    } else {
                                                                                                                                                      if (goog.LOCALE == "pt_BR" || goog.LOCALE == "pt-BR") {
                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                      } else {
                                                                                                                                                        if (goog.LOCALE == "pt_PT" || goog.LOCALE == "pt-PT") {
                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt_PT;
                                                                                                                                                        } else {
                                                                                                                                                          if (goog.LOCALE == "ro") {
                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ro;
                                                                                                                                                          } else {
                                                                                                                                                            if (goog.LOCALE == "ru") {
                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ru;
                                                                                                                                                            } else {
                                                                                                                                                              if (goog.LOCALE == "si") {
                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_si;
                                                                                                                                                              } else {
                                                                                                                                                                if (goog.LOCALE == "sk") {
                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sk;
                                                                                                                                                                } else {
                                                                                                                                                                  if (goog.LOCALE == "sl") {
                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sl;
                                                                                                                                                                  } else {
                                                                                                                                                                    if (goog.LOCALE == "sq") {
                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sq;
                                                                                                                                                                    } else {
                                                                                                                                                                      if (goog.LOCALE == "sr") {
                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sr;
                                                                                                                                                                      } else {
                                                                                                                                                                        if (goog.LOCALE == "sv") {
                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sv;
                                                                                                                                                                        } else {
                                                                                                                                                                          if (goog.LOCALE == "sw") {
                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sw;
                                                                                                                                                                          } else {
                                                                                                                                                                            if (goog.LOCALE == "ta") {
                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ta;
                                                                                                                                                                            } else {
                                                                                                                                                                              if (goog.LOCALE == "te") {
                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_te;
                                                                                                                                                                              } else {
                                                                                                                                                                                if (goog.LOCALE == "th") {
                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_th;
                                                                                                                                                                                } else {
                                                                                                                                                                                  if (goog.LOCALE == "tl") {
                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tl;
                                                                                                                                                                                  } else {
                                                                                                                                                                                    if (goog.LOCALE == "tr") {
                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tr;
                                                                                                                                                                                    } else {
                                                                                                                                                                                      if (goog.LOCALE == "uk") {
                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uk;
                                                                                                                                                                                      } else {
                                                                                                                                                                                        if (goog.LOCALE == "ur") {
                                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ur;
                                                                                                                                                                                        } else {
                                                                                                                                                                                          if (goog.LOCALE == "uz") {
                                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uz;
                                                                                                                                                                                          } else {
                                                                                                                                                                                            if (goog.LOCALE == "vi") {
                                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_vi;
                                                                                                                                                                                            } else {
                                                                                                                                                                                              if (goog.LOCALE == "zh") {
                                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                              } else {
                                                                                                                                                                                                if (goog.LOCALE == "zh_CN" || goog.LOCALE == "zh-CN") {
                                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  if (goog.LOCALE == "zh_HK" || goog.LOCALE == "zh-HK") {
                                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_HK;
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    if (goog.LOCALE == "zh_TW" || goog.LOCALE == "zh-TW") {
                                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_TW;
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      if (goog.LOCALE == "zu") {
                                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zu;
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
;goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__12938 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__12938;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__12942 = cljs.core._EQ_;
    var expr__12943 = limit;
    if (cljs.core.truth_(pred__12942.call(null, 1, expr__12943))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__12942.call(null, 2, expr__12943))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__12945 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__12946 = limit__$1 - 1;
            var G__12947 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__12945;
            limit__$1 = G__12946;
            parts = G__12947;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__12948 = index - 1;
        index = G__12948;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___12949 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___12949)) {
        var replacement_12950 = temp__4124__auto___12949;
        buffer.append([cljs.core.str(replacement_12950)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__12951 = index + 1;
      index = G__12951;
      continue;
    }
    break;
  }
};
goog.provide("cljs_time.internal.core");
goog.require("cljs.core");
goog.require("goog.string.format");
goog.require("goog.string");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("clojure.string");
cljs_time.internal.core._EQ_ = function() {
  var _EQ___delegate = function(args) {
    if (cljs.core.every_QMARK_.call(null, function(p1__13044_SHARP_) {
      return p1__13044_SHARP_ instanceof goog.date.Date;
    }, args)) {
      return cljs.core.apply.call(null, cljs.core._EQ_, cljs.core.map.call(null, function(p1__13045_SHARP_) {
        return p1__13045_SHARP_.getTime();
      }, args));
    } else {
      return cljs.core.apply.call(null, cljs.core._EQ_, args);
    }
  };
  var _EQ_ = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return _EQ___delegate.call(this, args);
  };
  _EQ_.cljs$lang$maxFixedArity = 0;
  _EQ_.cljs$lang$applyTo = function(arglist__13046) {
    var args = cljs.core.seq(arglist__13046);
    return _EQ___delegate(args);
  };
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___delegate;
  return _EQ_;
}();
cljs_time.internal.core.leap_year_QMARK_ = function leap_year_QMARK_(y) {
  if (cljs.core.mod.call(null, y, 400) === 0) {
    return true;
  } else {
    if (cljs.core.mod.call(null, y, 100) === 0) {
      return false;
    } else {
      if (cljs.core.mod.call(null, y, 4) === 0) {
        return true;
      } else {
        return false;
      }
    }
  }
};
cljs_time.internal.core.days_in_month = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
cljs_time.internal.core.year_corrected_dim = function year_corrected_dim(year, month) {
  var G__13048 = cljs_time.internal.core.days_in_month.call(null, cljs.core.truth_(cljs_time.internal.core._EQ_.call(null, month, 1)) ? 11 : month - 1);
  var G__13048__$1 = cljs.core.truth_(function() {
    var and__3596__auto__ = cljs_time.internal.core.leap_year_QMARK_.call(null, year);
    if (and__3596__auto__) {
      return cljs_time.internal.core._EQ_.call(null, month, 2);
    } else {
      return and__3596__auto__;
    }
  }()) ? G__13048 + 1 : G__13048;
  return G__13048__$1;
};
cljs_time.internal.core.valid_date_QMARK_ = function valid_date_QMARK_(p__13049) {
  var map__13051 = p__13049;
  var map__13051__$1 = cljs.core.seq_QMARK_.call(null, map__13051) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13051) : map__13051;
  var d = map__13051__$1;
  var millis = cljs.core.get.call(null, map__13051__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds = cljs.core.get.call(null, map__13051__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes = cljs.core.get.call(null, map__13051__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours = cljs.core.get.call(null, map__13051__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days = cljs.core.get.call(null, map__13051__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var months = cljs.core.get.call(null, map__13051__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years = cljs.core.get.call(null, map__13051__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var months__$1 = months + 1;
  var _GT__LT_ = function(months__$1, map__13051, map__13051__$1, d, millis, seconds, minutes, hours, days, months, years) {
    return function _GT__LT_(a, b, x) {
      return x >= a && x <= b;
    };
  }(months__$1, map__13051, map__13051__$1, d, millis, seconds, minutes, hours, days, months, years);
  if (cljs.core.truth_(function() {
    var and__3596__auto__ = years;
    if (cljs.core.truth_(and__3596__auto__)) {
      return _GT__LT_.call(null, 1, 12, months__$1) && _GT__LT_.call(null, 1, cljs_time.internal.core.year_corrected_dim.call(null, years, months__$1), days) && _GT__LT_.call(null, 0, 23, hours) && _GT__LT_.call(null, 0, 59, minutes) && _GT__LT_.call(null, 0, 60, seconds) && _GT__LT_.call(null, 0, 999, millis);
    } else {
      return and__3596__auto__;
    }
  }())) {
    return d;
  } else {
    throw cljs.core.ex_info.call(null, "Date is not valid", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "invalid-date", "invalid-date", 2030506573), new cljs.core.Keyword(null, "date", "date", -1463434462), d], null));
  }
};
cljs_time.internal.core.index_of = function index_of(coll, x) {
  return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(p1__13053_SHARP_, p2__13052_SHARP_) {
    if (cljs.core.truth_(cljs_time.internal.core._EQ_.call(null, p2__13052_SHARP_, x))) {
      return p1__13053_SHARP_;
    } else {
      return null;
    }
  }, coll));
};
cljs_time.internal.core.period = function() {
  var period = null;
  var period__2 = function(period__$1, value) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap.fromArray([period__$1, value], true, false), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "period", "cljs-time.core/period", 1354080486)], null));
  };
  var period__3 = function() {
    var G__13054__delegate = function(p1, v1, kvs) {
      return cljs.core.apply.call(null, cljs.core.assoc, period.call(null, p1, v1), kvs);
    };
    var G__13054 = function(p1, v1, var_args) {
      var kvs = null;
      if (arguments.length > 2) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13054__delegate.call(this, p1, v1, kvs);
    };
    G__13054.cljs$lang$maxFixedArity = 2;
    G__13054.cljs$lang$applyTo = function(arglist__13055) {
      var p1 = cljs.core.first(arglist__13055);
      arglist__13055 = cljs.core.next(arglist__13055);
      var v1 = cljs.core.first(arglist__13055);
      var kvs = cljs.core.rest(arglist__13055);
      return G__13054__delegate(p1, v1, kvs);
    };
    G__13054.cljs$core$IFn$_invoke$arity$variadic = G__13054__delegate;
    return G__13054;
  }();
  period = function(p1, v1, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return period__2.call(this, p1, v1);
      default:
        return period__3.cljs$core$IFn$_invoke$arity$variadic(p1, v1, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  period.cljs$lang$maxFixedArity = 2;
  period.cljs$lang$applyTo = period__3.cljs$lang$applyTo;
  period.cljs$core$IFn$_invoke$arity$2 = period__2;
  period.cljs$core$IFn$_invoke$arity$variadic = period__3.cljs$core$IFn$_invoke$arity$variadic;
  return period;
}();
cljs_time.internal.core.format = function() {
  var format__delegate = function(fmt, args) {
    var args__$1 = cljs.core.map.call(null, function(x) {
      if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
        return[cljs.core.str(x)].join("");
      } else {
        return x;
      }
    }, args);
    return cljs.core.apply.call(null, goog.string.format, fmt, args__$1);
  };
  var format = function(fmt, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format__delegate.call(this, fmt, args);
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__13056) {
    var fmt = cljs.core.first(arglist__13056);
    var args = cljs.core.rest(arglist__13056);
    return format__delegate(fmt, args);
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format;
}();
cljs_time.internal.core.zero_pad = function() {
  var zero_pad = null;
  var zero_pad__1 = function(n) {
    if (0 <= n && n <= 9) {
      return[cljs.core.str("0"), cljs.core.str(n)].join("");
    } else {
      return[cljs.core.str(n)].join("");
    }
  };
  var zero_pad__2 = function(n, zeros) {
    if (1 > zeros) {
      return[cljs.core.str(n)].join("");
    } else {
      return[cljs.core.str(clojure.string.join.call(null, cljs.core.take.call(null, zeros - cljs.core.count.call(null, [cljs.core.str(n)].join("")), cljs.core.repeat.call(null, "0")))), cljs.core.str(n)].join("");
    }
  };
  zero_pad = function(n, zeros) {
    switch(arguments.length) {
      case 1:
        return zero_pad__1.call(this, n);
      case 2:
        return zero_pad__2.call(this, n, zeros);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  zero_pad.cljs$core$IFn$_invoke$arity$1 = zero_pad__1;
  zero_pad.cljs$core$IFn$_invoke$arity$2 = zero_pad__2;
  return zero_pad;
}();
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("cuerdas.core");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("clojure.string");
cuerdas.core.contains_QMARK_ = function contains_QMARK_(s, subs) {
  return goog.string.contains(s, subs);
};
cuerdas.core.regexp = function() {
  var regexp = null;
  var regexp__1 = function(s) {
    if (cljs.core.regexp_QMARK_.call(null, s)) {
      return s;
    } else {
      return new RegExp(s);
    }
  };
  var regexp__2 = function(s, flags) {
    if (cljs.core.regexp_QMARK_.call(null, s)) {
      return new RegExp(s.source, flags);
    } else {
      return new RegExp(s, flags);
    }
  };
  regexp = function(s, flags) {
    switch(arguments.length) {
      case 1:
        return regexp__1.call(this, s);
      case 2:
        return regexp__2.call(this, s, flags);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  regexp.cljs$core$IFn$_invoke$arity$1 = regexp__1;
  regexp.cljs$core$IFn$_invoke$arity$2 = regexp__2;
  return regexp;
}();
cuerdas.core.escape_regexp = function escape_regexp(s) {
  return goog.string.regExpEscape(s);
};
cuerdas.core.startswith_QMARK_ = function startswith_QMARK_(s, prefix) {
  return goog.string.startsWith(s, prefix);
};
cuerdas.core.endswith_QMARK_ = function endswith_QMARK_(s, prefix) {
  return goog.string.endsWith(s, prefix);
};
cuerdas.core.lower = function lower(s) {
  return clojure.string.lower_case.call(null, s);
};
cuerdas.core.upper = function upper(s) {
  return clojure.string.upper_case.call(null, s);
};
cuerdas.core.collapse_whitespace = function collapse_whitespace(s) {
  return goog.string.collapseWhitespace(s);
};
cuerdas.core.empty_QMARK_ = function empty_QMARK_(s) {
  if (s == null) {
    return true;
  } else {
    if (cljs.core._EQ_.call(null, cljs.core.count.call(null, s), 0)) {
      return true;
    } else {
      return false;
    }
  }
};
cuerdas.core.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
cuerdas.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(s) {
    return repeat.call(null, s, 1);
  };
  var repeat__2 = function(s, n) {
    return goog.string.repeat(s, n);
  };
  repeat = function(s, n) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, s);
      case 2:
        return repeat__2.call(this, s, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cuerdas.core.strip_newlines = function strip_newlines(s) {
  return goog.string.stripNewlines(s);
};
cuerdas.core.split = function() {
  var split = null;
  var split__1 = function(s) {
    return split.call(null, s, /\s/, null);
  };
  var split__2 = function(s, sep) {
    return split.call(null, s, sep, null);
  };
  var split__3 = function(s, sep, num) {
    if (cljs.core.regexp_QMARK_.call(null, sep)) {
      return clojure.string.split.call(null, s, sep, num);
    } else {
      return clojure.string.split.call(null, s, cuerdas.core.regexp.call(null, sep), num);
    }
  };
  split = function(s, sep, num) {
    switch(arguments.length) {
      case 1:
        return split__1.call(this, s);
      case 2:
        return split__2.call(this, s, sep);
      case 3:
        return split__3.call(this, s, sep, num);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$1 = split__1;
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
cuerdas.core.lines = function lines(s) {
  return cuerdas.core.split.call(null, s, /\n|\r\n/);
};
cuerdas.core.chars = function chars(s) {
  return cljs.core.js__GT_clj.call(null, s.split(""));
};
cuerdas.core.slice = function() {
  var slice = null;
  var slice__2 = function(s, begin) {
    return s.slice(begin);
  };
  var slice__3 = function(s, begin, end) {
    return s.slice(begin, end);
  };
  slice = function(s, begin, end) {
    switch(arguments.length) {
      case 2:
        return slice__2.call(this, s, begin);
      case 3:
        return slice__3.call(this, s, begin, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  slice.cljs$core$IFn$_invoke$arity$2 = slice__2;
  slice.cljs$core$IFn$_invoke$arity$3 = slice__3;
  return slice;
}();
cuerdas.core.replace = function replace(s, match, replacement) {
  return s.replace(cuerdas.core.regexp.call(null, match, "g"), replacement);
};
cuerdas.core.ireplace = function ireplace(s, match, replacement) {
  return s.replace(cuerdas.core.regexp.call(null, match, "ig"), replacement);
};
cuerdas.core.replace_first = function replace_first(s, match, replacement) {
  return s.replace(cuerdas.core.regexp.call(null, match), replacement);
};
cuerdas.core.ireplace_first = function ireplace_first(s, match, replacement) {
  return s.replace(cuerdas.core.regexp.call(null, match, "i"), replacement);
};
cuerdas.core.trim = function() {
  var trim = null;
  var trim__1 = function(s) {
    return trim.call(null, s, " ");
  };
  var trim__2 = function(s, chs) {
    var rxstr = [cljs.core.str("["), cljs.core.str(cuerdas.core.escape_regexp.call(null, chs)), cljs.core.str("]")].join("");
    var rx = [cljs.core.str("^"), cljs.core.str(rxstr), cljs.core.str("+|"), cljs.core.str(rxstr), cljs.core.str("+$")].join("");
    return cuerdas.core.replace.call(null, s, rx, "");
  };
  trim = function(s, chs) {
    switch(arguments.length) {
      case 1:
        return trim__1.call(this, s);
      case 2:
        return trim__2.call(this, s, chs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trim.cljs$core$IFn$_invoke$arity$1 = trim__1;
  trim.cljs$core$IFn$_invoke$arity$2 = trim__2;
  return trim;
}();
cuerdas.core.rtrim = function() {
  var rtrim = null;
  var rtrim__1 = function(s) {
    return rtrim.call(null, s, " ");
  };
  var rtrim__2 = function(s, chs) {
    var rxstr = [cljs.core.str("["), cljs.core.str(cuerdas.core.escape_regexp.call(null, chs)), cljs.core.str("]")].join("");
    var rx = [cljs.core.str(rxstr), cljs.core.str("+$")].join("");
    return cuerdas.core.replace.call(null, s, rx, "");
  };
  rtrim = function(s, chs) {
    switch(arguments.length) {
      case 1:
        return rtrim__1.call(this, s);
      case 2:
        return rtrim__2.call(this, s, chs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rtrim.cljs$core$IFn$_invoke$arity$1 = rtrim__1;
  rtrim.cljs$core$IFn$_invoke$arity$2 = rtrim__2;
  return rtrim;
}();
cuerdas.core.ltrim = function() {
  var ltrim = null;
  var ltrim__1 = function(s) {
    return ltrim.call(null, s, " ");
  };
  var ltrim__2 = function(s, chs) {
    var rxstr = [cljs.core.str("["), cljs.core.str(cuerdas.core.escape_regexp.call(null, chs)), cljs.core.str("]")].join("");
    var rx = [cljs.core.str("^"), cljs.core.str(rxstr), cljs.core.str("+")].join("");
    return cuerdas.core.replace.call(null, s, rx, "");
  };
  ltrim = function(s, chs) {
    switch(arguments.length) {
      case 1:
        return ltrim__1.call(this, s);
      case 2:
        return ltrim__2.call(this, s, chs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ltrim.cljs$core$IFn$_invoke$arity$1 = ltrim__1;
  ltrim.cljs$core$IFn$_invoke$arity$2 = ltrim__2;
  return ltrim;
}();
cuerdas.core.prune = function() {
  var prune = null;
  var prune__2 = function(s, num) {
    return prune.call(null, s, num, "...");
  };
  var prune__3 = function(s, num, subs) {
    if (cljs.core.count.call(null, s) < num) {
      return s;
    } else {
      var tmpl = function(c) {
        if (cljs.core.not_EQ_.call(null, cuerdas.core.upper.call(null, c), cuerdas.core.lower.call(null, c))) {
          return "A";
        } else {
          return " ";
        }
      };
      var template = cuerdas.core.replace.call(null, cuerdas.core.slice.call(null, s, 0, cljs.core.count.call(null, s) + 1), /.(?=\W*\w*$)/, tmpl);
      var template__$1 = cljs.core.truth_(cuerdas.core.slice.call(null, template, cljs.core.count.call(null, template) - 2).match(/\w\w/)) ? cuerdas.core.replace_first.call(null, template, /\s*\S+$/, "") : cuerdas.core.rtrim.call(null, cuerdas.core.slice.call(null, template, 0, cljs.core.count.call(null, template) - 1));
      if (cljs.core.count.call(null, [cljs.core.str(template__$1), cljs.core.str(subs)].join("")) > cljs.core.count.call(null, s)) {
        return s;
      } else {
        return[cljs.core.str(cuerdas.core.slice.call(null, s, 0, cljs.core.count.call(null, template__$1))), cljs.core.str(subs)].join("");
      }
    }
  };
  prune = function(s, num, subs) {
    switch(arguments.length) {
      case 2:
        return prune__2.call(this, s, num);
      case 3:
        return prune__3.call(this, s, num, subs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prune.cljs$core$IFn$_invoke$arity$2 = prune__2;
  prune.cljs$core$IFn$_invoke$arity$3 = prune__3;
  return prune;
}();
cuerdas.core.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
cuerdas.core.surround = function surround(s, wrap) {
  return cuerdas.core.join.call(null, "", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [wrap, s, wrap], null));
};
cuerdas.core.unsurround = function unsurround(s, surrounding) {
  var length = cljs.core.count.call(null, surrounding);
  var fstr = cuerdas.core.slice.call(null, s, 0, length);
  var slength = cljs.core.count.call(null, s);
  var rightend = slength - length;
  var lstr = cuerdas.core.slice.call(null, s, rightend, slength);
  if (cljs.core._EQ_.call(null, fstr, surrounding) && cljs.core._EQ_.call(null, lstr, surrounding)) {
    return cuerdas.core.slice.call(null, s, length, rightend);
  } else {
    return s;
  }
};
cuerdas.core.quote = function() {
  var quote = null;
  var quote__1 = function(s) {
    return cuerdas.core.surround.call(null, s, '"');
  };
  var quote__2 = function(s, qchar) {
    return cuerdas.core.surround.call(null, s, qchar);
  };
  quote = function(s, qchar) {
    switch(arguments.length) {
      case 1:
        return quote__1.call(this, s);
      case 2:
        return quote__2.call(this, s, qchar);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  quote.cljs$core$IFn$_invoke$arity$1 = quote__1;
  quote.cljs$core$IFn$_invoke$arity$2 = quote__2;
  return quote;
}();
cuerdas.core.unquote = function() {
  var unquote = null;
  var unquote__1 = function(s) {
    return cuerdas.core.unsurround.call(null, s, '"');
  };
  var unquote__2 = function(s, qchar) {
    return cuerdas.core.unsurround.call(null, s, qchar);
  };
  unquote = function(s, qchar) {
    switch(arguments.length) {
      case 1:
        return unquote__1.call(this, s);
      case 2:
        return unquote__2.call(this, s, qchar);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unquote.cljs$core$IFn$_invoke$arity$1 = unquote__1;
  unquote.cljs$core$IFn$_invoke$arity$2 = unquote__2;
  return unquote;
}();
cuerdas.core.slugify = function slugify(s) {
  var from = "\u0105\u00e0\u00e1\u00e4\u00e2\u00e3\u00e5\u00e6\u0103\u0107\u010d\u0109\u0119\u00e8\u00e9\u00eb\u00ea\u011d\u0125\u00ec\u00ed\u00ef\u00ee\u0135\u0142\u013e\u0144\u0148\u00f2\u00f3\u00f6\u0151\u00f4\u00f5\u00f0\u00f8\u015b\u0219\u0161\u015d\u0165\u021b\u016d\u00f9\u00fa\u00fc\u0171\u00fb\u00f1\u00ff\u00fd\u00e7\u017c\u017a\u017e";
  var to = "aaaaaaaaaccceeeeeghiiiijllnnoooooooossssttuuuuuunyyczzz";
  var regex = [cljs.core.str("["), cljs.core.str(cuerdas.core.escape_regexp.call(null, from)), cljs.core.str("]")].join("");
  return cuerdas.core.dasherize.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.lower.call(null, s), regex, function(from, to, regex) {
    return function(c) {
      var index = from.indexOf(c);
      var res = to.charAt(index);
      if (cuerdas.core.empty_QMARK_.call(null, res)) {
        return "-";
      } else {
        return res;
      }
    };
  }(from, to, regex)), /[^\w\s-]/, ""));
};
cuerdas.core.strip_tags = function() {
  var strip_tags = null;
  var strip_tags__1 = function(s) {
    return strip_tags.call(null, s, "");
  };
  var strip_tags__2 = function() {
    var G__12923__delegate = function(s, tags) {
      return cljs.core.reduce.call(null, function(acc, tag) {
        var rx = [cljs.core.str("\x3c\\/?"), cljs.core.str(tag), cljs.core.str("[^\x3c\x3e]*\x3e")].join("");
        return cuerdas.core.ireplace.call(null, acc, rx, "");
      }, s, tags);
    };
    var G__12923 = function(s, var_args) {
      var tags = null;
      if (arguments.length > 1) {
        tags = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__12923__delegate.call(this, s, tags);
    };
    G__12923.cljs$lang$maxFixedArity = 1;
    G__12923.cljs$lang$applyTo = function(arglist__12924) {
      var s = cljs.core.first(arglist__12924);
      var tags = cljs.core.rest(arglist__12924);
      return G__12923__delegate(s, tags);
    };
    G__12923.cljs$core$IFn$_invoke$arity$variadic = G__12923__delegate;
    return G__12923;
  }();
  strip_tags = function(s, var_args) {
    var tags = var_args;
    switch(arguments.length) {
      case 1:
        return strip_tags__1.call(this, s);
      default:
        return strip_tags__2.cljs$core$IFn$_invoke$arity$variadic(s, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  strip_tags.cljs$lang$maxFixedArity = 1;
  strip_tags.cljs$lang$applyTo = strip_tags__2.cljs$lang$applyTo;
  strip_tags.cljs$core$IFn$_invoke$arity$1 = strip_tags__1;
  strip_tags.cljs$core$IFn$_invoke$arity$variadic = strip_tags__2.cljs$core$IFn$_invoke$arity$variadic;
  return strip_tags;
}();
cuerdas.core.reverse = function reverse(s) {
  var cs = s.split("");
  var cs__$1 = cs.reverse();
  return cs__$1.join("");
};
cuerdas.core.parse_number_impl = function parse_number_impl(source) {
  var or__3608__auto__ = source * 1;
  if (cljs.core.truth_(or__3608__auto__)) {
    return or__3608__auto__;
  } else {
    return 0;
  }
};
cuerdas.core.parse_number = function() {
  var parse_number = null;
  var parse_number__1 = function(s) {
    return parse_number.call(null, s, 0);
  };
  var parse_number__2 = function(s, precision) {
    if (s == null) {
      return 0;
    } else {
      var s__$1 = cuerdas.core.trim.call(null, s);
      var rx = /^-?\d+(?:\.\d+)?$/;
      if (cljs.core.truth_(s__$1.match(rx))) {
        return cuerdas.core.parse_number_impl.call(null, cuerdas.core.parse_number_impl.call(null, s__$1).toFixed(precision));
      } else {
        return NaN;
      }
    }
  };
  parse_number = function(s, precision) {
    switch(arguments.length) {
      case 1:
        return parse_number__1.call(this, s);
      case 2:
        return parse_number__2.call(this, s, precision);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse_number.cljs$core$IFn$_invoke$arity$1 = parse_number__1;
  parse_number.cljs$core$IFn$_invoke$arity$2 = parse_number__2;
  return parse_number;
}();
cuerdas.core.parse_float = function() {
  var parse_float = null;
  var parse_float__1 = function(s) {
    return parseFloat(s);
  };
  var parse_float__2 = function(s, precision) {
    if (precision == null) {
      return parseFloat(s);
    } else {
      return parseFloat(parseFloat(s).toFixed(precision));
    }
  };
  parse_float = function(s, precision) {
    switch(arguments.length) {
      case 1:
        return parse_float__1.call(this, s);
      case 2:
        return parse_float__2.call(this, s, precision);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse_float.cljs$core$IFn$_invoke$arity$1 = parse_float__1;
  parse_float.cljs$core$IFn$_invoke$arity$2 = parse_float__2;
  return parse_float;
}();
cuerdas.core.parse_int = function parse_int(s) {
  var rx = cuerdas.core.regexp.call(null, "^\\s*-?0x", "i");
  if (cljs.core.truth_(rx.test(s))) {
    return parseInt(s, 16);
  } else {
    return parseInt(s, 10);
  }
};
cuerdas.core.format = function() {
  var format__delegate = function(s, args) {
    if (cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1) && cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
      var params = cljs.core.clj__GT_js.call(null, cljs.core.first.call(null, args));
      return cuerdas.core.replace.call(null, s, /%\(\w+\)s/, function(params) {
        return function(match) {
          return[cljs.core.str(params[cuerdas.core.slice.call(null, match, 2, -2)])].join("");
        };
      }(params));
    } else {
      var params = cljs.core.clj__GT_js.call(null, args);
      return cuerdas.core.replace.call(null, s, cuerdas.core.regexp.call(null, "%s", "g"), function(params) {
        return function(_) {
          return[cljs.core.str(params.shift())].join("");
        };
      }(params));
    }
  };
  var format = function(s, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return format__delegate.call(this, s, args);
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__12925) {
    var s = cljs.core.first(arglist__12925);
    var args = cljs.core.rest(arglist__12925);
    return format__delegate(s, args);
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format;
}();
cuerdas.core.pad = function() {
  var pad__delegate = function(s, p__12926) {
    var vec__12932 = p__12926;
    var map__12933 = cljs.core.nth.call(null, vec__12932, 0, null);
    var map__12933__$1 = cljs.core.seq_QMARK_.call(null, map__12933) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12933) : map__12933;
    var type = cljs.core.get.call(null, map__12933__$1, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "left", "left", -399115937));
    var padding = cljs.core.get.call(null, map__12933__$1, new cljs.core.Keyword(null, "padding", "padding", 1660304693), " ");
    var length = cljs.core.get.call(null, map__12933__$1, new cljs.core.Keyword(null, "length", "length", 588987862), 0);
    var padding__$1 = padding[0];
    var padlen = length - cljs.core.count.call(null, s);
    var pred__12934 = cljs.core._EQ_;
    var expr__12935 = type;
    if (cljs.core.truth_(pred__12934.call(null, new cljs.core.Keyword(null, "right", "right", -452581833), expr__12935))) {
      return[cljs.core.str(s), cljs.core.str(cuerdas.core.repeat.call(null, padding__$1, padlen))].join("");
    } else {
      if (cljs.core.truth_(pred__12934.call(null, new cljs.core.Keyword(null, "both", "both", -393648840), expr__12935))) {
        var first = cuerdas.core.repeat.call(null, padding__$1, Math.ceil(padlen / 2));
        var second = cuerdas.core.repeat.call(null, padding__$1, Math.floor(padlen / 2));
        return[cljs.core.str(first), cljs.core.str(s), cljs.core.str(second)].join("");
      } else {
        if (cljs.core.truth_(pred__12934.call(null, new cljs.core.Keyword(null, "left", "left", -399115937), expr__12935))) {
          return[cljs.core.str(cuerdas.core.repeat.call(null, padding__$1, padlen)), cljs.core.str(s)].join("");
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__12935)].join(""));
        }
      }
    }
  };
  var pad = function(s, var_args) {
    var p__12926 = null;
    if (arguments.length > 1) {
      p__12926 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pad__delegate.call(this, s, p__12926);
  };
  pad.cljs$lang$maxFixedArity = 1;
  pad.cljs$lang$applyTo = function(arglist__12937) {
    var s = cljs.core.first(arglist__12937);
    var p__12926 = cljs.core.rest(arglist__12937);
    return pad__delegate(s, p__12926);
  };
  pad.cljs$core$IFn$_invoke$arity$variadic = pad__delegate;
  return pad;
}();
cuerdas.core.capitalize = function capitalize(s) {
  return[cljs.core.str(cuerdas.core.upper.call(null, s.charAt(0))), cljs.core.str(cuerdas.core.slice.call(null, s, 1))].join("");
};
cuerdas.core.camelize = function camelize(s) {
  return cuerdas.core.replace.call(null, cuerdas.core.trim.call(null, s), cuerdas.core.regexp.call(null, /[-_\s]+(.)?/, "g"), function(match, c) {
    if (cljs.core.truth_(c)) {
      return cuerdas.core.upper.call(null, c);
    } else {
      return "";
    }
  });
};
cuerdas.core.dasherize = function dasherize(s) {
  return cuerdas.core.lower.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.trim.call(null, s), /([A-Z])/, "-$1"), /[-_\s]+/, "-"));
};
cuerdas.core.underscored = function underscored(s) {
  return cuerdas.core.lower.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.trim.call(null, s), cuerdas.core.regexp.call(null, /([a-z\d])([A-Z]+)/, "g"), "$1_$2"), cuerdas.core.regexp.call(null, /[-\s]+/, "g"), "_"));
};
cuerdas.core.humanize = function humanize(s) {
  return cuerdas.core.capitalize.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.underscored.call(null, s), /_id$/, ""), cuerdas.core.regexp.call(null, "_", "g"), " "));
};
cuerdas.core.titleize = function() {
  var titleize = null;
  var titleize__1 = function(s) {
    return goog.string.toTitleCase(s);
  };
  var titleize__2 = function(s, delimiters) {
    return goog.string.toTitleCase(s, delimiters);
  };
  titleize = function(s, delimiters) {
    switch(arguments.length) {
      case 1:
        return titleize__1.call(this, s);
      case 2:
        return titleize__2.call(this, s, delimiters);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  titleize.cljs$core$IFn$_invoke$arity$1 = titleize__1;
  titleize.cljs$core$IFn$_invoke$arity$2 = titleize__2;
  return titleize;
}();
cuerdas.core.classify = function classify(s) {
  return cuerdas.core.capitalize.call(null, cuerdas.core.replace.call(null, cuerdas.core.camelize.call(null, cuerdas.core.replace.call(null, [cljs.core.str(s)].join(""), /[\W_]/, " ")), /\s/, ""));
};
goog.provide("goog.date.DateLike");
goog.date.DateLike;
goog.provide("goog.i18n.TimeZone");
goog.require("goog.array");
goog.require("goog.date.DateLike");
goog.require("goog.string");
goog.i18n.TimeZone = function() {
  this.timeZoneId_;
  this.standardOffset_;
  this.tzNames_;
  this.transitions_;
};
goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_ = 3600 * 1E3;
goog.i18n.TimeZone.NameType = {STD_SHORT_NAME:0, STD_LONG_NAME:1, DLT_SHORT_NAME:2, DLT_LONG_NAME:3};
goog.i18n.TimeZone.createTimeZone = function(timeZoneData) {
  if (typeof timeZoneData == "number") {
    return goog.i18n.TimeZone.createSimpleTimeZone_(timeZoneData);
  }
  var tz = new goog.i18n.TimeZone;
  tz.timeZoneId_ = timeZoneData["id"];
  tz.standardOffset_ = -timeZoneData["std_offset"];
  tz.tzNames_ = timeZoneData["names"];
  tz.transitions_ = timeZoneData["transitions"];
  return tz;
};
goog.i18n.TimeZone.createSimpleTimeZone_ = function(timeZoneOffsetInMinutes) {
  var tz = new goog.i18n.TimeZone;
  tz.standardOffset_ = timeZoneOffsetInMinutes;
  tz.timeZoneId_ = goog.i18n.TimeZone.composePosixTimeZoneID_(timeZoneOffsetInMinutes);
  var str = goog.i18n.TimeZone.composeUTCString_(timeZoneOffsetInMinutes);
  tz.tzNames_ = [str, str];
  tz.transitions_ = [];
  return tz;
};
goog.i18n.TimeZone.composeGMTString_ = function(offset) {
  var parts = ["GMT"];
  parts.push(offset <= 0 ? "+" : "-");
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), ":", goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.composePosixTimeZoneID_ = function(offset) {
  if (offset == 0) {
    return "Etc/GMT";
  }
  var parts = ["Etc/GMT", offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", goog.string.padNumber(offset, 2));
  }
  return parts.join("");
};
goog.i18n.TimeZone.composeUTCString_ = function(offset) {
  if (offset == 0) {
    return "UTC";
  }
  var parts = ["UTC", offset < 0 ? "+" : "-"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", offset);
  }
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getTimeZoneData = function() {
  return{"id":this.timeZoneId_, "std_offset":-this.standardOffset_, "names":goog.array.clone(this.tzNames_), "transitions":goog.array.clone(this.transitions_)};
};
goog.i18n.TimeZone.prototype.getDaylightAdjustment = function(date) {
  var timeInMs = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes());
  var timeInHours = timeInMs / goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_;
  var index = 0;
  while (index < this.transitions_.length && timeInHours >= this.transitions_[index]) {
    index += 2;
  }
  return index == 0 ? 0 : this.transitions_[index - 1];
};
goog.i18n.TimeZone.prototype.getGMTString = function(date) {
  return goog.i18n.TimeZone.composeGMTString_(this.getOffset(date));
};
goog.i18n.TimeZone.prototype.getLongName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_LONG_NAME : goog.i18n.TimeZone.NameType.STD_LONG_NAME];
};
goog.i18n.TimeZone.prototype.getOffset = function(date) {
  return this.standardOffset_ - this.getDaylightAdjustment(date);
};
goog.i18n.TimeZone.prototype.getRFCTimeZoneString = function(date) {
  var offset = -this.getOffset(date);
  var parts = [offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getShortName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_SHORT_NAME : goog.i18n.TimeZone.NameType.STD_SHORT_NAME];
};
goog.i18n.TimeZone.prototype.getTimeZoneId = function() {
  return this.timeZoneId_;
};
goog.i18n.TimeZone.prototype.isDaylightTime = function(date) {
  return this.getDaylightAdjustment(date) > 0;
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href;
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error;
  if (typeof err == "string") {
    error = Error(err);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(error, goog.debug.enhanceError);
    }
  } else {
    error = err;
  }
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(goog.debug.enhanceError);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (goog.STRICT_MODE_COMPATIBLE) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = new Error;
  if (Error.captureStackTrace) {
    Error.captureStackTrace(tempErr, fn);
    return String(tempErr.stack);
  } else {
    try {
      throw tempErr;
    } catch (e) {
      tempErr = e;
    }
    var stack = tempErr.stack;
    if (stack) {
      return String(stack);
    }
  }
  return null;
};
goog.debug.getStacktrace = function(opt_fn) {
  var stack;
  if (goog.STRICT_MODE_COMPATIBLE) {
    var contextFn = opt_fn || goog.debug.getStacktrace;
    stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  if (!stack) {
    stack = goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
  }
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception, goog.debug.Logger.prototype.log));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception, opt_fnStackContext) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    var context;
    if (goog.STRICT_MODE_COMPATIBLE) {
      context = opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord;
    } else {
      context = opt_fnStackContext || arguments.callee.caller;
    }
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, opt_fnStackContext || goog.debug.Logger.prototype.getLogRecord));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME);
    goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.Uri");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && !contentTypeKey && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.date");
goog.provide("goog.date.Date");
goog.provide("goog.date.DateTime");
goog.provide("goog.date.Interval");
goog.provide("goog.date.month");
goog.provide("goog.date.weekDay");
goog.require("goog.asserts");
goog.require("goog.date.DateLike");
goog.require("goog.i18n.DateTimeSymbols");
goog.require("goog.string");
goog.date.weekDay = {MON:0, TUE:1, WED:2, THU:3, FRI:4, SAT:5, SUN:6};
goog.date.month = {JAN:0, FEB:1, MAR:2, APR:3, MAY:4, JUN:5, JUL:6, AUG:7, SEP:8, OCT:9, NOV:10, DEC:11};
goog.date.formatMonthAndYear = function(monthName, yearNum) {
  var MSG_MONTH_AND_YEAR = goog.getMsg("{$monthName} {$yearNum}", {"monthName":monthName, "yearNum":yearNum});
  return MSG_MONTH_AND_YEAR;
};
goog.date.splitDateStringRegex_ = new RegExp("^(\\d{4})(?:(?:-?(\\d{2})(?:-?(\\d{2}))?)|" + "(?:-?(\\d{3}))|(?:-?W(\\d{2})(?:-?([1-7]))?))?$");
goog.date.splitTimeStringRegex_ = /^(\d{2})(?::?(\d{2})(?::?(\d{2})(\.\d+)?)?)?$/;
goog.date.splitTimezoneStringRegex_ = /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/;
goog.date.splitDurationRegex_ = new RegExp("^(-)?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)D)?" + "(T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$");
goog.date.isLeapYear = function(year) {
  return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
};
goog.date.isLongIsoYear = function(year) {
  var n = 5 * year + 12 - 4 * (Math.floor(year / 100) - Math.floor(year / 400));
  n += Math.floor((year - 100) / 400) - Math.floor((year - 102) / 400);
  n += Math.floor((year - 200) / 400) - Math.floor((year - 199) / 400);
  return n % 28 < 5;
};
goog.date.getNumberOfDaysInMonth = function(year, month) {
  switch(month) {
    case goog.date.month.FEB:
      return goog.date.isLeapYear(year) ? 29 : 28;
    case goog.date.month.JUN:
    ;
    case goog.date.month.SEP:
    ;
    case goog.date.month.NOV:
    ;
    case goog.date.month.APR:
      return 30;
  }
  return 31;
};
goog.date.isSameDay = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getDate() == now.getDate() && goog.date.isSameMonth(date, now);
};
goog.date.isSameMonth = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getMonth() == now.getMonth() && goog.date.isSameYear(date, now);
};
goog.date.isSameYear = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getFullYear() == now.getFullYear();
};
goog.date.getWeekNumber = function(year, month, date, opt_weekDay, opt_firstDayOfWeek) {
  var d = new Date(year, month, date);
  var cutoff = opt_weekDay || goog.date.weekDay.THU;
  var firstday = opt_firstDayOfWeek || goog.date.weekDay.MON;
  var ONE_DAY = 24 * 60 * 60 * 1E3;
  var isoday = (d.getDay() + 6) % 7;
  var daypos = (isoday - firstday + 7) % 7;
  var cutoffpos = (cutoff - firstday + 7) % 7;
  var cutoffSameWeek = d.valueOf() + (cutoffpos - daypos) * ONE_DAY;
  var jan1 = (new Date((new Date(cutoffSameWeek)).getFullYear(), 0, 1)).valueOf();
  return Math.floor(Math.round((cutoffSameWeek - jan1) / ONE_DAY) / 7) + 1;
};
goog.date.min = function(date1, date2) {
  return date1 < date2 ? date1 : date2;
};
goog.date.max = function(date1, date2) {
  return date1 > date2 ? date1 : date2;
};
goog.date.fromIsoString = function(formatted) {
  var ret = new goog.date.DateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.setIso8601DateTime = function(dateTime, formatted) {
  formatted = goog.string.trim(formatted);
  var delim = formatted.indexOf("T") == -1 ? " " : "T";
  var parts = formatted.split(delim);
  return goog.date.setIso8601DateOnly_(dateTime, parts[0]) && (parts.length < 2 || goog.date.setIso8601TimeOnly_(dateTime, parts[1]));
};
goog.date.setIso8601DateOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitDateStringRegex_);
  if (!parts) {
    return false;
  }
  var year = Number(parts[1]);
  var month = Number(parts[2]);
  var date = Number(parts[3]);
  var dayOfYear = Number(parts[4]);
  var week = Number(parts[5]);
  var dayOfWeek = Number(parts[6]) || 1;
  d.setFullYear(year);
  if (dayOfYear) {
    d.setDate(1);
    d.setMonth(0);
    var offset = dayOfYear - 1;
    d.add(new goog.date.Interval(goog.date.Interval.DAYS, offset));
  } else {
    if (week) {
      goog.date.setDateFromIso8601Week_(d, week, dayOfWeek);
    } else {
      if (month) {
        d.setDate(1);
        d.setMonth(month - 1);
      }
      if (date) {
        d.setDate(date);
      }
    }
  }
  return true;
};
goog.date.setDateFromIso8601Week_ = function(d, week, dayOfWeek) {
  d.setMonth(0);
  d.setDate(1);
  var jsDay = d.getDay();
  var jan1WeekDay = jsDay || 7;
  var THURSDAY = 4;
  if (jan1WeekDay <= THURSDAY) {
    var startDelta = 1 - jan1WeekDay
  } else {
    startDelta = 8 - jan1WeekDay;
  }
  var absoluteDays = Number(dayOfWeek) + 7 * (Number(week) - 1);
  var delta = startDelta + absoluteDays - 1;
  var interval = new goog.date.Interval(goog.date.Interval.DAYS, delta);
  d.add(interval);
};
goog.date.setIso8601TimeOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitTimezoneStringRegex_);
  var offset = 0;
  if (parts) {
    if (parts[0] != "Z") {
      offset = parts[2] * 60 + Number(parts[3]);
      offset *= parts[1] == "-" ? 1 : -1;
    }
    offset -= d.getTimezoneOffset();
    formatted = formatted.substr(0, formatted.length - parts[0].length);
  }
  parts = formatted.match(goog.date.splitTimeStringRegex_);
  if (!parts) {
    return false;
  }
  d.setHours(Number(parts[1]));
  d.setMinutes(Number(parts[2]) || 0);
  d.setSeconds(Number(parts[3]) || 0);
  d.setMilliseconds(parts[4] ? parts[4] * 1E3 : 0);
  if (offset != 0) {
    d.setTime(d.getTime() + offset * 6E4);
  }
  return true;
};
goog.date.Interval = function(opt_years, opt_months, opt_days, opt_hours, opt_minutes, opt_seconds) {
  if (goog.isString(opt_years)) {
    var type = opt_years;
    var interval = (opt_months);
    this.years = type == goog.date.Interval.YEARS ? interval : 0;
    this.months = type == goog.date.Interval.MONTHS ? interval : 0;
    this.days = type == goog.date.Interval.DAYS ? interval : 0;
    this.hours = type == goog.date.Interval.HOURS ? interval : 0;
    this.minutes = type == goog.date.Interval.MINUTES ? interval : 0;
    this.seconds = type == goog.date.Interval.SECONDS ? interval : 0;
  } else {
    this.years = (opt_years) || 0;
    this.months = opt_months || 0;
    this.days = opt_days || 0;
    this.hours = opt_hours || 0;
    this.minutes = opt_minutes || 0;
    this.seconds = opt_seconds || 0;
  }
};
goog.date.Interval.fromIsoString = function(duration) {
  var parts = duration.match(goog.date.splitDurationRegex_);
  if (!parts) {
    return null;
  }
  var timeEmpty = !(parts[6] || parts[7] || parts[8]);
  var dateTimeEmpty = timeEmpty && !(parts[2] || parts[3] || parts[4]);
  if (dateTimeEmpty || timeEmpty && parts[5]) {
    return null;
  }
  var negative = parts[1];
  var years = parseInt(parts[2], 10) || 0;
  var months = parseInt(parts[3], 10) || 0;
  var days = parseInt(parts[4], 10) || 0;
  var hours = parseInt(parts[6], 10) || 0;
  var minutes = parseInt(parts[7], 10) || 0;
  var seconds = parseFloat(parts[8]) || 0;
  return negative ? new goog.date.Interval(-years, -months, -days, -hours, -minutes, -seconds) : new goog.date.Interval(years, months, days, hours, minutes, seconds);
};
goog.date.Interval.prototype.toIsoString = function(opt_verbose) {
  var minField = Math.min(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  var maxField = Math.max(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  if (minField < 0 && maxField > 0) {
    return null;
  }
  if (!opt_verbose && minField == 0 && maxField == 0) {
    return "PT0S";
  }
  var res = [];
  if (minField < 0) {
    res.push("-");
  }
  res.push("P");
  if (this.years || opt_verbose) {
    res.push(Math.abs(this.years) + "Y");
  }
  if (this.months || opt_verbose) {
    res.push(Math.abs(this.months) + "M");
  }
  if (this.days || opt_verbose) {
    res.push(Math.abs(this.days) + "D");
  }
  if (this.hours || this.minutes || this.seconds || opt_verbose) {
    res.push("T");
    if (this.hours || opt_verbose) {
      res.push(Math.abs(this.hours) + "H");
    }
    if (this.minutes || opt_verbose) {
      res.push(Math.abs(this.minutes) + "M");
    }
    if (this.seconds || opt_verbose) {
      res.push(Math.abs(this.seconds) + "S");
    }
  }
  return res.join("");
};
goog.date.Interval.prototype.equals = function(other) {
  return other.years == this.years && other.months == this.months && other.days == this.days && other.hours == this.hours && other.minutes == this.minutes && other.seconds == this.seconds;
};
goog.date.Interval.prototype.clone = function() {
  return new goog.date.Interval(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
};
goog.date.Interval.YEARS = "y";
goog.date.Interval.MONTHS = "m";
goog.date.Interval.DAYS = "d";
goog.date.Interval.HOURS = "h";
goog.date.Interval.MINUTES = "n";
goog.date.Interval.SECONDS = "s";
goog.date.Interval.prototype.isZero = function() {
  return this.years == 0 && this.months == 0 && this.days == 0 && this.hours == 0 && this.minutes == 0 && this.seconds == 0;
};
goog.date.Interval.prototype.getInverse = function() {
  return this.times(-1);
};
goog.date.Interval.prototype.times = function(n) {
  return new goog.date.Interval(this.years * n, this.months * n, this.days * n, this.hours * n, this.minutes * n, this.seconds * n);
};
goog.date.Interval.prototype.getTotalSeconds = function() {
  goog.asserts.assert(this.years == 0 && this.months == 0);
  return((this.days * 24 + this.hours) * 60 + this.minutes) * 60 + this.seconds;
};
goog.date.Interval.prototype.add = function(interval) {
  this.years += interval.years;
  this.months += interval.months;
  this.days += interval.days;
  this.hours += interval.hours;
  this.minutes += interval.minutes;
  this.seconds += interval.seconds;
};
goog.date.Date = function(opt_year, opt_month, opt_date) {
  this.date;
  if (goog.isNumber(opt_year)) {
    this.date = this.buildDate_(opt_year, opt_month || 0, opt_date || 1);
    this.maybeFixDst_(opt_date || 1);
  } else {
    if (goog.isObject(opt_year)) {
      this.date = this.buildDate_(opt_year.getFullYear(), opt_year.getMonth(), opt_year.getDate());
      this.maybeFixDst_(opt_year.getDate());
    } else {
      this.date = new Date(goog.now());
      this.date.setHours(0);
      this.date.setMinutes(0);
      this.date.setSeconds(0);
      this.date.setMilliseconds(0);
    }
  }
};
goog.date.Date.prototype.buildDate_ = function(fullYear, month, date) {
  var d = new Date(fullYear, month, date);
  if (fullYear >= 0 && fullYear < 100) {
    d.setFullYear(d.getFullYear() - 1900);
  }
  return d;
};
goog.date.Date.prototype.firstDayOfWeek_ = goog.i18n.DateTimeSymbols.FIRSTDAYOFWEEK;
goog.date.Date.prototype.firstWeekCutOffDay_ = goog.i18n.DateTimeSymbols.FIRSTWEEKCUTOFFDAY;
goog.date.Date.prototype.clone = function() {
  var date = new goog.date.Date(this.date);
  date.firstDayOfWeek_ = this.firstDayOfWeek_;
  date.firstWeekCutOffDay_ = this.firstWeekCutOffDay_;
  return date;
};
goog.date.Date.prototype.getFullYear = function() {
  return this.date.getFullYear();
};
goog.date.Date.prototype.getYear = function() {
  return this.getFullYear();
};
goog.date.Date.prototype.getMonth = function() {
  return(this.date.getMonth());
};
goog.date.Date.prototype.getDate = function() {
  return this.date.getDate();
};
goog.date.Date.prototype.getTime = function() {
  return this.date.getTime();
};
goog.date.Date.prototype.getDay = function() {
  return(this.date.getDay());
};
goog.date.Date.prototype.getIsoWeekday = function() {
  return(this.getDay() + 6) % 7;
};
goog.date.Date.prototype.getWeekday = function() {
  return(this.getIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getUTCFullYear = function() {
  return this.date.getUTCFullYear();
};
goog.date.Date.prototype.getUTCMonth = function() {
  return(this.date.getUTCMonth());
};
goog.date.Date.prototype.getUTCDate = function() {
  return this.date.getUTCDate();
};
goog.date.Date.prototype.getUTCDay = function() {
  return(this.date.getDay());
};
goog.date.Date.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.Date.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.Date.prototype.getUTCIsoWeekday = function() {
  return(this.date.getUTCDay() + 6) % 7;
};
goog.date.Date.prototype.getUTCWeekday = function() {
  return(this.getUTCIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getFirstDayOfWeek = function() {
  return this.firstDayOfWeek_;
};
goog.date.Date.prototype.getFirstWeekCutOffDay = function() {
  return this.firstWeekCutOffDay_;
};
goog.date.Date.prototype.getNumberOfDaysInMonth = function() {
  return goog.date.getNumberOfDaysInMonth(this.getFullYear(), this.getMonth());
};
goog.date.Date.prototype.getWeekNumber = function() {
  return goog.date.getWeekNumber(this.getFullYear(), this.getMonth(), this.getDate(), this.firstWeekCutOffDay_, this.firstDayOfWeek_);
};
goog.date.Date.prototype.getDayOfYear = function() {
  var dayOfYear = this.getDate();
  var year = this.getFullYear();
  for (var m = this.getMonth() - 1;m >= 0;m--) {
    dayOfYear += goog.date.getNumberOfDaysInMonth(year, m);
  }
  return dayOfYear;
};
goog.date.Date.prototype.getTimezoneOffset = function() {
  return this.date.getTimezoneOffset();
};
goog.date.Date.prototype.getTimezoneOffsetString = function() {
  var tz;
  var offset = this.getTimezoneOffset();
  if (offset == 0) {
    tz = "Z";
  } else {
    var n = Math.abs(offset) / 60;
    var h = Math.floor(n);
    var m = (n - h) * 60;
    tz = (offset > 0 ? "-" : "+") + goog.string.padNumber(h, 2) + ":" + goog.string.padNumber(m, 2);
  }
  return tz;
};
goog.date.Date.prototype.set = function(date) {
  this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
};
goog.date.Date.prototype.setFullYear = function(year) {
  this.date.setFullYear(year);
};
goog.date.Date.prototype.setYear = function(year) {
  this.setFullYear(year);
};
goog.date.Date.prototype.setMonth = function(month) {
  this.date.setMonth(month);
};
goog.date.Date.prototype.setDate = function(date) {
  this.date.setDate(date);
};
goog.date.Date.prototype.setTime = function(ms) {
  this.date.setTime(ms);
};
goog.date.Date.prototype.setUTCFullYear = function(year) {
  this.date.setUTCFullYear(year);
};
goog.date.Date.prototype.setUTCMonth = function(month) {
  this.date.setUTCMonth(month);
};
goog.date.Date.prototype.setUTCDate = function(date) {
  this.date.setUTCDate(date);
};
goog.date.Date.prototype.setFirstDayOfWeek = function(day) {
  this.firstDayOfWeek_ = day;
};
goog.date.Date.prototype.setFirstWeekCutOffDay = function(day) {
  this.firstWeekCutOffDay_ = day;
};
goog.date.Date.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var month = this.getMonth() + interval.months + interval.years * 12;
    var year = this.getYear() + Math.floor(month / 12);
    month %= 12;
    if (month < 0) {
      month += 12;
    }
    var daysInTargetMonth = goog.date.getNumberOfDaysInMonth(year, month);
    var date = Math.min(daysInTargetMonth, this.getDate());
    this.setDate(1);
    this.setFullYear(year);
    this.setMonth(month);
    this.setDate(date);
  }
  if (interval.days) {
    var noon = new Date(this.getYear(), this.getMonth(), this.getDate(), 12);
    var result = new Date(noon.getTime() + interval.days * 864E5);
    this.setDate(1);
    this.setFullYear(result.getFullYear());
    this.setMonth(result.getMonth());
    this.setDate(result.getDate());
    this.maybeFixDst_(result.getDate());
  }
};
goog.date.Date.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getFullYear(), goog.string.padNumber(this.getMonth() + 1, 2), goog.string.padNumber(this.getDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.Date.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getUTCFullYear(), goog.string.padNumber(this.getUTCMonth() + 1, 2), goog.string.padNumber(this.getUTCDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? "Z" : "");
};
goog.date.Date.prototype.equals = function(other) {
  return!!(other && this.getYear() == other.getYear() && this.getMonth() == other.getMonth() && this.getDate() == other.getDate());
};
goog.date.Date.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.Date.prototype.maybeFixDst_ = function(expected) {
  if (this.getDate() != expected) {
    var dir = this.getDate() < expected ? 1 : -1;
    this.date.setUTCHours(this.date.getUTCHours() + dir);
  }
};
goog.date.Date.prototype.valueOf = function() {
  return this.date.valueOf();
};
goog.date.Date.compare = function(date1, date2) {
  return date1.getTime() - date2.getTime();
};
goog.date.DateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  if (goog.isNumber(opt_year)) {
    this.date = new Date(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    this.date = new Date(opt_year ? opt_year.getTime() : goog.now());
  }
};
goog.inherits(goog.date.DateTime, goog.date.Date);
goog.date.DateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.DateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.DateTime.fromRfc822String = function(formatted) {
  var date = new Date(formatted);
  return!isNaN(date.getTime()) ? new goog.date.DateTime(date) : null;
};
goog.date.DateTime.prototype.getHours = function() {
  return this.date.getHours();
};
goog.date.DateTime.prototype.getMinutes = function() {
  return this.date.getMinutes();
};
goog.date.DateTime.prototype.getSeconds = function() {
  return this.date.getSeconds();
};
goog.date.DateTime.prototype.getMilliseconds = function() {
  return this.date.getMilliseconds();
};
goog.date.DateTime.prototype.getUTCDay = function() {
  return(this.date.getUTCDay());
};
goog.date.DateTime.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.DateTime.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.DateTime.prototype.getUTCSeconds = function() {
  return this.date.getUTCSeconds();
};
goog.date.DateTime.prototype.getUTCMilliseconds = function() {
  return this.date.getUTCMilliseconds();
};
goog.date.DateTime.prototype.setHours = function(hours) {
  this.date.setHours(hours);
};
goog.date.DateTime.prototype.setMinutes = function(minutes) {
  this.date.setMinutes(minutes);
};
goog.date.DateTime.prototype.setSeconds = function(seconds) {
  this.date.setSeconds(seconds);
};
goog.date.DateTime.prototype.setMilliseconds = function(ms) {
  this.date.setMilliseconds(ms);
};
goog.date.DateTime.prototype.setUTCHours = function(hours) {
  this.date.setUTCHours(hours);
};
goog.date.DateTime.prototype.setUTCMinutes = function(minutes) {
  this.date.setUTCMinutes(minutes);
};
goog.date.DateTime.prototype.setUTCSeconds = function(seconds) {
  this.date.setUTCSeconds(seconds);
};
goog.date.DateTime.prototype.setUTCMilliseconds = function(ms) {
  this.date.setUTCMilliseconds(ms);
};
goog.date.DateTime.prototype.isMidnight = function() {
  return this.getHours() == 0 && this.getMinutes() == 0 && this.getSeconds() == 0 && this.getMilliseconds() == 0;
};
goog.date.DateTime.prototype.add = function(interval) {
  goog.date.Date.prototype.add.call(this, interval);
  if (interval.hours) {
    this.setHours(this.date.getHours() + interval.hours);
  }
  if (interval.minutes) {
    this.setMinutes(this.date.getMinutes() + interval.minutes);
  }
  if (interval.seconds) {
    this.setSeconds(this.date.getSeconds() + interval.seconds);
  }
};
goog.date.DateTime.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var dateString = goog.date.Date.prototype.toIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateString + " " + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
  }
  return dateString + "T" + goog.string.padNumber(this.getHours(), 2) + goog.string.padNumber(this.getMinutes(), 2) + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toXmlDateTime = function(opt_timezone) {
  return goog.date.Date.prototype.toIsoString.call(this, true) + "T" + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_timezone ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var dateStr = goog.date.Date.prototype.toUTCIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateStr + " " + goog.string.padNumber(this.getUTCHours(), 2) + ":" + goog.string.padNumber(this.getUTCMinutes(), 2) + ":" + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
  }
  return dateStr + "T" + goog.string.padNumber(this.getUTCHours(), 2) + goog.string.padNumber(this.getUTCMinutes(), 2) + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
};
goog.date.DateTime.prototype.equals = function(other) {
  return this.getTime() == other.getTime();
};
goog.date.DateTime.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.DateTime.prototype.toUsTimeString = function(opt_padHours, opt_showAmPm, opt_omitZeroMinutes) {
  var hours = this.getHours();
  if (!goog.isDef(opt_showAmPm)) {
    opt_showAmPm = true;
  }
  var isPM = hours == 12;
  if (hours > 12) {
    hours -= 12;
    isPM = true;
  }
  if (hours == 0 && opt_showAmPm) {
    hours = 12;
  }
  var label = opt_padHours ? goog.string.padNumber(hours, 2) : String(hours);
  var minutes = this.getMinutes();
  if (!opt_omitZeroMinutes || minutes > 0) {
    label += ":" + goog.string.padNumber(minutes, 2);
  }
  if (opt_showAmPm) {
    var MSG_TIME_AM = goog.getMsg("am");
    var MSG_TIME_PM = goog.getMsg("pm");
    label += isPM ? MSG_TIME_PM : MSG_TIME_AM;
  }
  return label;
};
goog.date.DateTime.prototype.toIsoTimeString = function(opt_showSeconds) {
  var hours = this.getHours();
  var label = goog.string.padNumber(hours, 2) + ":" + goog.string.padNumber(this.getMinutes(), 2);
  if (!goog.isDef(opt_showSeconds) || opt_showSeconds) {
    label += ":" + goog.string.padNumber(this.getSeconds(), 2);
  }
  return label;
};
goog.date.DateTime.prototype.clone = function() {
  var date = new goog.date.DateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.provide("goog.date.UtcDateTime");
goog.require("goog.date");
goog.require("goog.date.Date");
goog.require("goog.date.DateTime");
goog.require("goog.date.Interval");
goog.date.UtcDateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  var timestamp;
  if (goog.isNumber(opt_year)) {
    timestamp = Date.UTC(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    timestamp = opt_year ? opt_year.getTime() : goog.now();
  }
  this.date = new Date(timestamp);
};
goog.inherits(goog.date.UtcDateTime, goog.date.DateTime);
goog.date.UtcDateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.UtcDateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.UtcDateTime.fromIsoString = function(formatted) {
  var ret = new goog.date.UtcDateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.UtcDateTime.prototype.clone = function() {
  var date = new goog.date.UtcDateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.date.UtcDateTime.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var yearsMonths = new goog.date.Interval(interval.years, interval.months);
    goog.date.Date.prototype.add.call(this, yearsMonths);
  }
  var daysAndTimeMillis = 1E3 * (interval.seconds + 60 * (interval.minutes + 60 * (interval.hours + 24 * interval.days)));
  this.date = new Date(this.date.getTime() + daysAndTimeMillis);
};
goog.date.UtcDateTime.prototype.getTimezoneOffset = function() {
  return 0;
};
goog.date.UtcDateTime.prototype.getFullYear = goog.date.DateTime.prototype.getUTCFullYear;
goog.date.UtcDateTime.prototype.getMonth = goog.date.DateTime.prototype.getUTCMonth;
goog.date.UtcDateTime.prototype.getDate = goog.date.DateTime.prototype.getUTCDate;
goog.date.UtcDateTime.prototype.getHours = goog.date.DateTime.prototype.getUTCHours;
goog.date.UtcDateTime.prototype.getMinutes = goog.date.DateTime.prototype.getUTCMinutes;
goog.date.UtcDateTime.prototype.getSeconds = goog.date.DateTime.prototype.getUTCSeconds;
goog.date.UtcDateTime.prototype.getMilliseconds = goog.date.DateTime.prototype.getUTCMilliseconds;
goog.date.UtcDateTime.prototype.getDay = goog.date.DateTime.prototype.getUTCDay;
goog.date.UtcDateTime.prototype.setFullYear = goog.date.DateTime.prototype.setUTCFullYear;
goog.date.UtcDateTime.prototype.setMonth = goog.date.DateTime.prototype.setUTCMonth;
goog.date.UtcDateTime.prototype.setDate = goog.date.DateTime.prototype.setUTCDate;
goog.date.UtcDateTime.prototype.setHours = goog.date.DateTime.prototype.setUTCHours;
goog.date.UtcDateTime.prototype.setMinutes = goog.date.DateTime.prototype.setUTCMinutes;
goog.date.UtcDateTime.prototype.setSeconds = goog.date.DateTime.prototype.setUTCSeconds;
goog.date.UtcDateTime.prototype.setMilliseconds = goog.date.DateTime.prototype.setUTCMilliseconds;
goog.provide("cljs_time.core");
goog.require("cljs.core");
goog.require("cljs_time.internal.core");
goog.require("goog.i18n.TimeZone");
goog.require("goog.date.UtcDateTime");
goog.require("goog.date.DateTime");
goog.require("goog.date.Date");
goog.require("cljs_time.internal.core");
cljs_time.core._STAR_sys_time_STAR_ = null;
cljs_time.core._EQ_ = cljs_time.internal.core._EQ_;
cljs_time.core.DateTimeProtocol = function() {
  var obj12980 = {};
  return obj12980;
}();
cljs_time.core.year = function year(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$year$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$year$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.year[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.year["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.year", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.month = function month(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$month$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$month$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.month[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.month["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.month", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day = function day(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.day[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.day["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day_of_week = function day_of_week(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.day_of_week[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.day_of_week["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day-of-week", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.hour = function hour(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$hour$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$hour$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.hour[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.hour["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.hour", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.minute = function minute(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minute$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minute$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.minute[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.minute["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minute", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.sec = function sec(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$sec$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$sec$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.sec[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.sec["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.sec", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.second = function second(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$second$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$second$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.second[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.second["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.second", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.milli = function milli(this$) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$milli$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$milli$arity$1(this$);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.milli[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.milli["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.milli", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.after_QMARK_ = function after_QMARK_(this$, that) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2(this$, that);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.after_QMARK_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.after_QMARK_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.after?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.before_QMARK_ = function before_QMARK_(this$, that) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2(this$, that);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.before_QMARK_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.before_QMARK_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.before?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.plus_ = function plus_(this$, period) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2(this$, period);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.plus_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.plus_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.plus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.minus_ = function minus_(this$, period) {
  if (function() {
    var and__3596__auto__ = this$;
    if (and__3596__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2(this$, period);
  } else {
    var x__4247__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3608__auto__ = cljs_time.core.minus_[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.core.minus_["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.periods = function() {
  var fixed_time_fn = function(f, set_fn, op, date, value) {
    var date__$1 = date.clone();
    set_fn.call(null, date__$1, op.call(null, f.call(null, date__$1), value));
    return date__$1;
  };
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "millis", "millis", -1338288387), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.milli, function(fixed_time_fn) {
    return function(p1__12981_SHARP_, p2__12982_SHARP_) {
      return p1__12981_SHARP_.setMilliseconds(p2__12982_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "seconds", "seconds", -445266194), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.second, function(fixed_time_fn) {
    return function(p1__12983_SHARP_, p2__12984_SHARP_) {
      return p1__12983_SHARP_.setSeconds(p2__12984_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.minute, function(fixed_time_fn) {
    return function(p1__12985_SHARP_, p2__12986_SHARP_) {
      return p1__12985_SHARP_.setMinutes(p2__12986_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.hour, function(fixed_time_fn) {
    return function(p1__12987_SHARP_, p2__12988_SHARP_) {
      return p1__12987_SHARP_.setHours(p2__12988_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "days", "days", -1394072564), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.day, function(fixed_time_fn) {
    return function(p1__12989_SHARP_, p2__12990_SHARP_) {
      return p1__12989_SHARP_.setDate(p2__12990_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      date__$1.setDate(op.call(null, cljs_time.core.day.call(null, date__$1), 7 * value));
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "months", "months", -45571637), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      var m = op.call(null, cljs_time.core.month.call(null, date__$1), value);
      var y = cljs_time.core.year.call(null, date__$1);
      var y__$1 = m > 12 ? y + 1 : m < 1 ? y - 1 : y;
      var m__$1 = m > 12 ? cljs.core.mod.call(null, m, 12) : m < 1 ? m + 12 : m;
      date__$1.setMonth(m__$1 - 1);
      date__$1.setYear(y__$1);
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "years", "years", -1298579689), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      if (cljs.core.truth_(function() {
        var and__3596__auto__ = cljs_time.internal.core.leap_year_QMARK_.call(null, cljs_time.core.year.call(null, date__$1));
        if (and__3596__auto__) {
          var and__3596__auto____$1 = cljs_time.core._EQ_.call(null, 2, cljs_time.core.month.call(null, date__$1));
          if (cljs.core.truth_(and__3596__auto____$1)) {
            return cljs_time.core._EQ_.call(null, 29, cljs_time.core.day.call(null, date__$1));
          } else {
            return and__3596__auto____$1;
          }
        } else {
          return and__3596__auto__;
        }
      }())) {
        date__$1.setDate(28);
      } else {
      }
      date__$1.setYear(op.call(null, cljs_time.core.year.call(null, date__$1), value));
      return date__$1;
    };
  }(fixed_time_fn)], null);
}();
cljs_time.core.period_fn = function period_fn(p) {
  return function(operator, date) {
    return cljs.core.reduce.call(null, function(p1__12992_SHARP_, p2__12991_SHARP_) {
      return cljs_time.core.periods.call(null, cljs.core.key.call(null, p2__12991_SHARP_)).call(null, operator, p1__12992_SHARP_, cljs.core.val.call(null, p2__12991_SHARP_));
    }, date, p);
  };
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$hour$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getHours();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$minute$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMinutes();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$second$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getSeconds();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$milli$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMilliseconds();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$hour$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getHours();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minute$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMinutes();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$second$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getSeconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$milli$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMilliseconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
cljs_time.core.utc = goog.i18n.TimeZone.createTimeZone(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "UTC", new cljs.core.Keyword(null, "std_offset", "std_offset", 1663653877), 0, new cljs.core.Keyword(null, "names", "names", -1943074658), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["UTC"], null), new cljs.core.Keyword(null, "transitions", "transitions", -2046216121), cljs.core.PersistentVector.EMPTY], 
null)));
cljs_time.core.now = function now() {
  if (cljs.core.truth_(cljs_time.core._STAR_sys_time_STAR_)) {
    return cljs_time.core._STAR_sys_time_STAR_;
  } else {
    return new goog.date.UtcDateTime;
  }
};
cljs_time.core.time_now = function time_now() {
  return new goog.date.DateTime;
};
cljs_time.core.at_midnight = function at_midnight(datetime) {
  var datetime__$1 = datetime.clone();
  var G__12994 = datetime__$1;
  G__12994.setHours(0);
  G__12994.setMinutes(0);
  G__12994.setSeconds(0);
  G__12994.setMilliseconds(0);
  return G__12994;
};
cljs_time.core.today_at_midnight = function today_at_midnight() {
  return cljs_time.core.at_midnight.call(null, cljs_time.core.now.call(null));
};
cljs_time.core.epoch = function epoch() {
  var G__12996 = new goog.date.UtcDateTime;
  G__12996.setTime(0);
  return G__12996;
};
cljs_time.core.date_midnight = function() {
  var date_midnight = null;
  var date_midnight__1 = function(year) {
    return date_midnight.call(null, year, 1, 1);
  };
  var date_midnight__2 = function(year, month) {
    return date_midnight.call(null, year, month, 1);
  };
  var date_midnight__3 = function(year, month, day) {
    return new goog.date.UtcDateTime(year, month - 1, day);
  };
  date_midnight = function(year, month, day) {
    switch(arguments.length) {
      case 1:
        return date_midnight__1.call(this, year);
      case 2:
        return date_midnight__2.call(this, year, month);
      case 3:
        return date_midnight__3.call(this, year, month, day);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_midnight.cljs$core$IFn$_invoke$arity$1 = date_midnight__1;
  date_midnight.cljs$core$IFn$_invoke$arity$2 = date_midnight__2;
  date_midnight.cljs$core$IFn$_invoke$arity$3 = date_midnight__3;
  return date_midnight;
}();
cljs_time.core.date_time = function() {
  var date_time = null;
  var date_time__1 = function(year) {
    return date_time.call(null, year, 1, 1, 0, 0, 0, 0);
  };
  var date_time__2 = function(year, month) {
    return date_time.call(null, year, month, 1, 0, 0, 0, 0);
  };
  var date_time__3 = function(year, month, day) {
    return date_time.call(null, year, month, day, 0, 0, 0, 0);
  };
  var date_time__4 = function(year, month, day, hour) {
    return date_time.call(null, year, month, day, hour, 0, 0, 0);
  };
  var date_time__5 = function(year, month, day, hour, minute) {
    return date_time.call(null, year, month, day, hour, minute, 0, 0);
  };
  var date_time__6 = function(year, month, day, hour, minute, second) {
    return date_time.call(null, year, month, day, hour, minute, second, 0);
  };
  var date_time__7 = function(year, month, day, hour, minute, second, millis) {
    return new goog.date.UtcDateTime(year, month - 1, day, hour, minute, second, millis);
  };
  date_time = function(year, month, day, hour, minute, second, millis) {
    switch(arguments.length) {
      case 1:
        return date_time__1.call(this, year);
      case 2:
        return date_time__2.call(this, year, month);
      case 3:
        return date_time__3.call(this, year, month, day);
      case 4:
        return date_time__4.call(this, year, month, day, hour);
      case 5:
        return date_time__5.call(this, year, month, day, hour, minute);
      case 6:
        return date_time__6.call(this, year, month, day, hour, minute, second);
      case 7:
        return date_time__7.call(this, year, month, day, hour, minute, second, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  date_time.cljs$core$IFn$_invoke$arity$1 = date_time__1;
  date_time.cljs$core$IFn$_invoke$arity$2 = date_time__2;
  date_time.cljs$core$IFn$_invoke$arity$3 = date_time__3;
  date_time.cljs$core$IFn$_invoke$arity$4 = date_time__4;
  date_time.cljs$core$IFn$_invoke$arity$5 = date_time__5;
  date_time.cljs$core$IFn$_invoke$arity$6 = date_time__6;
  date_time.cljs$core$IFn$_invoke$arity$7 = date_time__7;
  return date_time;
}();
cljs_time.core.local_date_time = function() {
  var local_date_time = null;
  var local_date_time__1 = function(year) {
    return local_date_time.call(null, year, 1, 1, 0, 0, 0, 0);
  };
  var local_date_time__2 = function(year, month) {
    return local_date_time.call(null, year, month, 1, 0, 0, 0, 0);
  };
  var local_date_time__3 = function(year, month, day) {
    return local_date_time.call(null, year, month, day, 0, 0, 0, 0);
  };
  var local_date_time__4 = function(year, month, day, hour) {
    return local_date_time.call(null, year, month, day, hour, 0, 0, 0);
  };
  var local_date_time__5 = function(year, month, day, hour, minute) {
    return local_date_time.call(null, year, month, day, hour, minute, 0, 0);
  };
  var local_date_time__6 = function(year, month, day, hour, minute, second) {
    return local_date_time.call(null, year, month, day, hour, minute, second, 0);
  };
  var local_date_time__7 = function(year, month, day, hour, minute, second, millis) {
    return new goog.date.DateTime(year, month - 1, day, hour, minute, second, millis);
  };
  local_date_time = function(year, month, day, hour, minute, second, millis) {
    switch(arguments.length) {
      case 1:
        return local_date_time__1.call(this, year);
      case 2:
        return local_date_time__2.call(this, year, month);
      case 3:
        return local_date_time__3.call(this, year, month, day);
      case 4:
        return local_date_time__4.call(this, year, month, day, hour);
      case 5:
        return local_date_time__5.call(this, year, month, day, hour, minute);
      case 6:
        return local_date_time__6.call(this, year, month, day, hour, minute, second);
      case 7:
        return local_date_time__7.call(this, year, month, day, hour, minute, second, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  local_date_time.cljs$core$IFn$_invoke$arity$1 = local_date_time__1;
  local_date_time.cljs$core$IFn$_invoke$arity$2 = local_date_time__2;
  local_date_time.cljs$core$IFn$_invoke$arity$3 = local_date_time__3;
  local_date_time.cljs$core$IFn$_invoke$arity$4 = local_date_time__4;
  local_date_time.cljs$core$IFn$_invoke$arity$5 = local_date_time__5;
  local_date_time.cljs$core$IFn$_invoke$arity$6 = local_date_time__6;
  local_date_time.cljs$core$IFn$_invoke$arity$7 = local_date_time__7;
  return local_date_time;
}();
cljs_time.core.local_date = function local_date(year, month, day) {
  return new goog.date.Date(year, month - 1, day);
};
cljs_time.core.today = function today() {
  if (cljs.core.truth_(cljs_time.core._STAR_sys_time_STAR_)) {
    var d = cljs_time.core._STAR_sys_time_STAR_;
    return new goog.date.Date(d.getYear(), d.getMonth(), d.getDate());
  } else {
    return new goog.date.Date;
  }
};
cljs_time.core.time_zone_for_offset = function() {
  var time_zone_for_offset = null;
  var time_zone_for_offset__1 = function(hours) {
    return time_zone_for_offset.call(null, hours, null);
  };
  var time_zone_for_offset__2 = function(hours, minutes) {
    var sign = hours < 0 ? new cljs.core.Keyword(null, "-", "-", -2112348439) : new cljs.core.Keyword(null, "+", "+", 1913524883);
    var fmt = [cljs.core.str("UTC%s%02d"), cljs.core.str(cljs.core.truth_(minutes) ? ":%02d" : null)].join("");
    var hours__$1 = hours < 0 ? -1 * hours : hours;
    var tz_name = cljs.core.truth_(minutes) ? cljs_time.internal.core.format.call(null, fmt, cljs.core.name.call(null, sign), hours__$1, minutes) : cljs_time.internal.core.format.call(null, fmt, cljs.core.name.call(null, sign), hours__$1);
    return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), tz_name, new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [sign, hours__$1, function() {
      var or__3608__auto__ = minutes;
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        return 0;
      }
    }(), 0], null), new cljs.core.Keyword(null, "rules", "rules", 1198912366), "-", new cljs.core.Keyword(null, "names", "names", -1943074658), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tz_name], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "time-zone", "cljs-time.core/time-zone", 751963705)], null));
  };
  time_zone_for_offset = function(hours, minutes) {
    switch(arguments.length) {
      case 1:
        return time_zone_for_offset__1.call(this, hours);
      case 2:
        return time_zone_for_offset__2.call(this, hours, minutes);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  time_zone_for_offset.cljs$core$IFn$_invoke$arity$1 = time_zone_for_offset__1;
  time_zone_for_offset.cljs$core$IFn$_invoke$arity$2 = time_zone_for_offset__2;
  return time_zone_for_offset;
}();
cljs_time.core.default_time_zone = function default_time_zone() {
  var hours = -1 * (new goog.date.DateTime).getTimezoneOffset() / 60;
  return cljs_time.core.time_zone_for_offset.call(null, hours | 0, cljs.core.mod.call(null, hours, 1));
};
cljs_time.core.to_default_time_zone = function to_default_time_zone(dt) {
  var map__12999 = cljs_time.core.default_time_zone.call(null);
  var map__12999__$1 = cljs.core.seq_QMARK_.call(null, map__12999) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12999) : map__12999;
  var vec__13000 = cljs.core.get.call(null, map__12999__$1, new cljs.core.Keyword(null, "offset", "offset", 296498311));
  var sign = cljs.core.nth.call(null, vec__13000, 0, null);
  var hours = cljs.core.nth.call(null, vec__13000, 1, null);
  var minutes = cljs.core.nth.call(null, vec__13000, 2, null);
  var secs = cljs.core.nth.call(null, vec__13000, 3, null);
  var f = cljs.core.truth_(cljs_time.core._EQ_.call(null, new cljs.core.Keyword(null, "+", "+", 1913524883), sign)) ? cljs.core._PLUS_ : cljs.core._;
  return new goog.date.DateTime(dt.getYear(), dt.getMonth(), dt.getDate(), f.call(null, hours, dt.getHours()), f.call(null, minutes, dt.getMinutes()), f.call(null, secs, dt.getSeconds()), dt.getMilliseconds());
};
cljs_time.core.to_time_zone = function to_time_zone(dt, tz) {
  return dt.withZone(tz);
};
cljs_time.core.from_time_zone = function from_time_zone(dt, tz) {
  return dt.withZoneRetainFields(tz);
};
cljs_time.core.years = function() {
  var years = null;
  var years__0 = function() {
    return years.call(null, null);
  };
  var years__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), n);
  };
  years = function(n) {
    switch(arguments.length) {
      case 0:
        return years__0.call(this);
      case 1:
        return years__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  years.cljs$core$IFn$_invoke$arity$0 = years__0;
  years.cljs$core$IFn$_invoke$arity$1 = years__1;
  return years;
}();
cljs_time.core.months = function() {
  var months = null;
  var months__0 = function() {
    return months.call(null, null);
  };
  var months__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), n);
  };
  months = function(n) {
    switch(arguments.length) {
      case 0:
        return months__0.call(this);
      case 1:
        return months__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  months.cljs$core$IFn$_invoke$arity$0 = months__0;
  months.cljs$core$IFn$_invoke$arity$1 = months__1;
  return months;
}();
cljs_time.core.weeks = function() {
  var weeks = null;
  var weeks__0 = function() {
    return weeks.call(null, null);
  };
  var weeks__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), n);
  };
  weeks = function(n) {
    switch(arguments.length) {
      case 0:
        return weeks__0.call(this);
      case 1:
        return weeks__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  weeks.cljs$core$IFn$_invoke$arity$0 = weeks__0;
  weeks.cljs$core$IFn$_invoke$arity$1 = weeks__1;
  return weeks;
}();
cljs_time.core.days = function() {
  var days = null;
  var days__0 = function() {
    return days.call(null, null);
  };
  var days__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), n);
  };
  days = function(n) {
    switch(arguments.length) {
      case 0:
        return days__0.call(this);
      case 1:
        return days__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  days.cljs$core$IFn$_invoke$arity$0 = days__0;
  days.cljs$core$IFn$_invoke$arity$1 = days__1;
  return days;
}();
cljs_time.core.hours = function() {
  var hours = null;
  var hours__0 = function() {
    return hours.call(null, null);
  };
  var hours__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), n);
  };
  hours = function(n) {
    switch(arguments.length) {
      case 0:
        return hours__0.call(this);
      case 1:
        return hours__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hours.cljs$core$IFn$_invoke$arity$0 = hours__0;
  hours.cljs$core$IFn$_invoke$arity$1 = hours__1;
  return hours;
}();
cljs_time.core.minutes = function() {
  var minutes = null;
  var minutes__0 = function() {
    return minutes.call(null, null);
  };
  var minutes__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), n);
  };
  minutes = function(n) {
    switch(arguments.length) {
      case 0:
        return minutes__0.call(this);
      case 1:
        return minutes__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  minutes.cljs$core$IFn$_invoke$arity$0 = minutes__0;
  minutes.cljs$core$IFn$_invoke$arity$1 = minutes__1;
  return minutes;
}();
cljs_time.core.seconds = function() {
  var seconds = null;
  var seconds__0 = function() {
    return seconds.call(null, null);
  };
  var seconds__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), n);
  };
  seconds = function(n) {
    switch(arguments.length) {
      case 0:
        return seconds__0.call(this);
      case 1:
        return seconds__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seconds.cljs$core$IFn$_invoke$arity$0 = seconds__0;
  seconds.cljs$core$IFn$_invoke$arity$1 = seconds__1;
  return seconds;
}();
cljs_time.core.millis = function() {
  var millis = null;
  var millis__0 = function() {
    return millis.call(null, null);
  };
  var millis__1 = function(n) {
    return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387), n);
  };
  millis = function(n) {
    switch(arguments.length) {
      case 0:
        return millis__0.call(this);
      case 1:
        return millis__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  millis.cljs$core$IFn$_invoke$arity$0 = millis__0;
  millis.cljs$core$IFn$_invoke$arity$1 = millis__1;
  return millis;
}();
cljs_time.core.plus = function() {
  var plus = null;
  var plus__2 = function(dt, p) {
    return cljs_time.core.plus_.call(null, dt, p);
  };
  var plus__3 = function() {
    var G__13001__delegate = function(dt, p, ps) {
      return cljs.core.reduce.call(null, cljs_time.core.plus_, cljs_time.core.plus_.call(null, dt, p), ps);
    };
    var G__13001 = function(dt, p, var_args) {
      var ps = null;
      if (arguments.length > 2) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13001__delegate.call(this, dt, p, ps);
    };
    G__13001.cljs$lang$maxFixedArity = 2;
    G__13001.cljs$lang$applyTo = function(arglist__13002) {
      var dt = cljs.core.first(arglist__13002);
      arglist__13002 = cljs.core.next(arglist__13002);
      var p = cljs.core.first(arglist__13002);
      var ps = cljs.core.rest(arglist__13002);
      return G__13001__delegate(dt, p, ps);
    };
    G__13001.cljs$core$IFn$_invoke$arity$variadic = G__13001__delegate;
    return G__13001;
  }();
  plus = function(dt, p, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 2:
        return plus__2.call(this, dt, p);
      default:
        return plus__3.cljs$core$IFn$_invoke$arity$variadic(dt, p, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  plus.cljs$lang$maxFixedArity = 2;
  plus.cljs$lang$applyTo = plus__3.cljs$lang$applyTo;
  plus.cljs$core$IFn$_invoke$arity$2 = plus__2;
  plus.cljs$core$IFn$_invoke$arity$variadic = plus__3.cljs$core$IFn$_invoke$arity$variadic;
  return plus;
}();
cljs_time.core.minus = function() {
  var minus = null;
  var minus__2 = function(dt, p) {
    return cljs_time.core.minus_.call(null, dt, p);
  };
  var minus__3 = function() {
    var G__13003__delegate = function(dt, p, ps) {
      return cljs.core.reduce.call(null, cljs_time.core.minus_, cljs_time.core.minus_.call(null, dt, p), ps);
    };
    var G__13003 = function(dt, p, var_args) {
      var ps = null;
      if (arguments.length > 2) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13003__delegate.call(this, dt, p, ps);
    };
    G__13003.cljs$lang$maxFixedArity = 2;
    G__13003.cljs$lang$applyTo = function(arglist__13004) {
      var dt = cljs.core.first(arglist__13004);
      arglist__13004 = cljs.core.next(arglist__13004);
      var p = cljs.core.first(arglist__13004);
      var ps = cljs.core.rest(arglist__13004);
      return G__13003__delegate(dt, p, ps);
    };
    G__13003.cljs$core$IFn$_invoke$arity$variadic = G__13003__delegate;
    return G__13003;
  }();
  minus = function(dt, p, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 2:
        return minus__2.call(this, dt, p);
      default:
        return minus__3.cljs$core$IFn$_invoke$arity$variadic(dt, p, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  minus.cljs$lang$maxFixedArity = 2;
  minus.cljs$lang$applyTo = minus__3.cljs$lang$applyTo;
  minus.cljs$core$IFn$_invoke$arity$2 = minus__2;
  minus.cljs$core$IFn$_invoke$arity$variadic = minus__3.cljs$core$IFn$_invoke$arity$variadic;
  return minus;
}();
cljs_time.core.ago = function ago(period) {
  return cljs_time.core.minus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.yesterday = function yesterday() {
  return cljs_time.core.ago.call(null, cljs_time.core.days.call(null, 1));
};
cljs_time.core.from_now = function from_now(period) {
  return cljs_time.core.plus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.earliest = function() {
  var earliest = null;
  var earliest__1 = function(dts) {
    return cljs.core.reduce.call(null, earliest, dts);
  };
  var earliest__2 = function(dt1, dt2) {
    if (cljs.core.truth_(cljs_time.core.before_QMARK_.call(null, dt1, dt2))) {
      return dt1;
    } else {
      return dt2;
    }
  };
  earliest = function(dt1, dt2) {
    switch(arguments.length) {
      case 1:
        return earliest__1.call(this, dt1);
      case 2:
        return earliest__2.call(this, dt1, dt2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  earliest.cljs$core$IFn$_invoke$arity$1 = earliest__1;
  earliest.cljs$core$IFn$_invoke$arity$2 = earliest__2;
  return earliest;
}();
cljs_time.core.latest = function() {
  var latest = null;
  var latest__1 = function(dts) {
    return cljs.core.reduce.call(null, latest, dts);
  };
  var latest__2 = function(dt1, dt2) {
    if (cljs.core.truth_(cljs_time.core.after_QMARK_.call(null, dt1, dt2))) {
      return dt1;
    } else {
      return dt2;
    }
  };
  latest = function(dt1, dt2) {
    switch(arguments.length) {
      case 1:
        return latest__1.call(this, dt1);
      case 2:
        return latest__2.call(this, dt1, dt2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  latest.cljs$core$IFn$_invoke$arity$1 = latest__1;
  latest.cljs$core$IFn$_invoke$arity$2 = latest__2;
  return latest;
}();
cljs_time.core.interval = function interval(start, end) {
  if (start.getTime() <= end.getTime()) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", 1244895369, null), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null)), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)))))].join(""));
  }
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "start", "start", -355208981), start, new cljs.core.Keyword(null, "end", "end", -268185958), end], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006)], null));
};
cljs_time.core.start = function start(in$) {
  return(new cljs.core.Keyword(null, "start", "start", -355208981)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.end = function end(in$) {
  return(new cljs.core.Keyword(null, "end", "end", -268185958)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.extend = function() {
  var extend__delegate = function(in$, by) {
    return cljs.core.assoc.call(null, in$, new cljs.core.Keyword(null, "end", "end", -268185958), cljs.core.apply.call(null, cljs_time.core.plus, cljs_time.core.end.call(null, in$), by));
  };
  var extend = function(in$, var_args) {
    var by = null;
    if (arguments.length > 1) {
      by = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return extend__delegate.call(this, in$, by);
  };
  extend.cljs$lang$maxFixedArity = 1;
  extend.cljs$lang$applyTo = function(arglist__13005) {
    var in$ = cljs.core.first(arglist__13005);
    var by = cljs.core.rest(arglist__13005);
    return extend__delegate(in$, by);
  };
  extend.cljs$core$IFn$_invoke$arity$variadic = extend__delegate;
  return extend;
}();
cljs_time.core.in_millis = function in_millis(p__13006) {
  var map__13008 = p__13006;
  var map__13008__$1 = cljs.core.seq_QMARK_.call(null, map__13008) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13008) : map__13008;
  var end = cljs.core.get.call(null, map__13008__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__13008__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return end.getTime() - start.getTime();
};
cljs_time.core.in_seconds = function in_seconds(in$) {
  return cljs_time.core.in_millis.call(null, in$) / 1E3 | 0;
};
cljs_time.core.in_minutes = function in_minutes(in$) {
  return cljs_time.core.in_seconds.call(null, in$) / 60 | 0;
};
cljs_time.core.in_hours = function in_hours(in$) {
  return cljs_time.core.in_minutes.call(null, in$) / 60 | 0;
};
cljs_time.core.in_days = function in_days(in$) {
  return cljs_time.core.in_hours.call(null, in$) / 24 | 0;
};
cljs_time.core.in_weeks = function in_weeks(in$) {
  return cljs_time.core.in_days.call(null, in$) / 7 | 0;
};
cljs_time.core.month_range = function month_range(p__13011) {
  var map__13013 = p__13011;
  var map__13013__$1 = cljs.core.seq_QMARK_.call(null, map__13013) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13013) : map__13013;
  var end = cljs.core.get.call(null, map__13013__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__13013__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return cljs.core.take_while.call(null, function(map__13013, map__13013__$1, end, start) {
    return function(p1__13009_SHARP_) {
      return cljs_time.core.before_QMARK_.call(null, p1__13009_SHARP_, end);
    };
  }(map__13013, map__13013__$1, end, start), cljs.core.map.call(null, function(map__13013, map__13013__$1, end, start) {
    return function(p1__13010_SHARP_) {
      return cljs_time.core.plus.call(null, start, cljs_time.core.months.call(null, p1__13010_SHARP_ + 1));
    };
  }(map__13013, map__13013__$1, end, start), cljs.core.range.call(null)));
};
cljs_time.core.total_days_in_whole_months = function total_days_in_whole_months(interval) {
  return cljs.core.map.call(null, function(p1__13014_SHARP_) {
    return p1__13014_SHARP_.getNumberOfDaysInMonth();
  }, cljs_time.core.month_range.call(null, interval));
};
cljs_time.core.in_months = function in_months(p__13015) {
  var map__13017 = p__13015;
  var map__13017__$1 = cljs.core.seq_QMARK_.call(null, map__13017) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13017) : map__13017;
  var interval = map__13017__$1;
  var end = cljs.core.get.call(null, map__13017__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__13017__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  return cljs.core.count.call(null, cljs_time.core.total_days_in_whole_months.call(null, interval));
};
cljs_time.core.in_years = function in_years(p__13018) {
  var map__13020 = p__13018;
  var map__13020__$1 = cljs.core.seq_QMARK_.call(null, map__13020) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13020) : map__13020;
  var end = cljs.core.get.call(null, map__13020__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__13020__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var sm = cljs_time.core.month.call(null, start);
  var sd = cljs_time.core.day.call(null, start);
  var em = cljs_time.core.month.call(null, end);
  var ed = cljs_time.core.day.call(null, end);
  var d1 = cljs.core.truth_(function() {
    var and__3596__auto__ = cljs_time.core._EQ_.call(null, sm, 2);
    if (cljs.core.truth_(and__3596__auto__)) {
      var and__3596__auto____$1 = cljs_time.core._EQ_.call(null, sd, 29);
      if (cljs.core.truth_(and__3596__auto____$1)) {
        var and__3596__auto____$2 = cljs_time.core._EQ_.call(null, em, 2);
        if (cljs.core.truth_(and__3596__auto____$2)) {
          return cljs_time.core._EQ_.call(null, ed, 28);
        } else {
          return and__3596__auto____$2;
        }
      } else {
        return and__3596__auto____$1;
      }
    } else {
      return and__3596__auto__;
    }
  }()) ? 0 : cljs.core.truth_(cljs_time.core.before_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 0 : cljs.core.truth_(cljs_time.core.after_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 1 : 0;
  return cljs_time.core.year.call(null, end) - cljs_time.core.year.call(null, start) - d1;
};
cljs_time.core.within_QMARK_ = function() {
  var within_QMARK_ = null;
  var within_QMARK___2 = function(p__13021, date) {
    var map__13023 = p__13021;
    var map__13023__$1 = cljs.core.seq_QMARK_.call(null, map__13023) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13023) : map__13023;
    var end = cljs.core.get.call(null, map__13023__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var start = cljs.core.get.call(null, map__13023__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    return within_QMARK_.call(null, start, end, date);
  };
  var within_QMARK___3 = function(start, end, date) {
    var or__3608__auto__ = cljs_time.core._EQ_.call(null, start, date);
    if (cljs.core.truth_(or__3608__auto__)) {
      return or__3608__auto__;
    } else {
      var and__3596__auto__ = cljs_time.core.before_QMARK_.call(null, start, date);
      if (cljs.core.truth_(and__3596__auto__)) {
        return cljs_time.core.after_QMARK_.call(null, end, date);
      } else {
        return and__3596__auto__;
      }
    }
  };
  within_QMARK_ = function(start, end, date) {
    switch(arguments.length) {
      case 2:
        return within_QMARK___2.call(this, start, end);
      case 3:
        return within_QMARK___3.call(this, start, end, date);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  within_QMARK_.cljs$core$IFn$_invoke$arity$2 = within_QMARK___2;
  within_QMARK_.cljs$core$IFn$_invoke$arity$3 = within_QMARK___3;
  return within_QMARK_;
}();
cljs_time.core.overlaps_QMARK_ = function() {
  var overlaps_QMARK_ = null;
  var overlaps_QMARK___2 = function(p__13024, p__13025) {
    var map__13028 = p__13024;
    var map__13028__$1 = cljs.core.seq_QMARK_.call(null, map__13028) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13028) : map__13028;
    var start_a = cljs.core.get.call(null, map__13028__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    var end_a = cljs.core.get.call(null, map__13028__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var map__13029 = p__13025;
    var map__13029__$1 = cljs.core.seq_QMARK_.call(null, map__13029) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13029) : map__13029;
    var start_b = cljs.core.get.call(null, map__13029__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
    var end_b = cljs.core.get.call(null, map__13029__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
    var and__3596__auto__ = cljs.core.not.call(null, function() {
      var or__3608__auto__ = cljs_time.core._EQ_.call(null, start_a, end_b);
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        return cljs_time.core._EQ_.call(null, end_a, start_b);
      }
    }());
    if (and__3596__auto__) {
      return overlaps_QMARK_.call(null, start_a, end_a, start_b, end_b);
    } else {
      return and__3596__auto__;
    }
  };
  var overlaps_QMARK___4 = function(start_a, end_a, start_b, end_b) {
    var or__3608__auto__ = function() {
      var and__3596__auto__ = cljs_time.core.before_QMARK_.call(null, start_b, end_a);
      if (cljs.core.truth_(and__3596__auto__)) {
        return cljs_time.core.after_QMARK_.call(null, end_b, start_a);
      } else {
        return and__3596__auto__;
      }
    }();
    if (cljs.core.truth_(or__3608__auto__)) {
      return or__3608__auto__;
    } else {
      var or__3608__auto____$1 = function() {
        var and__3596__auto__ = cljs_time.core.after_QMARK_.call(null, end_b, start_a);
        if (cljs.core.truth_(and__3596__auto__)) {
          return cljs_time.core.before_QMARK_.call(null, start_b, end_a);
        } else {
          return and__3596__auto__;
        }
      }();
      if (cljs.core.truth_(or__3608__auto____$1)) {
        return or__3608__auto____$1;
      } else {
        var or__3608__auto____$2 = cljs_time.core._EQ_.call(null, start_a, end_b);
        if (cljs.core.truth_(or__3608__auto____$2)) {
          return or__3608__auto____$2;
        } else {
          return cljs_time.core._EQ_.call(null, start_b, end_a);
        }
      }
    }
  };
  overlaps_QMARK_ = function(start_a, end_a, start_b, end_b) {
    switch(arguments.length) {
      case 2:
        return overlaps_QMARK___2.call(this, start_a, end_a);
      case 4:
        return overlaps_QMARK___4.call(this, start_a, end_a, start_b, end_b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  overlaps_QMARK_.cljs$core$IFn$_invoke$arity$2 = overlaps_QMARK___2;
  overlaps_QMARK_.cljs$core$IFn$_invoke$arity$4 = overlaps_QMARK___4;
  return overlaps_QMARK_;
}();
cljs_time.core.abuts_QMARK_ = function abuts_QMARK_(p__13030, p__13031) {
  var map__13034 = p__13030;
  var map__13034__$1 = cljs.core.seq_QMARK_.call(null, map__13034) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13034) : map__13034;
  var start_a = cljs.core.get.call(null, map__13034__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_a = cljs.core.get.call(null, map__13034__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var map__13035 = p__13031;
  var map__13035__$1 = cljs.core.seq_QMARK_.call(null, map__13035) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13035) : map__13035;
  var start_b = cljs.core.get.call(null, map__13035__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_b = cljs.core.get.call(null, map__13035__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var or__3608__auto__ = cljs_time.core._EQ_.call(null, start_a, end_b);
  if (cljs.core.truth_(or__3608__auto__)) {
    return or__3608__auto__;
  } else {
    return cljs_time.core._EQ_.call(null, end_a, start_b);
  }
};
cljs_time.core.date_QMARK_ = function date_QMARK_(x) {
  var G__13037 = x;
  if (G__13037) {
    var bit__4284__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3608__auto__ = bit__4284__auto__;
      if (cljs.core.truth_(or__3608__auto__)) {
        return or__3608__auto__;
      } else {
        return G__13037.cljs_time$core$DateTimeProtocol$;
      }
    }())) {
      return true;
    } else {
      if (!G__13037.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs_time.core.DateTimeProtocol, G__13037);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs_time.core.DateTimeProtocol, G__13037);
  }
};
cljs_time.core.interval_QMARK_ = function interval_QMARK_(x) {
  return cljs_time.core._EQ_.call(null, new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, x)));
};
cljs_time.core.period_QMARK_ = function period_QMARK_(x) {
  return cljs_time.core._EQ_.call(null, new cljs.core.Keyword("cljs-time.core", "period", "cljs-time.core/period", 1354080486), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, x)));
};
cljs_time.core.period_type_QMARK_ = function period_type_QMARK_(type, x) {
  var and__3596__auto__ = cljs_time.core.period_QMARK_.call(null, x);
  if (cljs.core.truth_(and__3596__auto__)) {
    return cljs.core.contains_QMARK_.call(null, x, type);
  } else {
    return and__3596__auto__;
  }
};
cljs_time.core.years_QMARK_ = function years_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), val);
};
cljs_time.core.months_QMARK_ = function months_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), val);
};
cljs_time.core.weeks_QMARK_ = function weeks_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), val);
};
cljs_time.core.days_QMARK_ = function days_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), val);
};
cljs_time.core.hours_QMARK_ = function hours_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), val);
};
cljs_time.core.minutes_QMARK_ = function minutes_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), val);
};
cljs_time.core.seconds_QMARK_ = function seconds_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), val);
};
cljs_time.core.mins_ago = function mins_ago(d) {
  return cljs_time.core.in_minutes.call(null, cljs_time.core.interval.call(null, d, cljs_time.core.now.call(null)));
};
cljs_time.core.last_day_of_the_month = function() {
  var last_day_of_the_month = null;
  var last_day_of_the_month__1 = function(dt) {
    return last_day_of_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var last_day_of_the_month__2 = function(year, month) {
    return cljs_time.core.minus.call(null, cljs_time.core.date_time.call(null, year, month + 1, 1), cljs_time.core.days.call(null, 1));
  };
  last_day_of_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return last_day_of_the_month__1.call(this, year);
      case 2:
        return last_day_of_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  last_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = last_day_of_the_month__1;
  last_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = last_day_of_the_month__2;
  return last_day_of_the_month;
}();
cljs_time.core.number_of_days_in_the_month = function() {
  var number_of_days_in_the_month = null;
  var number_of_days_in_the_month__1 = function(dt) {
    return number_of_days_in_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var number_of_days_in_the_month__2 = function(year, month) {
    return cljs_time.core.last_day_of_the_month.call(null, year, month).getDate();
  };
  number_of_days_in_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return number_of_days_in_the_month__1.call(this, year);
      case 2:
        return number_of_days_in_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$1 = number_of_days_in_the_month__1;
  number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$2 = number_of_days_in_the_month__2;
  return number_of_days_in_the_month;
}();
cljs_time.core.first_day_of_the_month = function() {
  var first_day_of_the_month = null;
  var first_day_of_the_month__1 = function(dt) {
    return first_day_of_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
  };
  var first_day_of_the_month__2 = function(year, month) {
    return cljs_time.core.date_time.call(null, year, month, 1);
  };
  first_day_of_the_month = function(year, month) {
    switch(arguments.length) {
      case 1:
        return first_day_of_the_month__1.call(this, year);
      case 2:
        return first_day_of_the_month__2.call(this, year, month);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  first_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = first_day_of_the_month__1;
  first_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = first_day_of_the_month__2;
  return first_day_of_the_month;
}();
cljs_time.core.__GT_period = function() {
  var method_table__4500__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4501__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4502__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4503__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4504__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs-time.core", "-\x3eperiod"), cljs.core.meta, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4504__auto__, method_table__4500__auto__, prefer_table__4501__auto__, method_cache__4502__auto__, cached_hierarchy__4503__auto__);
}();
cljs.core._add_method.call(null, cljs_time.core.__GT_period, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "interval", "cljs-time.core/interval", 1734402006)], null), function(p__13038) {
  var map__13039 = p__13038;
  var map__13039__$1 = cljs.core.seq_QMARK_.call(null, map__13039) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13039) : map__13039;
  var interval = map__13039__$1;
  var end = cljs.core.get.call(null, map__13039__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var start = cljs.core.get.call(null, map__13039__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var years = cljs_time.core.in_years.call(null, interval);
  var start_year = cljs_time.core.year.call(null, start);
  var leap_years = cljs.core.count.call(null, cljs.core.remove.call(null, cljs.core.false_QMARK_, cljs.core.map.call(null, cljs_time.internal.core.leap_year_QMARK_, cljs.core.range.call(null, start_year, start_year + years))));
  var start_month = cljs_time.core.month.call(null, start);
  var days_in_months = cljs_time.core.total_days_in_whole_months.call(null, interval);
  var months = cljs.core.count.call(null, days_in_months);
  var days_to_remove = 365 * years + leap_years + cljs.core.reduce.call(null, cljs.core._PLUS_, days_in_months);
  var days = cljs_time.core.in_days.call(null, interval) - days_to_remove;
  var hours_to_remove = 24 * (days + days_to_remove);
  var hours = cljs_time.core.in_hours.call(null, interval) - hours_to_remove;
  var minutes_to_remove = 60 * (hours + hours_to_remove);
  var minutes = cljs_time.core.in_minutes.call(null, interval) - minutes_to_remove;
  var seconds_to_remove = 60 * (minutes + minutes_to_remove);
  var seconds = cljs_time.core.in_seconds.call(null, interval) - seconds_to_remove;
  return cljs_time.internal.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", 
  -1338288387), cljs_time.core.in_millis.call(null, interval) - 1E3 * (seconds + seconds_to_remove));
});
cljs_time.core.today_at = function() {
  var today_at = null;
  var today_at__2 = function(hours, minutes) {
    return today_at.call(null, hours, minutes, 0);
  };
  var today_at__3 = function(hours, minutes, seconds) {
    return today_at.call(null, hours, minutes, seconds, 0);
  };
  var today_at__4 = function(hours, minutes, seconds, millis) {
    var midnight = new goog.date.Date;
    var G__13041 = new goog.date.UtcDateTime(0);
    G__13041.setYear(midnight.getYear());
    G__13041.setMonth(midnight.getMonth());
    G__13041.setDate(midnight.getDate());
    G__13041.setHours(hours);
    G__13041.setMinutes(minutes);
    G__13041.setSeconds(seconds);
    G__13041.setMilliseconds(millis);
    return G__13041;
  };
  today_at = function(hours, minutes, seconds, millis) {
    switch(arguments.length) {
      case 2:
        return today_at__2.call(this, hours, minutes);
      case 3:
        return today_at__3.call(this, hours, minutes, seconds);
      case 4:
        return today_at__4.call(this, hours, minutes, seconds, millis);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  today_at.cljs$core$IFn$_invoke$arity$2 = today_at__2;
  today_at.cljs$core$IFn$_invoke$arity$3 = today_at__3;
  today_at.cljs$core$IFn$_invoke$arity$4 = today_at__4;
  return today_at;
}();
cljs_time.core.do_at_STAR_ = function do_at_STAR_(base_date_time, body_fn) {
  var _STAR_sys_time_STAR_13043 = cljs_time.core._STAR_sys_time_STAR_;
  try {
    cljs_time.core._STAR_sys_time_STAR_ = base_date_time;
    return body_fn.call(null);
  } finally {
    cljs_time.core._STAR_sys_time_STAR_ = _STAR_sys_time_STAR_13043;
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__13244_SHARP_) {
      return max === p1__13244_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__13245__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__13245 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13245__delegate.call(this, s1, s2, sets);
    };
    G__13245.cljs$lang$maxFixedArity = 2;
    G__13245.cljs$lang$applyTo = function(arglist__13246) {
      var s1 = cljs.core.first(arglist__13246);
      arglist__13246 = cljs.core.next(arglist__13246);
      var s2 = cljs.core.first(arglist__13246);
      var sets = cljs.core.rest(arglist__13246);
      return G__13245__delegate(s1, s2, sets);
    };
    G__13245.cljs$core$IFn$_invoke$arity$variadic = G__13245__delegate;
    return G__13245;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__13248 = s2;
        var G__13249 = s1;
        s1 = G__13248;
        s2 = G__13249;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__13250__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__13247_SHARP_) {
        return-cljs.core.count.call(null, p1__13247_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__13250 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13250__delegate.call(this, s1, s2, sets);
    };
    G__13250.cljs$lang$maxFixedArity = 2;
    G__13250.cljs$lang$applyTo = function(arglist__13251) {
      var s1 = cljs.core.first(arglist__13251);
      arglist__13251 = cljs.core.next(arglist__13251);
      var s2 = cljs.core.first(arglist__13251);
      var sets = cljs.core.rest(arglist__13251);
      return G__13250__delegate(s1, s2, sets);
    };
    G__13250.cljs$core$IFn$_invoke$arity$variadic = G__13250__delegate;
    return G__13250;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__13252__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__13252 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__13252__delegate.call(this, s1, s2, sets);
    };
    G__13252.cljs$lang$maxFixedArity = 2;
    G__13252.cljs$lang$applyTo = function(arglist__13253) {
      var s1 = cljs.core.first(arglist__13253);
      arglist__13253 = cljs.core.next(arglist__13253);
      var s2 = cljs.core.first(arglist__13253);
      var sets = cljs.core.rest(arglist__13253);
      return G__13252__delegate(s1, s2, sets);
    };
    G__13252.cljs$core$IFn$_invoke$arity$variadic = G__13252__delegate;
    return G__13252;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__13254_SHARP_) {
    return cljs.core.select_keys.call(null, p1__13254_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__13257) {
    var vec__13258 = p__13257;
    var old = cljs.core.nth.call(null, vec__13258, 0, null);
    var new$ = cljs.core.nth.call(null, vec__13258, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__13259_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__13259_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__13262) {
    var vec__13263 = p__13262;
    var k = cljs.core.nth.call(null, vec__13263, 0, null);
    var v = cljs.core.nth.call(null, vec__13263, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__13270 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__13270, 0, null);
      var s = cljs.core.nth.call(null, vec__13270, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__13270, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__13270, r, s, idx) {
              return function(p1__13264_SHARP_, p2__13265_SHARP_) {
                return cljs.core.conj.call(null, p1__13264_SHARP_, cljs.core.merge.call(null, p2__13265_SHARP_, x));
              };
            }(found, ks, vec__13270, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__13270, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__13271 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__13271, 0, null);
    var s = cljs.core.nth.call(null, vec__13271, 1, null);
    var k = cljs.core.nth.call(null, vec__13271, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__13271, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__13271, r, s, k, idx) {
            return function(p1__13266_SHARP_, p2__13267_SHARP_) {
              return cljs.core.conj.call(null, p1__13266_SHARP_, cljs.core.merge.call(null, p2__13267_SHARP_, x));
            };
          }(found, vec__13271, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__13271, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__13272_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__13272_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__13273_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__13273_SHARP_);
  }, set2);
};
goog.provide("cljs_time.format");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("cljs_time.internal.core");
goog.require("goog.string");
goog.require("goog.string");
goog.require("goog.date");
goog.require("cljs_time.core");
goog.require("clojure.set");
goog.require("cljs_time.core");
goog.require("cljs_time.internal.core");
goog.require("goog.string.format");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("goog.date");
cljs_time.format.months = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], null);
cljs_time.format.days = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], null);
cljs_time.format.abbreviate = function abbreviate(n, s) {
  return cljs.core.subs.call(null, s, 0, n);
};
cljs_time.format.date_formatters = function() {
  var d = function(p1__13057_SHARP_) {
    return p1__13057_SHARP_.getDate();
  };
  var M = function(d) {
    return function(p1__13058_SHARP_) {
      return p1__13058_SHARP_.getMonth() + 1;
    };
  }(d);
  var y = function(d, M) {
    return function(p1__13059_SHARP_) {
      return p1__13059_SHARP_.getYear();
    };
  }(d, M);
  var h = function(d, M, y) {
    return function(p1__13060_SHARP_) {
      var hr = cljs.core.mod.call(null, p1__13060_SHARP_.getHours(), 12);
      if (hr === 0) {
        return 12;
      } else {
        return hr;
      }
    };
  }(d, M, y);
  var a = function(d, M, y, h) {
    return function(p1__13061_SHARP_) {
      if (p1__13061_SHARP_.getHours() < 12) {
        return "am";
      } else {
        return "pm";
      }
    };
  }(d, M, y, h);
  var A = function(d, M, y, h, a) {
    return function(p1__13062_SHARP_) {
      if (p1__13062_SHARP_.getHours() < 12) {
        return "AM";
      } else {
        return "PM";
      }
    };
  }(d, M, y, h, a);
  var H = function(d, M, y, h, a, A) {
    return function(p1__13063_SHARP_) {
      return p1__13063_SHARP_.getHours();
    };
  }(d, M, y, h, a, A);
  var m = function(d, M, y, h, a, A, H) {
    return function(p1__13064_SHARP_) {
      return p1__13064_SHARP_.getMinutes();
    };
  }(d, M, y, h, a, A, H);
  var s = function(d, M, y, h, a, A, H, m) {
    return function(p1__13065_SHARP_) {
      return p1__13065_SHARP_.getSeconds();
    };
  }(d, M, y, h, a, A, H, m);
  var S = function(d, M, y, h, a, A, H, m, s) {
    return function(p1__13066_SHARP_) {
      return p1__13066_SHARP_.getMilliseconds();
    };
  }(d, M, y, h, a, A, H, m, s);
  var Z = function(d, M, y, h, a, A, H, m, s, S) {
    return function(p1__13067_SHARP_) {
      return p1__13067_SHARP_.getTimezoneOffsetString();
    };
  }(d, M, y, h, a, A, H, m, s, S);
  var doy = function(d, M, y, h, a, A, H, m, s, S, Z) {
    return function(p1__13068_SHARP_) {
      return p1__13068_SHARP_.getDayOfYear();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z);
  var dow = function(d, M, y, h, a, A, H, m, s, S, Z, doy) {
    return function(p1__13069_SHARP_) {
      return p1__13069_SHARP_.getDay();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "ww", "MMM", "YYYY", "e", "ss", "DDD", "SSS", "dow", "YY", "M", "mm", "S", "MM", "EEE", "Z", "H", "DD", "dd", "a", "hh", "dth", "yyyy", "A", "EEEE", "h", "xxxx", "m", "yy", "D", "MMMM"], [d, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13081_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, H.call(null, p1__13081_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, s, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13085_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, Math.ceil.call(null, doy.call(null, p1__13085_SHARP_) / 7));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13076_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.months.call(null, M.call(null, p1__13076_SHARP_) - 1));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), y, dow, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13083_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, s.call(null, p1__13083_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), doy, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13084_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, S.call(null, p1__13084_SHARP_), 3);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13072_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__13072_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13079_SHARP_) {
      return cljs.core.mod.call(null, y.call(null, p1__13079_SHARP_), 100);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), M, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13082_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, m.call(null, p1__13082_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), S, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13075_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, M.call(null, p1__13075_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13073_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.days.call(null, dow.call(null, p1__13073_SHARP_)));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, H, doy, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13070_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, d.call(null, p1__13070_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), a, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13080_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, h.call(null, p1__13080_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13071_SHARP_) {
      var d__$1 = d.call(null, p1__13071_SHARP_);
      return[cljs.core.str(d__$1), cljs.core.str(function() {
        var G__13086 = d__$1;
        switch(G__13086) {
          case 1:
            return "st";
            break;
          case 2:
            return "nd";
            break;
          case 3:
            return "rd";
            break;
          default:
            return "th";
        }
      }())].join("");
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), y, A, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13074_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__13074_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), h, y, m, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13078_SHARP_) {
      return cljs.core.mod.call(null, y.call(null, p1__13078_SHARP_), 100);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), doy, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13077_SHARP_) {
      return cljs_time.format.months.call(null, M.call(null, p1__13077_SHARP_) - 1);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow)]);
}();
cljs_time.format.timezone_adjustment = function timezone_adjustment(d, timezone_string) {
  var vec__13091 = clojure.string.split.call(null, timezone_string, /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/);
  var _ = cljs.core.nth.call(null, vec__13091, 0, null);
  var sign = cljs.core.nth.call(null, vec__13091, 1, null);
  var hh = cljs.core.nth.call(null, vec__13091, 2, null);
  var mm = cljs.core.nth.call(null, vec__13091, 3, null);
  if (cljs.core.truth_(function() {
    var and__3596__auto__ = sign;
    if (cljs.core.truth_(and__3596__auto__)) {
      var and__3596__auto____$1 = hh;
      if (cljs.core.truth_(and__3596__auto____$1)) {
        return mm;
      } else {
        return and__3596__auto____$1;
      }
    } else {
      return and__3596__auto__;
    }
  }())) {
    var sign_13093__$1 = cljs.core._EQ_.call(null, sign, "-") ? cljs_time.core.plus : cljs.core._EQ_.call(null, sign, "+") ? cljs_time.core.minus : null;
    var vec__13092_13094 = cljs.core.map.call(null, function(sign_13093__$1, vec__13091, _, sign, hh, mm) {
      return function(p1__13088_SHARP_) {
        return parseInt(p1__13088_SHARP_, 10);
      };
    }(sign_13093__$1, vec__13091, _, sign, hh, mm), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [hh, mm], null));
    var hh_13095__$1 = cljs.core.nth.call(null, vec__13092_13094, 0, null);
    var mm_13096__$1 = cljs.core.nth.call(null, vec__13092_13094, 1, null);
    var adjusted_13097 = sign_13093__$1.call(null, sign_13093__$1.call(null, d, cljs_time.core.hours.call(null, hh_13095__$1)), cljs_time.core.minutes.call(null, mm_13096__$1));
    d.setTime(adjusted_13097.getTime());
  } else {
  }
  return d;
};
cljs_time.format.date_parsers = function() {
  var parse_int = function(p1__13098_SHARP_) {
    return parseInt(p1__13098_SHARP_, 10);
  };
  var assoc_fn = function(parse_int) {
    return function(kw) {
      return function(parse_int) {
        return function(p1__13099_SHARP_, p2__13100_SHARP_) {
          return cljs.core.assoc.call(null, p1__13099_SHARP_, kw, parse_int.call(null, p2__13100_SHARP_));
        };
      }(parse_int);
    };
  }(parse_int);
  var y = assoc_fn.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var d = assoc_fn.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var M = function(parse_int, assoc_fn, y, d) {
    return function(p1__13101_SHARP_, p2__13102_SHARP_) {
      return cljs.core.assoc.call(null, p1__13101_SHARP_, new cljs.core.Keyword(null, "months", "months", -45571637), parse_int.call(null, p2__13102_SHARP_) - 1);
    };
  }(parse_int, assoc_fn, y, d);
  var h = function(parse_int, assoc_fn, y, d, M) {
    return function(p1__13103_SHARP_, p2__13104_SHARP_) {
      return cljs.core.assoc.call(null, p1__13103_SHARP_, new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.mod.call(null, parse_int.call(null, p2__13104_SHARP_), 12));
    };
  }(parse_int, assoc_fn, y, d, M);
  var a = function(parse_int, assoc_fn, y, d, M, h) {
    return function(p__13111, x) {
      var map__13112 = p__13111;
      var map__13112__$1 = cljs.core.seq_QMARK_.call(null, map__13112) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13112) : map__13112;
      var date = map__13112__$1;
      var hours = cljs.core.get.call(null, map__13112__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["p", null, "pm", null], null), null)).call(null, clojure.string.lower_case.call(null, x)))) {
        return cljs.core.assoc.call(null, date, new cljs.core.Keyword(null, "hours", "hours", 58380855), function() {
          var hours__$1 = 12 + hours;
          if (cljs.core._EQ_.call(null, hours__$1, 24)) {
            return 0;
          } else {
            return hours__$1;
          }
        }());
      } else {
        return date;
      }
    };
  }(parse_int, assoc_fn, y, d, M, h);
  var H = assoc_fn.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var m = assoc_fn.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var s = assoc_fn.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var S = assoc_fn.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var MMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
    return function(p1__13106_SHARP_, p2__13105_SHARP_) {
      var full = cljs.core.first.call(null, cljs.core.filter.call(null, function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
        return function(m__$1) {
          return cljs.core.re_seq.call(null, cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(p2__13105_SHARP_)].join("")), m__$1);
        };
      }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S), cljs_time.format.months));
      return M.call(null, p1__13106_SHARP_, [cljs.core.str(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, full) + 1)].join(""));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S);
  var MMMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM) {
    return function(p1__13107_SHARP_, p2__13108_SHARP_) {
      return M.call(null, p1__13107_SHARP_, [cljs.core.str(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, p2__13108_SHARP_) + 1)].join(""));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM);
  var skip = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM) {
    return function() {
      var G__13113__delegate = function(x, args) {
        return x;
      };
      var G__13113 = function(x, var_args) {
        var args = null;
        if (arguments.length > 1) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
        }
        return G__13113__delegate.call(this, x, args);
      };
      G__13113.cljs$lang$maxFixedArity = 1;
      G__13113.cljs$lang$applyTo = function(arglist__13114) {
        var x = cljs.core.first(arglist__13114);
        var args = cljs.core.rest(arglist__13114);
        return G__13113__delegate(x, args);
      };
      G__13113.cljs$core$IFn$_invoke$arity$variadic = G__13113__delegate;
      return G__13113;
    }();
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM);
  var tz = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip) {
    return function(p1__13109_SHARP_, p2__13110_SHARP_) {
      return cljs.core.assoc.call(null, p1__13109_SHARP_, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), p2__13110_SHARP_);
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "MMM", "YYYY", "ss", "DDD", "SSS", "dow", "YY", "M", "mm", "S", "MM", "Y", "EEE", "Z", "H", "E", "DD", "dd", "a", "hh", "dth", "y", "yyyy", "A", "EEEE", "h", "m", "yy", "D", "MMMM"], [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", H], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:(?:\\+|-)\\d{2}:\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs.core.map.call(null, cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.months))), cljs.core.str(")")].join(""), 
  MMM], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{3})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{3})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs_time.format.days)), cljs.core.str(")")].join(""), skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", M], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", m], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:\\d{2})|(?:\\b\\d{1,2}\\b))", M], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs.core.map.call(null, cljs.core.partial.call(null, 
  cljs_time.format.abbreviate, 3), cljs_time.format.days))), cljs.core.str(")")].join(""), skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:(?:\\+|-)\\d{2}:?\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", H], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs.core.map.call(null, 
  cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.days))), cljs.core.str(")")].join(""), skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2,3})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", a], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})(?:st|nd|rd|th)", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", 
  a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs_time.format.days)), cljs.core.str(")")].join(""), skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", m], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["(\\d{2,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,3})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs_time.format.months)), cljs.core.str(")")].join(""), MMMM], null)]);
}();
cljs_time.format.date_setters = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "years", "years", -1298579689), function(p1__13115_SHARP_, p2__13116_SHARP_) {
  return p1__13115_SHARP_.setYear(p2__13116_SHARP_);
}, new cljs.core.Keyword(null, "months", "months", -45571637), function(p1__13117_SHARP_, p2__13118_SHARP_) {
  return p1__13117_SHARP_.setMonth(p2__13118_SHARP_);
}, new cljs.core.Keyword(null, "days", "days", -1394072564), function(p1__13119_SHARP_, p2__13120_SHARP_) {
  return p1__13119_SHARP_.setDate(p2__13120_SHARP_);
}, new cljs.core.Keyword(null, "hours", "hours", 58380855), function(p1__13121_SHARP_, p2__13122_SHARP_) {
  return p1__13121_SHARP_.setHours(p2__13122_SHARP_);
}, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), function(p1__13123_SHARP_, p2__13124_SHARP_) {
  return p1__13123_SHARP_.setMinutes(p2__13124_SHARP_);
}, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), function(p1__13125_SHARP_, p2__13126_SHARP_) {
  return p1__13125_SHARP_.setSeconds(p2__13126_SHARP_);
}, new cljs.core.Keyword(null, "millis", "millis", -1338288387), function(p1__13127_SHARP_, p2__13128_SHARP_) {
  return p1__13127_SHARP_.setMilliseconds(p2__13128_SHARP_);
}, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), cljs_time.format.timezone_adjustment], null);
cljs_time.format.parser_sort_order_pred = function parser_sort_order_pred(parser) {
  return cljs_time.internal.core.index_of.call(null, new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, ["YYYY", "YY", "Y", "yyyy", "yy", "y", "d", "dd", "D", "DD", "DDD", "dth", "M", "MM", "MMM", "MMMM", "dow", "h", "H", "m", "s", "S", "hh", "HH", "mm", "ss", "a", "SSS", "Z", "ZZ"], null), parser);
};
cljs_time.format.date_format_pattern = cljs.core.re_pattern.call(null, [cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, ")|(", cljs.core.reverse.call(null, cljs.core.sort_by.call(null, cljs.core.count, cljs.core.keys.call(null, cljs_time.format.date_formatters))))), cljs.core.str(")")].join(""));
cljs_time.format.date_parse_pattern = function date_parse_pattern(formatter) {
  return cljs.core.re_pattern.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, formatter, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(p1__13129_SHARP_) {
    return cljs.core.first.call(null, cljs_time.format.date_parsers.call(null, p1__13129_SHARP_));
  }));
};
cljs_time.format.parser_fn = function parser_fn(fmts) {
  return function(s) {
    return cljs.core.sort_by.call(null, cljs.core.comp.call(null, cljs_time.format.parser_sort_order_pred, cljs.core.second), cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, cljs.core.nfirst.call(null, cljs.core.re_seq.call(null, cljs_time.format.date_parse_pattern.call(null, fmts), s)), cljs.core.map.call(null, cljs.core.first, cljs.core.re_seq.call(null, cljs_time.format.date_format_pattern, fmts)))));
  };
};
cljs_time.format.formatter_fn = function formatter_fn(fmts, formatters) {
  return function() {
    var G__13135__delegate = function(date, p__13133) {
      var vec__13134 = p__13133;
      var formatter_overrides = cljs.core.nth.call(null, vec__13134, 0, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.replace.call(null, fmts, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(vec__13134, formatter_overrides) {
        return function(p1__13130_SHARP_) {
          return function() {
            var or__3608__auto__ = formatter_overrides;
            if (cljs.core.truth_(or__3608__auto__)) {
              return or__3608__auto__;
            } else {
              return formatters;
            }
          }().call(null, p1__13130_SHARP_).call(null, date);
        };
      }(vec__13134, formatter_overrides)], null);
    };
    var G__13135 = function(date, var_args) {
      var p__13133 = null;
      if (arguments.length > 1) {
        p__13133 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__13135__delegate.call(this, date, p__13133);
    };
    G__13135.cljs$lang$maxFixedArity = 1;
    G__13135.cljs$lang$applyTo = function(arglist__13136) {
      var date = cljs.core.first(arglist__13136);
      var p__13133 = cljs.core.rest(arglist__13136);
      return G__13135__delegate(date, p__13133);
    };
    G__13135.cljs$core$IFn$_invoke$arity$variadic = G__13135__delegate;
    return G__13135;
  }();
};
cljs_time.format.formatter = function() {
  var formatter = null;
  var formatter__1 = function(fmts) {
    return formatter.call(null, fmts, cljs_time.core.utc);
  };
  var formatter__2 = function(fmts, dtz) {
    return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), cljs_time.format.parser_fn.call(null, fmts), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs_time.format.formatter_fn.call(null, fmts, cljs_time.format.date_formatters)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.format", "formatter", 
    "cljs-time.format/formatter", 1104417384)], null));
  };
  formatter = function(fmts, dtz) {
    switch(arguments.length) {
      case 1:
        return formatter__1.call(this, fmts);
      case 2:
        return formatter__2.call(this, fmts, dtz);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  formatter.cljs$core$IFn$_invoke$arity$1 = formatter__1;
  formatter.cljs$core$IFn$_invoke$arity$2 = formatter__2;
  return formatter;
}();
cljs_time.format.formatter_local = function formatter_local(fmts) {
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), cljs_time.format.parser_fn.call(null, fmts), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs_time.format.formatter_fn.call(null, fmts, cljs.core.assoc.call(null, cljs_time.format.date_formatters, "Z", cljs.core.constantly.call(null, ""), "ZZ", cljs.core.constantly.call(null, "")))], null), new cljs.core.PersistentArrayMap(null, 1, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.format", "formatter", "cljs-time.format/formatter", 1104417384)], null));
};
cljs_time.format.not_implemented = function not_implemented(sym) {
  return function() {
    throw cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "not-implemented", "not-implemented", 1918806714), new cljs.core.Keyword(null, "message", "message", -406056002), cljs_time.internal.core.format.call(null, "%s not implemented yet", cljs.core.name.call(null, sym))], null));
  };
};
cljs_time.format.formatters = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), new cljs.core.Keyword(null, "hour-minute", "hour-minute", -1164421312), new cljs.core.Keyword(null, "t-time", "t-time", -42016318), new cljs.core.Keyword(null, "basic-ordinal-date", "basic-ordinal-date", 243220162), new cljs.core.Keyword(null, "date", "date", -1463434462), new cljs.core.Keyword(null, "hour", "hour", -555989214), new cljs.core.Keyword(null, 
"time-no-ms", "time-no-ms", 870271683), new cljs.core.Keyword(null, "weekyear-week-day", "weekyear-week-day", -740233533), new cljs.core.Keyword(null, "week-date-time", "week-date-time", 540228836), new cljs.core.Keyword(null, "date-hour-minute-second-fraction", "date-hour-minute-second-fraction", 1937143076), new cljs.core.Keyword(null, "basic-date-time", "basic-date-time", 1525413604), new cljs.core.Keyword(null, "date-time", "date-time", 177938180), new cljs.core.Keyword(null, "basic-time-no-ms", 
"basic-time-no-ms", -1720654076), new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), new cljs.core.Keyword(null, "basic-week-date", "basic-week-date", 1775847845), new cljs.core.Keyword(null, "basic-t-time-no-ms", "basic-t-time-no-ms", -424650106), new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), new cljs.core.Keyword(null, "date-time-no-ms", "date-time-no-ms", 1655953671), new cljs.core.Keyword(null, "year-month-day", "year-month-day", -415594169), new cljs.core.Keyword(null, 
"date-opt-time", "date-opt-time", -1507102105), new cljs.core.Keyword(null, "rfc822", "rfc822", -404628697), new cljs.core.Keyword(null, "date-hour-minute-second-ms", "date-hour-minute-second-ms", -425334775), new cljs.core.Keyword(null, "basic-ordinal-date-time", "basic-ordinal-date-time", 1054564521), new cljs.core.Keyword(null, "ordinal-date", "ordinal-date", -77899447), new cljs.core.Keyword(null, "hour-minute-second-fraction", "hour-minute-second-fraction", -1253038551), new cljs.core.Keyword(null, 
"date-hour-minute", "date-hour-minute", 1629918346), new cljs.core.Keyword(null, "time", "time", 1385887882), new cljs.core.Keyword(null, "basic-week-date-time", "basic-week-date-time", -502077622), new cljs.core.Keyword(null, "weekyear", "weekyear", -74064500), new cljs.core.Keyword(null, "basic-time", "basic-time", -923134899), new cljs.core.Keyword(null, "hour-minute-second", "hour-minute-second", -1906654770), new cljs.core.Keyword(null, "ordinal-date-time", "ordinal-date-time", -1386753458), 
new cljs.core.Keyword(null, "ordinal-date-time-no-ms", "ordinal-date-time-no-ms", -1539005490), new cljs.core.Keyword(null, "hour-minute-second-ms", "hour-minute-second-ms", 1209749775), new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), new cljs.core.Keyword(null, "year", "year", 335913393), new cljs.core.Keyword(null, "t-time-no-ms", "t-time-no-ms", 990689905), new cljs.core.Keyword(null, "basic-week-date-time-no-ms", 
"basic-week-date-time-no-ms", -2043113679), new cljs.core.Keyword(null, "basic-date", "basic-date", 1566551506), new cljs.core.Keyword(null, "weekyear-week", "weekyear-week", 795291571), new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), new cljs.core.Keyword(null, "basic-ordinal-date-time-no-ms", "basic-ordinal-date-time-no-ms", -395135436), new cljs.core.Keyword(null, "year-month", "year-month", 735283381), new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 
1178432599), new cljs.core.Keyword(null, "week-date", "week-date", -1176745129), new cljs.core.Keyword(null, "date-hour", "date-hour", -344234471), new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), new cljs.core.Keyword(null, "date-hour-minute-second", "date-hour-minute-second", -1565419364), new cljs.core.Keyword(null, "week-date-time-no-ms", "week-date-time-no-ms", -1226853060), new cljs.core.Keyword(null, "basic-date-time-no-ms", "basic-date-time-no-ms", -899402179), 
new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), new cljs.core.Keyword(null, "basic-t-time", "basic-t-time", 191791391)], [cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateElementParser", "dateElementParser", 984800945, null)), cljs_time.format.formatter.call(null, "HH:mm"), cljs_time.format.formatter.call(null, "'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyyDDD"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.formatter.call(null, 
"HH"), cljs_time.format.formatter.call(null, "HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, 
"dateParser", "dateParser", -1248418930, null)), cljs_time.format.formatter.call(null, "xxxx'W'wwe"), cljs_time.format.formatter.call(null, "'T'HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localTimeParser", "localTimeParser", -1738135328, null)), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateOptionalTimeParser", 
"dateOptionalTimeParser", 1783230854, null)), cljs_time.format.formatter.call(null, "EEE, dd MMM yyyy HH:mm:ss Z"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyDDD'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-DDD"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, 
"xxxx'W'wwe'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "xxxx"), cljs_time.format.formatter.call(null, "HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "HH:mm:ss"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, new cljs.core.Symbol(null, "timeParser", "timeParser", 1585048034, null)), cljs_time.format.not_implemented.call(null, 
new cljs.core.Symbol(null, "dateTimeParser", "dateTimeParser", -1493718282, null)), cljs_time.format.formatter.call(null, "yyyy"), cljs_time.format.formatter.call(null, "'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx'W'wwe'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyyMMdd"), cljs_time.format.formatter.call(null, "xxxx-'W'ww"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateParser", "localDateParser", 477820077, null)), cljs_time.format.formatter.call(null, 
"yyyyDDD'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateOptionalTimeParser", "localDateOptionalTimeParser", 435955537, null)), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "timeElementParser", "timeElementParser", 302132553, null)), cljs_time.format.formatter.call(null, 
"yyyy-MM-dd'T'HH:mm:ss"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd HH:mm:ss"), cljs_time.format.formatter.call(null, "'T'HHmmss.SSSZ")]);
cljs_time.format.parsers = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), null, new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), null, new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), null, new cljs.core.Keyword(null, "date-opt-time", "date-opt-time", -1507102105), null, new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), 
null, new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), null, new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), null, new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 1178432599), null, new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), null], null), null);
cljs_time.format.printers = clojure.set.difference.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs_time.format.formatters)), cljs_time.format.parsers);
cljs_time.format.part_splitter_regex = /(?:(?!(?:\+|-)\d{2}):(?!\d{2}$))|[^\w:]+|.[TW]|'[^']+'/;
cljs_time.format.date_map = function() {
  var method_table__4500__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4501__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4502__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4503__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4504__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs-time.format", "date-map"), cljs.core.type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4504__auto__, method_table__4500__auto__, prefer_table__4501__auto__, method_cache__4502__auto__, cached_hierarchy__4503__auto__);
}();
cljs.core._add_method.call(null, cljs_time.format.date_map, goog.date.Date, function(d) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1], null);
});
cljs.core._add_method.call(null, cljs_time.format.date_map, goog.date.DateTime, function(d) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1, new cljs.core.Keyword(null, "hours", "hours", 58380855), 0, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), 0, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), 0, new cljs.core.Keyword(null, "millis", "millis", -1338288387), 0], null);
});
cljs.core._add_method.call(null, cljs_time.format.date_map, goog.date.UtcDateTime, function(d) {
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1, new cljs.core.Keyword(null, "hours", "hours", 58380855), 0, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), 0, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), 0, new cljs.core.Keyword(null, "millis", "millis", -1338288387), 0, new cljs.core.Keyword(null, 
  "time-zone", "time-zone", -1838760002), null], null);
});
cljs_time.format.parse_STAR_ = function parse_STAR_(constructor, p__13139, s) {
  var map__13145 = p__13139;
  var map__13145__$1 = cljs.core.seq_QMARK_.call(null, map__13145) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13145) : map__13145;
  var fmt = map__13145__$1;
  var parser = cljs.core.get.call(null, map__13145__$1, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
  if (cljs.core.seq.call(null, s)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "s", "s", -948495851, null))))].join(""));
  }
  var min_parts = cljs.core.count.call(null, clojure.string.split.call(null, s, cljs_time.format.part_splitter_regex));
  var parse_seq = cljs.core.seq.call(null, cljs.core.map.call(null, function(min_parts, map__13145, map__13145__$1, fmt, parser) {
    return function(p__13146) {
      var vec__13147 = p__13146;
      var a = cljs.core.nth.call(null, vec__13147, 0, null);
      var b = cljs.core.nth.call(null, vec__13147, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core.second.call(null, cljs_time.format.date_parsers.call(null, b))], null);
    };
  }(min_parts, map__13145, map__13145__$1, fmt, parser), parser.call(null, s)));
  if (cljs.core.count.call(null, parse_seq) >= min_parts) {
    var d = new constructor(0, 0, 0, 0, 0, 0, 0);
    var empty = cljs_time.format.date_map.call(null, d);
    var setters = cljs.core.select_keys.call(null, cljs_time.format.date_setters, cljs.core.keys.call(null, empty));
    cljs.core.merge_with.call(null, function(d, empty, setters, parse_seq, min_parts, map__13145, map__13145__$1, fmt, parser) {
      return function(p1__13137_SHARP_, p2__13138_SHARP_) {
        return p1__13137_SHARP_.call(null, d, p2__13138_SHARP_);
      };
    }(d, empty, setters, parse_seq, min_parts, map__13145, map__13145__$1, fmt, parser), setters, cljs_time.internal.core.valid_date_QMARK_.call(null, cljs.core.reduce.call(null, function(d, empty, setters, parse_seq, min_parts, map__13145, map__13145__$1, fmt, parser) {
      return function(date, p__13148) {
        var vec__13149 = p__13148;
        var part = cljs.core.nth.call(null, vec__13149, 0, null);
        var do_parse = cljs.core.nth.call(null, vec__13149, 1, null);
        return do_parse.call(null, date, part);
      };
    }(d, empty, setters, parse_seq, min_parts, map__13145, map__13145__$1, fmt, parser), empty, parse_seq)));
    return d;
  } else {
    throw cljs.core.ex_info.call(null, "The parser could not match the input string.", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "parser-no-match", "parser-no-match", 1748518307)], null));
  }
};
cljs_time.format.parse = function() {
  var parse = null;
  var parse__1 = function(s) {
    return cljs.core.first.call(null, function() {
      var iter__4359__auto__ = function iter__13158(s__13159) {
        return new cljs.core.LazySeq(null, function() {
          var s__13159__$1 = s__13159;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__13159__$1);
            if (temp__4126__auto__) {
              var s__13159__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__13159__$2)) {
                var c__4357__auto__ = cljs.core.chunk_first.call(null, s__13159__$2);
                var size__4358__auto__ = cljs.core.count.call(null, c__4357__auto__);
                var b__13161 = cljs.core.chunk_buffer.call(null, size__4358__auto__);
                if (function() {
                  var i__13160 = 0;
                  while (true) {
                    if (i__13160 < size__4358__auto__) {
                      var f = cljs.core._nth.call(null, c__4357__auto__, i__13160);
                      var d = function() {
                        try {
                          return parse.call(null, f, s);
                        } catch (e13164) {
                          if (e13164 instanceof Error) {
                            var _ = e13164;
                            return null;
                          } else {
                            throw e13164;
                          }
                        }
                      }();
                      if (cljs.core.truth_(d)) {
                        cljs.core.chunk_append.call(null, b__13161, d);
                        var G__13166 = i__13160 + 1;
                        i__13160 = G__13166;
                        continue;
                      } else {
                        var G__13167 = i__13160 + 1;
                        i__13160 = G__13167;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13161), iter__13158.call(null, cljs.core.chunk_rest.call(null, s__13159__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13161), null);
                }
              } else {
                var f = cljs.core.first.call(null, s__13159__$2);
                var d = function() {
                  try {
                    return parse.call(null, f, s);
                  } catch (e13165) {
                    if (e13165 instanceof Error) {
                      var _ = e13165;
                      return null;
                    } else {
                      throw e13165;
                    }
                  }
                }();
                if (cljs.core.truth_(d)) {
                  return cljs.core.cons.call(null, d, iter__13158.call(null, cljs.core.rest.call(null, s__13159__$2)));
                } else {
                  var G__13168 = cljs.core.rest.call(null, s__13159__$2);
                  s__13159__$1 = G__13168;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4359__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
    }());
  };
  var parse__2 = function(fmt, s) {
    return cljs_time.format.parse_STAR_.call(null, goog.date.UtcDateTime, fmt, s);
  };
  parse = function(fmt, s) {
    switch(arguments.length) {
      case 1:
        return parse__1.call(this, fmt);
      case 2:
        return parse__2.call(this, fmt, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse.cljs$core$IFn$_invoke$arity$1 = parse__1;
  parse.cljs$core$IFn$_invoke$arity$2 = parse__2;
  return parse;
}();
cljs_time.format.parse_local = function() {
  var parse_local = null;
  var parse_local__1 = function(s) {
    return cljs.core.first.call(null, function() {
      var iter__4359__auto__ = function iter__13177(s__13178) {
        return new cljs.core.LazySeq(null, function() {
          var s__13178__$1 = s__13178;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__13178__$1);
            if (temp__4126__auto__) {
              var s__13178__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__13178__$2)) {
                var c__4357__auto__ = cljs.core.chunk_first.call(null, s__13178__$2);
                var size__4358__auto__ = cljs.core.count.call(null, c__4357__auto__);
                var b__13180 = cljs.core.chunk_buffer.call(null, size__4358__auto__);
                if (function() {
                  var i__13179 = 0;
                  while (true) {
                    if (i__13179 < size__4358__auto__) {
                      var f = cljs.core._nth.call(null, c__4357__auto__, i__13179);
                      var d = function() {
                        try {
                          return parse_local.call(null, f, s);
                        } catch (e13183) {
                          if (e13183 instanceof Error) {
                            var _ = e13183;
                            return null;
                          } else {
                            throw e13183;
                          }
                        }
                      }();
                      if (cljs.core.truth_(d)) {
                        cljs.core.chunk_append.call(null, b__13180, d);
                        var G__13185 = i__13179 + 1;
                        i__13179 = G__13185;
                        continue;
                      } else {
                        var G__13186 = i__13179 + 1;
                        i__13179 = G__13186;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13180), iter__13177.call(null, cljs.core.chunk_rest.call(null, s__13178__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13180), null);
                }
              } else {
                var f = cljs.core.first.call(null, s__13178__$2);
                var d = function() {
                  try {
                    return parse_local.call(null, f, s);
                  } catch (e13184) {
                    if (e13184 instanceof Error) {
                      var _ = e13184;
                      return null;
                    } else {
                      throw e13184;
                    }
                  }
                }();
                if (cljs.core.truth_(d)) {
                  return cljs.core.cons.call(null, d, iter__13177.call(null, cljs.core.rest.call(null, s__13178__$2)));
                } else {
                  var G__13187 = cljs.core.rest.call(null, s__13178__$2);
                  s__13178__$1 = G__13187;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4359__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
    }());
  };
  var parse_local__2 = function(fmt, s) {
    return cljs_time.format.parse_STAR_.call(null, goog.date.DateTime, fmt, s);
  };
  parse_local = function(fmt, s) {
    switch(arguments.length) {
      case 1:
        return parse_local__1.call(this, fmt);
      case 2:
        return parse_local__2.call(this, fmt, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse_local.cljs$core$IFn$_invoke$arity$1 = parse_local__1;
  parse_local.cljs$core$IFn$_invoke$arity$2 = parse_local__2;
  return parse_local;
}();
cljs_time.format.parse_local_date = function() {
  var parse_local_date = null;
  var parse_local_date__1 = function(s) {
    return cljs.core.first.call(null, function() {
      var iter__4359__auto__ = function iter__13196(s__13197) {
        return new cljs.core.LazySeq(null, function() {
          var s__13197__$1 = s__13197;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__13197__$1);
            if (temp__4126__auto__) {
              var s__13197__$2 = temp__4126__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__13197__$2)) {
                var c__4357__auto__ = cljs.core.chunk_first.call(null, s__13197__$2);
                var size__4358__auto__ = cljs.core.count.call(null, c__4357__auto__);
                var b__13199 = cljs.core.chunk_buffer.call(null, size__4358__auto__);
                if (function() {
                  var i__13198 = 0;
                  while (true) {
                    if (i__13198 < size__4358__auto__) {
                      var f = cljs.core._nth.call(null, c__4357__auto__, i__13198);
                      var d = function() {
                        try {
                          return parse_local_date.call(null, f, s);
                        } catch (e13202) {
                          if (e13202 instanceof Error) {
                            var _ = e13202;
                            return null;
                          } else {
                            throw e13202;
                          }
                        }
                      }();
                      if (cljs.core.truth_(d)) {
                        cljs.core.chunk_append.call(null, b__13199, d);
                        var G__13204 = i__13198 + 1;
                        i__13198 = G__13204;
                        continue;
                      } else {
                        var G__13205 = i__13198 + 1;
                        i__13198 = G__13205;
                        continue;
                      }
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13199), iter__13196.call(null, cljs.core.chunk_rest.call(null, s__13197__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13199), null);
                }
              } else {
                var f = cljs.core.first.call(null, s__13197__$2);
                var d = function() {
                  try {
                    return parse_local_date.call(null, f, s);
                  } catch (e13203) {
                    if (e13203 instanceof Error) {
                      var _ = e13203;
                      return null;
                    } else {
                      throw e13203;
                    }
                  }
                }();
                if (cljs.core.truth_(d)) {
                  return cljs.core.cons.call(null, d, iter__13196.call(null, cljs.core.rest.call(null, s__13197__$2)));
                } else {
                  var G__13206 = cljs.core.rest.call(null, s__13197__$2);
                  s__13197__$1 = G__13206;
                  continue;
                }
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__4359__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
    }());
  };
  var parse_local_date__2 = function(fmt, s) {
    return cljs_time.format.parse_STAR_.call(null, goog.date.Date, fmt, s);
  };
  parse_local_date = function(fmt, s) {
    switch(arguments.length) {
      case 1:
        return parse_local_date__1.call(this, fmt);
      case 2:
        return parse_local_date__2.call(this, fmt, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parse_local_date.cljs$core$IFn$_invoke$arity$1 = parse_local_date__1;
  parse_local_date.cljs$core$IFn$_invoke$arity$2 = parse_local_date__2;
  return parse_local_date;
}();
cljs_time.format.unparse = function unparse(p__13207, dt) {
  var map__13209 = p__13207;
  var map__13209__$1 = cljs.core.seq_QMARK_.call(null, map__13209) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13209) : map__13209;
  var formatter = cljs.core.get.call(null, map__13209__$1, new cljs.core.Keyword(null, "formatter", "formatter", -483008823));
  if (!(dt == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null)))))].join(""));
  }
  if (dt instanceof goog.date.DateTime) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "goog.date.DateTime", "goog.date.DateTime", -2139257094, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null))))].join(""));
  }
  return cljs.core.apply.call(null, clojure.string.replace, formatter.call(null, dt));
};
cljs_time.format.unparse_local = function unparse_local(p__13210, dt) {
  var map__13212 = p__13210;
  var map__13212__$1 = cljs.core.seq_QMARK_.call(null, map__13212) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13212) : map__13212;
  var fmt = map__13212__$1;
  var formatter = cljs.core.get.call(null, map__13212__$1, new cljs.core.Keyword(null, "formatter", "formatter", -483008823));
  if (!(dt == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null)))))].join(""));
  }
  if (dt instanceof goog.date.DateTime) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "goog.date.DateTime", "goog.date.DateTime", -2139257094, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null))))].join(""));
  }
  return cljs.core.apply.call(null, clojure.string.replace, formatter.call(null, dt, cljs.core.assoc.call(null, cljs_time.format.date_formatters, "Z", cljs.core.constantly.call(null, ""), "ZZ", cljs.core.constantly.call(null, ""))));
};
cljs_time.format.unparse_local_date = function unparse_local_date(p__13213, dt) {
  var map__13215 = p__13213;
  var map__13215__$1 = cljs.core.seq_QMARK_.call(null, map__13215) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13215) : map__13215;
  var fmt = map__13215__$1;
  var formatter = cljs.core.get.call(null, map__13215__$1, new cljs.core.Keyword(null, "formatter", "formatter", -483008823));
  if (!(dt == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null)))))].join(""));
  }
  if (dt instanceof goog.date.Date) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "goog.date.Date", "goog.date.Date", -1613361125, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null))))].join(""));
  }
  return cljs.core.apply.call(null, clojure.string.replace, formatter.call(null, dt, cljs.core.assoc.call(null, cljs_time.format.date_formatters, "Z", cljs.core.constantly.call(null, ""), "ZZ", cljs.core.constantly.call(null, ""))));
};
cljs_time.format.show_formatters = function() {
  var show_formatters = null;
  var show_formatters__0 = function() {
    return show_formatters.call(null, cljs_time.core.now.call(null));
  };
  var show_formatters__1 = function(dt) {
    var seq__13220 = cljs.core.seq.call(null, cljs.core.sort.call(null, cljs_time.format.printers));
    var chunk__13221 = null;
    var count__13222 = 0;
    var i__13223 = 0;
    while (true) {
      if (i__13223 < count__13222) {
        var p = cljs.core._nth.call(null, chunk__13221, i__13223);
        var fmt_13224 = cljs_time.format.formatters.call(null, p);
        cljs.core.print.call(null, cljs_time.internal.core.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_13224, dt)));
        var G__13225 = seq__13220;
        var G__13226 = chunk__13221;
        var G__13227 = count__13222;
        var G__13228 = i__13223 + 1;
        seq__13220 = G__13225;
        chunk__13221 = G__13226;
        count__13222 = G__13227;
        i__13223 = G__13228;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__13220);
        if (temp__4126__auto__) {
          var seq__13220__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13220__$1)) {
            var c__4390__auto__ = cljs.core.chunk_first.call(null, seq__13220__$1);
            var G__13229 = cljs.core.chunk_rest.call(null, seq__13220__$1);
            var G__13230 = c__4390__auto__;
            var G__13231 = cljs.core.count.call(null, c__4390__auto__);
            var G__13232 = 0;
            seq__13220 = G__13229;
            chunk__13221 = G__13230;
            count__13222 = G__13231;
            i__13223 = G__13232;
            continue;
          } else {
            var p = cljs.core.first.call(null, seq__13220__$1);
            var fmt_13233 = cljs_time.format.formatters.call(null, p);
            cljs.core.print.call(null, cljs_time.internal.core.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_13233, dt)));
            var G__13234 = cljs.core.next.call(null, seq__13220__$1);
            var G__13235 = null;
            var G__13236 = 0;
            var G__13237 = 0;
            seq__13220 = G__13234;
            chunk__13221 = G__13235;
            count__13222 = G__13236;
            i__13223 = G__13237;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  show_formatters = function(dt) {
    switch(arguments.length) {
      case 0:
        return show_formatters__0.call(this);
      case 1:
        return show_formatters__1.call(this, dt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  show_formatters.cljs$core$IFn$_invoke$arity$0 = show_formatters__0;
  show_formatters.cljs$core$IFn$_invoke$arity$1 = show_formatters__1;
  return show_formatters;
}();
cljs_time.format.Mappable = function() {
  var obj13239 = {};
  return obj13239;
}();
cljs_time.format.instant__GT_map = function instant__GT_map(instant) {
  if (function() {
    var and__3596__auto__ = instant;
    if (and__3596__auto__) {
      return instant.cljs_time$format$Mappable$instant__GT_map$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return instant.cljs_time$format$Mappable$instant__GT_map$arity$1(instant);
  } else {
    var x__4247__auto__ = instant == null ? null : instant;
    return function() {
      var or__3608__auto__ = cljs_time.format.instant__GT_map[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.format.instant__GT_map["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mappable.instant-\x3emap", instant);
        }
      }
    }().call(null, instant);
  }
};
cljs_time.format.to_map = function to_map(years, months, days, hours, minutes, seconds, millis) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", 
  -1338288387), millis], null);
};
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$ = true;
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(dt) {
  var dt__$1 = this;
  return cljs_time.format.to_map.call(null, dt__$1.getYear(), dt__$1.getMonth() + 1, dt__$1.getDate(), dt__$1.getHours(), dt__$1.getMinutes(), dt__$1.getSeconds(), dt__$1.getMilliseconds());
};
cljs.core.ObjMap.prototype.cljs_time$format$Mappable$ = true;
cljs.core.ObjMap.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  var G__13240 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)).fqn : null;
  switch(G__13240) {
    case "cljs-time.core/interval":
      return cljs_time.core.__GT_period.call(null, m__$1);
      break;
    case "cljs-time.core/period":
      return m__$1;
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)))].join(""));;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  var G__13242 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)).fqn : null;
  switch(G__13242) {
    case "cljs-time.core/interval":
      return cljs_time.core.__GT_period.call(null, m__$1);
      break;
    case "cljs-time.core/period":
      return m__$1;
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)))].join(""));;
  }
};
goog.provide("cljs_time.coerce");
goog.require("cljs.core");
goog.require("cljs_time.core");
goog.require("goog.date");
goog.require("goog.date");
goog.require("cljs_time.format");
goog.require("cljs_time.format");
goog.require("cljs_time.core");
cljs_time.coerce.ICoerce = function() {
  var obj12953 = {};
  return obj12953;
}();
cljs_time.coerce.to_date_time = function to_date_time(obj) {
  if (function() {
    var and__3596__auto__ = obj;
    if (and__3596__auto__) {
      return obj.cljs_time$coerce$ICoerce$to_date_time$arity$1;
    } else {
      return and__3596__auto__;
    }
  }()) {
    return obj.cljs_time$coerce$ICoerce$to_date_time$arity$1(obj);
  } else {
    var x__4247__auto__ = obj == null ? null : obj;
    return function() {
      var or__3608__auto__ = cljs_time.coerce.to_date_time[goog.typeOf(x__4247__auto__)];
      if (or__3608__auto__) {
        return or__3608__auto__;
      } else {
        var or__3608__auto____$1 = cljs_time.coerce.to_date_time["_"];
        if (or__3608__auto____$1) {
          return or__3608__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICoerce.to-date-time", obj);
        }
      }
    }().call(null, obj);
  }
};
cljs_time.coerce.from_long = function from_long(millis) {
  var G__12955 = new goog.date.UtcDateTime;
  G__12955.setTime(millis);
  return G__12955;
};
cljs_time.coerce.from_string = function from_string(s) {
  return cljs.core.first.call(null, function() {
    var iter__4359__auto__ = function iter__12964(s__12965) {
      return new cljs.core.LazySeq(null, function() {
        var s__12965__$1 = s__12965;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__12965__$1);
          if (temp__4126__auto__) {
            var s__12965__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__12965__$2)) {
              var c__4357__auto__ = cljs.core.chunk_first.call(null, s__12965__$2);
              var size__4358__auto__ = cljs.core.count.call(null, c__4357__auto__);
              var b__12967 = cljs.core.chunk_buffer.call(null, size__4358__auto__);
              if (function() {
                var i__12966 = 0;
                while (true) {
                  if (i__12966 < size__4358__auto__) {
                    var f = cljs.core._nth.call(null, c__4357__auto__, i__12966);
                    var d = function() {
                      try {
                        return cljs_time.format.parse.call(null, f, s);
                      } catch (e12970) {
                        if (e12970 instanceof Error) {
                          var _ = e12970;
                          return null;
                        } else {
                          throw e12970;
                        }
                      }
                    }();
                    if (cljs.core.truth_(d)) {
                      cljs.core.chunk_append.call(null, b__12967, d);
                      var G__12972 = i__12966 + 1;
                      i__12966 = G__12972;
                      continue;
                    } else {
                      var G__12973 = i__12966 + 1;
                      i__12966 = G__12973;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12967), iter__12964.call(null, cljs.core.chunk_rest.call(null, s__12965__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12967), null);
              }
            } else {
              var f = cljs.core.first.call(null, s__12965__$2);
              var d = function() {
                try {
                  return cljs_time.format.parse.call(null, f, s);
                } catch (e12971) {
                  if (e12971 instanceof Error) {
                    var _ = e12971;
                    return null;
                  } else {
                    throw e12971;
                  }
                }
              }();
              if (cljs.core.truth_(d)) {
                return cljs.core.cons.call(null, d, iter__12964.call(null, cljs.core.rest.call(null, s__12965__$2)));
              } else {
                var G__12974 = cljs.core.rest.call(null, s__12965__$2);
                s__12965__$1 = G__12974;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4359__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
  }());
};
cljs_time.coerce.from_date = function from_date(date) {
  return cljs_time.coerce.from_long.call(null, date.getTime());
};
cljs_time.coerce.to_long = function to_long(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    return dt.getTime();
  } else {
    return null;
  }
};
cljs_time.coerce.to_epoch = function to_epoch(obj) {
  var millis = cljs_time.coerce.to_long.call(null, obj);
  var and__3596__auto__ = millis;
  if (cljs.core.truth_(and__3596__auto__)) {
    return millis / 1E3;
  } else {
    return and__3596__auto__;
  }
};
cljs_time.coerce.to_date = function to_date(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    return new Date(dt.getTime());
  } else {
    return null;
  }
};
cljs_time.coerce.to_string = function to_string(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    return cljs_time.format.unparse.call(null, (new cljs.core.Keyword(null, "date-time", "date-time", 177938180)).cljs$core$IFn$_invoke$arity$1(cljs_time.format.formatters), dt);
  } else {
    return null;
  }
};
cljs_time.coerce.to_local_date = function to_local_date(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    var G__12976 = new goog.date.Date;
    G__12976.setYear(dt.getYear());
    G__12976.setMonth(dt.getMonth());
    G__12976.setDate(dt.getDate());
    return G__12976;
  } else {
    return null;
  }
};
cljs_time.coerce.to_local_date_time = function to_local_date_time(obj) {
  var temp__4124__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var dt = temp__4124__auto__;
    var G__12978 = new goog.date.DateTime;
    G__12978.setYear(dt.getYear());
    G__12978.setMonth(dt.getMonth());
    G__12978.setDate(dt.getDate());
    G__12978.setHours(dt.getHours());
    G__12978.setMinutes(dt.getMinutes());
    G__12978.setSeconds(dt.getSeconds());
    G__12978.setMilliseconds(dt.getMilliseconds());
    return G__12978;
  } else {
    return null;
  }
};
cljs_time.coerce.ICoerce["string"] = true;
cljs_time.coerce.to_date_time["string"] = function(string) {
  return cljs_time.coerce.from_string.call(null, string);
};
cljs_time.coerce.ICoerce["number"] = true;
cljs_time.coerce.to_date_time["number"] = function(long$) {
  return cljs_time.coerce.from_long.call(null, long$);
};
goog.date.UtcDateTime.prototype.cljs_time$coerce$ICoerce$ = true;
goog.date.UtcDateTime.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(date_time) {
  var date_time__$1 = this;
  return date_time__$1;
};
goog.date.DateTime.prototype.cljs_time$coerce$ICoerce$ = true;
goog.date.DateTime.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(local_date_time) {
  var local_date_time__$1 = this;
  return cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, local_date_time__$1), cljs_time.core.month.call(null, local_date_time__$1), cljs_time.core.day.call(null, local_date_time__$1), cljs_time.core.hour.call(null, local_date_time__$1), cljs_time.core.minute.call(null, local_date_time__$1), cljs_time.core.second.call(null, local_date_time__$1), cljs_time.core.milli.call(null, local_date_time__$1));
};
goog.date.Date.prototype.cljs_time$coerce$ICoerce$ = true;
goog.date.Date.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(local_date) {
  var local_date__$1 = this;
  return cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, local_date__$1), cljs_time.core.month.call(null, local_date__$1), cljs_time.core.day.call(null, local_date__$1));
};
Date.prototype.cljs_time$coerce$ICoerce$ = true;
Date.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(date) {
  var date__$1 = this;
  return cljs_time.coerce.from_date.call(null, date__$1);
};
cljs_time.coerce.ICoerce["null"] = true;
cljs_time.coerce.to_date_time["null"] = function(_) {
  return null;
};
goog.provide("ghoul.parser.rss");
goog.require("cljs.core");
goog.require("cuerdas.core");
goog.require("cuerdas.core");
goog.require("cljs_time.coerce");
goog.require("cljs_time.coerce");
goog.require("cljs_time.format");
goog.require("cljs_time.format");
ghoul.parser.rss.parse_date = function parse_date(string_date) {
  return cljs_time.coerce.to_long.call(null, function() {
    try {
      return cljs_time.format.parse.call(null, cljs_time.format.formatters.call(null, new cljs.core.Keyword(null, "rfc822", "rfc822", -404628697)), cuerdas.core.replace_first.call(null, string_date, /GMT/, "+0000"));
    } catch (e9704) {
      if (e9704 instanceof Object) {
        var e = e9704;
        return console.log(string_date, e);
      } else {
        throw e9704;
      }
    }
  }());
};
ghoul.parser.rss.add_tag = function() {
  var add_tag = null;
  var add_tag__3 = function(map, node, tag) {
    return add_tag.call(null, map, node, tag, tag, cljs.core.identity);
  };
  var add_tag__4 = function(map, node, target_keyword, tag) {
    return add_tag.call(null, map, node, target_keyword, tag, cljs.core.identity);
  };
  var add_tag__5 = function(map, node, target_keyword, tag, transformer) {
    try {
      var tag_elements = node.getElements(tag);
      var to_insert = !(tag_elements == null) && tag_elements.length > 0 ? transformer.call(null, tag_elements[0].getText()) : function() {
        console.log([cljs.core.str("Not found "), cljs.core.str(tag)].join(""));
        return null;
      }();
      return cljs.core.assoc.call(null, map, cljs.core.keyword.call(null, target_keyword), to_insert);
    } catch (e9706) {
      if (e9706 instanceof Object) {
        var e = e9706;
        console.log([cljs.core.str("Error processing "), cljs.core.str(target_keyword), cljs.core.str(" "), cljs.core.str(tag)].join(""), node, e);
        return cljs.core.assoc.call(null, map, cljs.core.keyword.call(null, tag), null);
      } else {
        throw e9706;
      }
    }
  };
  add_tag = function(map, node, target_keyword, tag, transformer) {
    switch(arguments.length) {
      case 3:
        return add_tag__3.call(this, map, node, target_keyword);
      case 4:
        return add_tag__4.call(this, map, node, target_keyword, tag);
      case 5:
        return add_tag__5.call(this, map, node, target_keyword, tag, transformer);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_tag.cljs$core$IFn$_invoke$arity$3 = add_tag__3;
  add_tag.cljs$core$IFn$_invoke$arity$4 = add_tag__4;
  add_tag.cljs$core$IFn$_invoke$arity$5 = add_tag__5;
  return add_tag;
}();
ghoul.parser.rss.parse_node = function parse_node(node) {
  return ghoul.parser.rss.add_tag.call(null, ghoul.parser.rss.add_tag.call(null, ghoul.parser.rss.add_tag.call(null, ghoul.parser.rss.add_tag.call(null, ghoul.parser.rss.add_tag.call(null, ghoul.parser.rss.add_tag.call(null, cljs.core.PersistentArrayMap.EMPTY, node, "title"), node, "link"), node, "description"), node, "creator", "dc:creator"), node, "pubDate", "pubDate", ghoul.parser.rss.parse_date), node, "uid", "guid");
};
ghoul.parser.rss.parse_document = function parse_document(response) {
  try {
    var document = (new XMLDoc(response)).docNode;
    var channel_node = document.getElements("channel")[0];
    var items_node_list = channel_node.getElements("item");
    var items_parsed = cljs.core.map.call(null, ghoul.parser.rss.parse_node, function() {
      var iter__4359__auto__ = function(document, channel_node, items_node_list) {
        return function iter__9713(s__9714) {
          return new cljs.core.LazySeq(null, function(document, channel_node, items_node_list) {
            return function() {
              var s__9714__$1 = s__9714;
              while (true) {
                var temp__4126__auto__ = cljs.core.seq.call(null, s__9714__$1);
                if (temp__4126__auto__) {
                  var s__9714__$2 = temp__4126__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__9714__$2)) {
                    var c__4357__auto__ = cljs.core.chunk_first.call(null, s__9714__$2);
                    var size__4358__auto__ = cljs.core.count.call(null, c__4357__auto__);
                    var b__9716 = cljs.core.chunk_buffer.call(null, size__4358__auto__);
                    if (function() {
                      var i__9715 = 0;
                      while (true) {
                        if (i__9715 < size__4358__auto__) {
                          var x = cljs.core._nth.call(null, c__4357__auto__, i__9715);
                          cljs.core.chunk_append.call(null, b__9716, items_node_list[x]);
                          var G__9717 = i__9715 + 1;
                          i__9715 = G__9717;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9716), iter__9713.call(null, cljs.core.chunk_rest.call(null, s__9714__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9716), null);
                    }
                  } else {
                    var x = cljs.core.first.call(null, s__9714__$2);
                    return cljs.core.cons.call(null, items_node_list[x], iter__9713.call(null, cljs.core.rest.call(null, s__9714__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(document, channel_node, items_node_list), null, null);
        };
      }(document, channel_node, items_node_list);
      return iter__4359__auto__.call(null, cljs.core.range.call(null, 0, items_node_list.length - 1));
    }());
    return cljs.core.assoc.call(null, ghoul.parser.rss.add_tag.call(null, ghoul.parser.rss.add_tag.call(null, ghoul.parser.rss.add_tag.call(null, cljs.core.PersistentArrayMap.EMPTY, channel_node, "title"), channel_node, "link"), channel_node, "description"), new cljs.core.Keyword(null, "items", "items", 1031954938), items_parsed);
  } catch (e9712) {
    if (e9712 instanceof Object) {
      var e = e9712;
      console.log(e);
      return null;
    } else {
      throw e9712;
    }
  }
};
goog.provide("ghoul.common.http");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.dom");
goog.require("goog.events.EventType");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("ghoul.parser.rss");
goog.require("goog.dom");
goog.require("goog.net.XhrIo");
goog.require("cuerdas.core");
goog.require("goog.events");
goog.require("ghoul.parser.rss");
goog.require("cuerdas.core");
ghoul.common.http.method_key__GT_method_string = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "get", "get", 1683182755), "GET", new cljs.core.Keyword(null, "put", "put", 1299772570), "PUT", new cljs.core.Keyword(null, "post", "post", 269697687), "POST", new cljs.core.Keyword(null, "delete", "delete", -1768633620), "DELETE"], null);
ghoul.common.http.headers = {"Cache-Control":"no-cache"};
ghoul.common.http.send = function send(p__9693) {
  var map__9696 = p__9693;
  var map__9696__$1 = cljs.core.seq_QMARK_.call(null, map__9696) ? cljs.core.apply.call(null, cljs.core.hash_map, map__9696) : map__9696;
  var response__GT_data = cljs.core.get.call(null, map__9696__$1, new cljs.core.Keyword(null, "response-\x3edata", "response-\x3edata", 52433877));
  var data = cljs.core.get.call(null, map__9696__$1, new cljs.core.Keyword(null, "data", "data", -232669377));
  var url = cljs.core.get.call(null, map__9696__$1, new cljs.core.Keyword(null, "url", "url", 276297046));
  var method = cljs.core.get.call(null, map__9696__$1, new cljs.core.Keyword(null, "method", "method", 55703592));
  var c = cljs.core.async.chan.call(null);
  var xhr = new goog.net.XhrIo;
  var method__$1 = ghoul.common.http.method_key__GT_method_string.call(null, method);
  try {
    xhr.send(url, method__$1, data, ghoul.common.http.headers);
  } catch (e9697) {
    if (e9697 instanceof Error) {
      var e_9698 = e9697;
      cljs.core.async.put_BANG_.call(null, c, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "result", "result", 1415092211), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), [cljs.core.str(e_9698.message)].join("")], null));
    } else {
      throw e9697;
    }
  }
  goog.events.listen(xhr, goog.net.EventType.SUCCESS, function(c, xhr, method__$1, map__9696, map__9696__$1, response__GT_data, data, url, method) {
    return function(e) {
      return cljs.core.async.put_BANG_.call(null, c, function() {
        var response = xhr.getResponseText();
        var data__$1 = response__GT_data.call(null, response);
        return cljs.core.assoc.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "result", "result", 1415092211), new cljs.core.Keyword(null, "success", "success", 1890645906), new cljs.core.Keyword(null, "data", "data", -232669377), data__$1);
      }());
    };
  }(c, xhr, method__$1, map__9696, map__9696__$1, response__GT_data, data, url, method));
  goog.events.listen(xhr, goog.net.EventType.ERROR, function(c, xhr, method__$1, map__9696, map__9696__$1, response__GT_data, data, url, method) {
    return function(e) {
      return cljs.core.async.put_BANG_.call(null, c, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "result", "result", 1415092211), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), [cljs.core.str(xhr.formatMsg_("Sending request")), cljs.core.str(xhr.getResponseXml())].join("")], null));
    };
  }(c, xhr, method__$1, map__9696, map__9696__$1, response__GT_data, data, url, method));
  return c;
};
ghoul.common.http.get = function get(url) {
  return ghoul.common.http.send.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "url", "url", 276297046), url, new cljs.core.Keyword(null, "response-\x3edata", "response-\x3edata", 52433877), cljs.core.identity], null));
};
ghoul.common.http.post = function post(url, data) {
  return ghoul.common.http.send.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "post", "post", 269697687), new cljs.core.Keyword(null, "url", "url", 276297046), url, new cljs.core.Keyword(null, "data", "data", -232669377), data, new cljs.core.Keyword(null, "response-\x3edata", "response-\x3edata", 52433877), cljs.core.identity], null));
};
ghoul.common.http.put = function put(url, data) {
  return ghoul.common.http.send.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "put", "put", 1299772570), new cljs.core.Keyword(null, "url", "url", 276297046), url, new cljs.core.Keyword(null, "data", "data", -232669377), data, new cljs.core.Keyword(null, "response-\x3edata", "response-\x3edata", 52433877), cljs.core.identity], null));
};
ghoul.common.http.delete$ = function delete$(url) {
  return ghoul.common.http.send.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "delete", "delete", -1768633620), new cljs.core.Keyword(null, "url", "url", 276297046), url, new cljs.core.Keyword(null, "response-\x3edata", "response-\x3edata", 52433877), cljs.core.identity], null));
};
ghoul.common.http.cors_service = "https://cors-anywhere.herokuapp.com/";
ghoul.common.http.get_rss = function get_rss(url) {
  var url__$1 = cuerdas.core.replace_first.call(null, cuerdas.core.replace_first.call(null, url, /https:\/\//, ghoul.common.http.cors_service), /http:\/\//, ghoul.common.http.cors_service);
  return ghoul.common.http.send.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "method", "method", 55703592), new cljs.core.Keyword(null, "get", "get", 1683182755), new cljs.core.Keyword(null, "url", "url", 276297046), url__$1, new cljs.core.Keyword(null, "response-\x3edata", "response-\x3edata", 52433877), ghoul.parser.rss.parse_document], null));
};
goog.provide("ghoul.worker.feed_updater");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("ghoul.repository.item");
goog.require("ghoul.repository.item");
goog.require("ghoul.common.http");
goog.require("ghoul.common.http");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
ghoul.worker.feed_updater.update_feed = function update_feed(feed_uid, feed_url) {
  var c__5809__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__5809__auto__) {
    return function() {
      var f__5810__auto__ = function() {
        var switch__5794__auto__ = function(c__5809__auto__) {
          return function(state_9623) {
            var state_val_9624 = state_9623[1];
            if (state_val_9624 === 7) {
              var inst_9619 = state_9623[2];
              var state_9623__$1 = state_9623;
              var statearr_9625_9669 = state_9623__$1;
              statearr_9625_9669[2] = inst_9619;
              statearr_9625_9669[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_9624 === 20) {
                var inst_9599 = state_9623[7];
                var inst_9592 = state_9623[8];
                var inst_9599__$1 = cljs.core.assoc.call(null, inst_9592, new cljs.core.Keyword(null, "feeduid", "feeduid", 1367071876), feed_uid);
                var inst_9600 = ghoul.repository.item.add_item.call(null, inst_9599__$1);
                var state_9623__$1 = function() {
                  var statearr_9626 = state_9623;
                  statearr_9626[7] = inst_9599__$1;
                  return statearr_9626;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9623__$1, 23, inst_9600);
              } else {
                if (state_val_9624 === 1) {
                  var inst_9541 = [cljs.core.str("Refreshing: "), cljs.core.str(feed_url)].join("");
                  var inst_9542 = console.log(inst_9541);
                  var inst_9543 = ghoul.common.http.get_rss.call(null, feed_url);
                  var state_9623__$1 = function() {
                    var statearr_9627 = state_9623;
                    statearr_9627[9] = inst_9542;
                    return statearr_9627;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9623__$1, 2, inst_9543);
                } else {
                  if (state_val_9624 === 4) {
                    var inst_9621 = state_9623[2];
                    var state_9623__$1 = state_9623;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9623__$1, inst_9621);
                  } else {
                    if (state_val_9624 === 15) {
                      var inst_9617 = state_9623[2];
                      var state_9623__$1 = state_9623;
                      var statearr_9628_9670 = state_9623__$1;
                      statearr_9628_9670[2] = inst_9617;
                      statearr_9628_9670[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_9624 === 21) {
                        var state_9623__$1 = state_9623;
                        var statearr_9629_9671 = state_9623__$1;
                        statearr_9629_9671[2] = null;
                        statearr_9629_9671[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_9624 === 13) {
                          var inst_9583 = state_9623[10];
                          var inst_9585 = cljs.core.chunked_seq_QMARK_.call(null, inst_9583);
                          var state_9623__$1 = state_9623;
                          if (inst_9585) {
                            var statearr_9630_9672 = state_9623__$1;
                            statearr_9630_9672[1] = 16;
                          } else {
                            var statearr_9631_9673 = state_9623__$1;
                            statearr_9631_9673[1] = 17;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_9624 === 22) {
                            var inst_9583 = state_9623[10];
                            var inst_9610 = state_9623[2];
                            var inst_9611 = cljs.core.next.call(null, inst_9583);
                            var inst_9553 = inst_9611;
                            var inst_9554 = null;
                            var inst_9555 = 0;
                            var inst_9556 = 0;
                            var state_9623__$1 = function() {
                              var statearr_9632 = state_9623;
                              statearr_9632[11] = inst_9555;
                              statearr_9632[12] = inst_9554;
                              statearr_9632[13] = inst_9553;
                              statearr_9632[14] = inst_9610;
                              statearr_9632[15] = inst_9556;
                              return statearr_9632;
                            }();
                            var statearr_9633_9674 = state_9623__$1;
                            statearr_9633_9674[2] = null;
                            statearr_9633_9674[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_9624 === 6) {
                              var inst_9553 = state_9623[13];
                              var inst_9583 = state_9623[10];
                              var inst_9583__$1 = cljs.core.seq.call(null, inst_9553);
                              var state_9623__$1 = function() {
                                var statearr_9634 = state_9623;
                                statearr_9634[10] = inst_9583__$1;
                                return statearr_9634;
                              }();
                              if (inst_9583__$1) {
                                var statearr_9635_9675 = state_9623__$1;
                                statearr_9635_9675[1] = 13;
                              } else {
                                var statearr_9636_9676 = state_9623__$1;
                                statearr_9636_9676[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_9624 === 17) {
                                var inst_9592 = state_9623[8];
                                var inst_9583 = state_9623[10];
                                var inst_9592__$1 = cljs.core.first.call(null, inst_9583);
                                var inst_9593 = (new cljs.core.Keyword(null, "uid", "uid", -1447769400)).cljs$core$IFn$_invoke$arity$1(inst_9592__$1);
                                var inst_9594 = ghoul.repository.item.get_item.call(null, feed_uid, inst_9593);
                                var state_9623__$1 = function() {
                                  var statearr_9637 = state_9623;
                                  statearr_9637[8] = inst_9592__$1;
                                  return statearr_9637;
                                }();
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9623__$1, 19, inst_9594);
                              } else {
                                if (state_val_9624 === 3) {
                                  var inst_9555 = state_9623[11];
                                  var inst_9556 = state_9623[15];
                                  var inst_9558 = inst_9556 < inst_9555;
                                  var inst_9559 = inst_9558;
                                  var state_9623__$1 = state_9623;
                                  if (cljs.core.truth_(inst_9559)) {
                                    var statearr_9638_9677 = state_9623__$1;
                                    statearr_9638_9677[1] = 5;
                                  } else {
                                    var statearr_9639_9678 = state_9623__$1;
                                    statearr_9639_9678[1] = 6;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_9624 === 12) {
                                    var inst_9568 = state_9623[16];
                                    var inst_9571 = state_9623[2];
                                    var inst_9572 = [new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "result", "result", 1415092211), new cljs.core.Keyword(null, "data", "data", -232669377)];
                                    var inst_9573 = ["update", "ok", inst_9568];
                                    var inst_9574 = cljs.core.PersistentHashMap.fromArrays(inst_9572, inst_9573);
                                    var inst_9575 = cljs.core.clj__GT_js.call(null, inst_9574);
                                    var inst_9576 = postMessage(inst_9575);
                                    var state_9623__$1 = function() {
                                      var statearr_9640 = state_9623;
                                      statearr_9640[17] = inst_9571;
                                      return statearr_9640;
                                    }();
                                    var statearr_9641_9679 = state_9623__$1;
                                    statearr_9641_9679[2] = inst_9576;
                                    statearr_9641_9679[1] = 11;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_9624 === 2) {
                                      var inst_9545 = state_9623[2];
                                      var inst_9546 = (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(inst_9545);
                                      var inst_9547 = (new cljs.core.Keyword(null, "items", "items", 1031954938)).cljs$core$IFn$_invoke$arity$1(inst_9546);
                                      var inst_9552 = cljs.core.seq.call(null, inst_9547);
                                      var inst_9553 = inst_9552;
                                      var inst_9554 = null;
                                      var inst_9555 = 0;
                                      var inst_9556 = 0;
                                      var state_9623__$1 = function() {
                                        var statearr_9642 = state_9623;
                                        statearr_9642[11] = inst_9555;
                                        statearr_9642[12] = inst_9554;
                                        statearr_9642[13] = inst_9553;
                                        statearr_9642[15] = inst_9556;
                                        return statearr_9642;
                                      }();
                                      var statearr_9643_9680 = state_9623__$1;
                                      statearr_9643_9680[2] = null;
                                      statearr_9643_9680[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_9624 === 23) {
                                        var inst_9599 = state_9623[7];
                                        var inst_9602 = state_9623[2];
                                        var inst_9603 = [new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "result", "result", 1415092211), new cljs.core.Keyword(null, "data", "data", -232669377)];
                                        var inst_9604 = ["update", "ok", inst_9599];
                                        var inst_9605 = cljs.core.PersistentHashMap.fromArrays(inst_9603, inst_9604);
                                        var inst_9606 = cljs.core.clj__GT_js.call(null, inst_9605);
                                        var inst_9607 = postMessage(inst_9606);
                                        var state_9623__$1 = function() {
                                          var statearr_9647 = state_9623;
                                          statearr_9647[18] = inst_9602;
                                          return statearr_9647;
                                        }();
                                        var statearr_9648_9681 = state_9623__$1;
                                        statearr_9648_9681[2] = inst_9607;
                                        statearr_9648_9681[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_9624 === 19) {
                                          var inst_9596 = state_9623[2];
                                          var inst_9597 = cljs.core._EQ_.call(null, inst_9596, new cljs.core.Keyword(null, "not-found", "not-found", -629079980));
                                          var state_9623__$1 = state_9623;
                                          if (inst_9597) {
                                            var statearr_9649_9682 = state_9623__$1;
                                            statearr_9649_9682[1] = 20;
                                          } else {
                                            var statearr_9650_9683 = state_9623__$1;
                                            statearr_9650_9683[1] = 21;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_9624 === 11) {
                                            var inst_9555 = state_9623[11];
                                            var inst_9554 = state_9623[12];
                                            var inst_9553 = state_9623[13];
                                            var inst_9556 = state_9623[15];
                                            var inst_9579 = state_9623[2];
                                            var inst_9580 = inst_9556 + 1;
                                            var tmp9644 = inst_9555;
                                            var tmp9645 = inst_9554;
                                            var tmp9646 = inst_9553;
                                            var inst_9553__$1 = tmp9646;
                                            var inst_9554__$1 = tmp9645;
                                            var inst_9555__$1 = tmp9644;
                                            var inst_9556__$1 = inst_9580;
                                            var state_9623__$1 = function() {
                                              var statearr_9651 = state_9623;
                                              statearr_9651[11] = inst_9555__$1;
                                              statearr_9651[12] = inst_9554__$1;
                                              statearr_9651[19] = inst_9579;
                                              statearr_9651[13] = inst_9553__$1;
                                              statearr_9651[15] = inst_9556__$1;
                                              return statearr_9651;
                                            }();
                                            var statearr_9652_9684 = state_9623__$1;
                                            statearr_9652_9684[2] = null;
                                            statearr_9652_9684[1] = 3;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_9624 === 9) {
                                              var inst_9568 = state_9623[16];
                                              var inst_9561 = state_9623[20];
                                              var inst_9568__$1 = cljs.core.assoc.call(null, inst_9561, new cljs.core.Keyword(null, "feeduid", "feeduid", 1367071876), feed_uid);
                                              var inst_9569 = ghoul.repository.item.add_item.call(null, inst_9568__$1);
                                              var state_9623__$1 = function() {
                                                var statearr_9653 = state_9623;
                                                statearr_9653[16] = inst_9568__$1;
                                                return statearr_9653;
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9623__$1, 12, inst_9569);
                                            } else {
                                              if (state_val_9624 === 5) {
                                                var inst_9554 = state_9623[12];
                                                var inst_9556 = state_9623[15];
                                                var inst_9561 = state_9623[20];
                                                var inst_9561__$1 = cljs.core._nth.call(null, inst_9554, inst_9556);
                                                var inst_9562 = (new cljs.core.Keyword(null, "uid", "uid", -1447769400)).cljs$core$IFn$_invoke$arity$1(inst_9561__$1);
                                                var inst_9563 = ghoul.repository.item.get_item.call(null, feed_uid, inst_9562);
                                                var state_9623__$1 = function() {
                                                  var statearr_9654 = state_9623;
                                                  statearr_9654[20] = inst_9561__$1;
                                                  return statearr_9654;
                                                }();
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9623__$1, 8, inst_9563);
                                              } else {
                                                if (state_val_9624 === 14) {
                                                  var state_9623__$1 = state_9623;
                                                  var statearr_9655_9685 = state_9623__$1;
                                                  statearr_9655_9685[2] = null;
                                                  statearr_9655_9685[1] = 15;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_9624 === 16) {
                                                    var inst_9583 = state_9623[10];
                                                    var inst_9587 = cljs.core.chunk_first.call(null, inst_9583);
                                                    var inst_9588 = cljs.core.chunk_rest.call(null, inst_9583);
                                                    var inst_9589 = cljs.core.count.call(null, inst_9587);
                                                    var inst_9553 = inst_9588;
                                                    var inst_9554 = inst_9587;
                                                    var inst_9555 = inst_9589;
                                                    var inst_9556 = 0;
                                                    var state_9623__$1 = function() {
                                                      var statearr_9656 = state_9623;
                                                      statearr_9656[11] = inst_9555;
                                                      statearr_9656[12] = inst_9554;
                                                      statearr_9656[13] = inst_9553;
                                                      statearr_9656[15] = inst_9556;
                                                      return statearr_9656;
                                                    }();
                                                    var statearr_9657_9686 = state_9623__$1;
                                                    statearr_9657_9686[2] = null;
                                                    statearr_9657_9686[1] = 3;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_9624 === 10) {
                                                      var state_9623__$1 = state_9623;
                                                      var statearr_9658_9687 = state_9623__$1;
                                                      statearr_9658_9687[2] = null;
                                                      statearr_9658_9687[1] = 11;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_9624 === 18) {
                                                        var inst_9614 = state_9623[2];
                                                        var state_9623__$1 = state_9623;
                                                        var statearr_9659_9688 = state_9623__$1;
                                                        statearr_9659_9688[2] = inst_9614;
                                                        statearr_9659_9688[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_9624 === 8) {
                                                          var inst_9565 = state_9623[2];
                                                          var inst_9566 = cljs.core._EQ_.call(null, inst_9565, new cljs.core.Keyword(null, "not-found", "not-found", -629079980));
                                                          var state_9623__$1 = state_9623;
                                                          if (inst_9566) {
                                                            var statearr_9660_9689 = state_9623__$1;
                                                            statearr_9660_9689[1] = 9;
                                                          } else {
                                                            var statearr_9661_9690 = state_9623__$1;
                                                            statearr_9661_9690[1] = 10;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__5809__auto__);
        return function(switch__5794__auto__, c__5809__auto__) {
          return function() {
            var state_machine__5795__auto__ = null;
            var state_machine__5795__auto____0 = function() {
              var statearr_9665 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_9665[0] = state_machine__5795__auto__;
              statearr_9665[1] = 1;
              return statearr_9665;
            };
            var state_machine__5795__auto____1 = function(state_9623) {
              while (true) {
                var ret_value__5796__auto__ = function() {
                  try {
                    while (true) {
                      var result__5797__auto__ = switch__5794__auto__.call(null, state_9623);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__5797__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__5797__auto__;
                      }
                      break;
                    }
                  } catch (e9666) {
                    if (e9666 instanceof Object) {
                      var ex__5798__auto__ = e9666;
                      var statearr_9667_9691 = state_9623;
                      statearr_9667_9691[5] = ex__5798__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9623);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e9666;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__5796__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__9692 = state_9623;
                  state_9623 = G__9692;
                  continue;
                } else {
                  return ret_value__5796__auto__;
                }
                break;
              }
            };
            state_machine__5795__auto__ = function(state_9623) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5795__auto____0.call(this);
                case 1:
                  return state_machine__5795__auto____1.call(this, state_9623);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5795__auto____0;
            state_machine__5795__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5795__auto____1;
            return state_machine__5795__auto__;
          }();
        }(switch__5794__auto__, c__5809__auto__);
      }();
      var state__5811__auto__ = function() {
        var statearr_9668 = f__5810__auto__.call(null);
        statearr_9668[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5809__auto__;
        return statearr_9668;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5811__auto__);
    };
  }(c__5809__auto__));
  return c__5809__auto__;
};
ghoul.worker.feed_updater.manage_command = function manage_command(event) {
  var data = cljs.core.js__GT_clj.call(null, event.data, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(data), "update")) {
    return ghoul.worker.feed_updater.update_feed.call(null, (new cljs.core.Keyword(null, "uid", "uid", -1447769400)).cljs$core$IFn$_invoke$arity$1(data), (new cljs.core.Keyword(null, "url", "url", 276297046)).cljs$core$IFn$_invoke$arity$1(data));
  } else {
    return console.log([cljs.core.str(event)].join(""));
  }
};
addEventListener("message", ghoul.worker.feed_updater.manage_command);
ghoul.repository.item.init_database.call(null);
goog.provide("ghoul.common.utils");
goog.require("cljs.core");
goog.require("cuerdas.core");
goog.require("cuerdas.core");
ghoul.common.utils.restore_tags = function restore_tags(string) {
  return cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, cuerdas.core.replace.call(null, string, "\x26gt;", "\x3e"), "\x26lt;", "\x3c"), "\x26quot;", '"'), "\x26apos;", "'"), "\x26amp;", "\x26"), "\x26#34;", '"'), "\x26#8220;", "\u201c"), "\x26#8221;", "\u201d");
};
ghoul.common.utils.remove_unallowed_tags = function remove_unallowed_tags(string) {
  return cuerdas.core.strip_tags.call(null, cuerdas.core.strip_tags.call(null, string, "script"), "link");
};
ghoul.common.utils.project = function() {
  var project__delegate = function(data, keys) {
    return cljs.core.reduce.call(null, function(p1__9699_SHARP_, p2__9700_SHARP_) {
      return cljs.core.assoc.call(null, p1__9699_SHARP_, p2__9700_SHARP_, p2__9700_SHARP_.call(null, data));
    }, cljs.core.PersistentArrayMap.EMPTY, keys);
  };
  var project = function(data, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return project__delegate.call(this, data, keys);
  };
  project.cljs$lang$maxFixedArity = 1;
  project.cljs$lang$applyTo = function(arglist__9701) {
    var data = cljs.core.first(arglist__9701);
    var keys = cljs.core.rest(arglist__9701);
    return project__delegate(data, keys);
  };
  project.cljs$core$IFn$_invoke$arity$variadic = project__delegate;
  return project;
}();
ghoul.common.utils.mapply = function() {
  var mapply__delegate = function(f, args) {
    return cljs.core.apply.call(null, f, cljs.core.apply.call(null, cljs.core.concat, cljs.core.butlast.call(null, args), cljs.core.last.call(null, args)));
  };
  var mapply = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mapply__delegate.call(this, f, args);
  };
  mapply.cljs$lang$maxFixedArity = 1;
  mapply.cljs$lang$applyTo = function(arglist__9702) {
    var f = cljs.core.first(arglist__9702);
    var args = cljs.core.rest(arglist__9702);
    return mapply__delegate(f, args);
  };
  mapply.cljs$core$IFn$_invoke$arity$variadic = mapply__delegate;
  return mapply;
}();

//# sourceMappingURL=worker.js.map